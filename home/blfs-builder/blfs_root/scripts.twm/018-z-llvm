#!/bin/bash
set -e
unset MAKELEVEL

export JH_PKG_DIR=llvm
SRC_DIR=${JH_SRC_ARCHIVE}${JH_SRC_SUBDIRS:+/${JH_PKG_DIR}}
BUILD_DIR=${JH_BUILD_ROOT}${JH_BUILD_SUBDIRS:+/${JH_PKG_DIR}}
mkdir -p $SRC_DIR
mkdir -p $BUILD_DIR

cd $SRC_DIR
PACKAGE=llvm-12.0.1.src.tar.xz
if [[ ! -f $PACKAGE ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$PACKAGE ]] ; then
    cp $JH_SRC_ARCHIVE/$PACKAGE $PACKAGE
  else
    wget -T 30 -t 5 https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/llvm-12.0.1.src.tar.xz ||
    wget -T 30 -t 5 ${JH_FTP_SERVER}svn/l/$PACKAGE
  fi
fi
echo "72a257604efa1d32ef85a37cd9c66873  $PACKAGE" | md5sum -c -

PACKAGE1=clang-12.0.1.src.tar.xz
if [[ ! -f $PACKAGE1 ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$PACKAGE1 ]] ; then
    cp $JH_SRC_ARCHIVE/$PACKAGE1 $PACKAGE1
  else
    wget -T 30 -t 5 https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang-12.0.1.src.tar.xz ||
    wget -T 30 -t 5 ${JH_FTP_SERVER}svn/c/$PACKAGE1
  fi
fi
echo "03d77af27fcbeeae4414fb4713b9fd7e  $PACKAGE1" | md5sum -c -
[[ "$SRC_DIR" != "$BUILD_DIR" ]] && ln -sf $SRC_DIR/$PACKAGE1 $BUILD_DIR

PACKAGE1=compiler-rt-12.0.1.src.tar.xz
if [[ ! -f $PACKAGE1 ]] ; then
  if [[ -f $JH_SRC_ARCHIVE/$PACKAGE1 ]] ; then
    cp $JH_SRC_ARCHIVE/$PACKAGE1 $PACKAGE1
  else
    wget -T 30 -t 5 https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/compiler-rt-12.0.1.src.tar.xz ||
    wget -T 30 -t 5 ${JH_FTP_SERVER}svn/c/$PACKAGE1
  fi
fi
echo "40095daa9070b20eef9bdd32fdc53db5  $PACKAGE1" | md5sum -c -
[[ "$SRC_DIR" != "$BUILD_DIR" ]] && ln -sf $SRC_DIR/$PACKAGE1 $BUILD_DIR

cd $BUILD_DIR
find . -maxdepth 1 -mindepth 1 -type d | xargs sudo rm -rf

case $PACKAGE in
  *.tar.gz|*.tar.bz2|*.tar.xz|*.tgz|*.tar.lzma)
     tar -xvf $SRC_DIR/$PACKAGE > unpacked
     JH_UNPACKDIR=`grep '[^./]\+' unpacked | head -n1 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.tar.lz)
     bsdtar -xvf $SRC_DIR/$PACKAGE 2> unpacked
     JH_UNPACKDIR=`head -n1 unpacked | cut  -d" " -f2 | sed 's@^\./@@;s@/.*@@'`
     ;;
  *.zip)
     zipinfo -1 $SRC_DIR/$PACKAGE > unpacked
     JH_UNPACKDIR="$(sed 's@/.*@@' unpacked | uniq )"
     if test $(wc -w <<< $JH_UNPACKDIR) -eq 1; then
       unzip $SRC_DIR/$PACKAGE
     else
       JH_UNPACKDIR=${PACKAGE%.zip}
       unzip -d $JH_UNPACKDIR $SRC_DIR/$PACKAGE
     fi
     ;;
  *)
     JH_UNPACKDIR=$JH_PKG_DIR-build
     mkdir $JH_UNPACKDIR
     cp $SRC_DIR/$PACKAGE $JH_UNPACKDIR
     ADDITIONAL="$(find . -mindepth 1 -maxdepth 1 -type l)"
     if [ -n "$ADDITIONAL" ]; then
         cp $ADDITIONAL $JH_UNPACKDIR
     fi
     ;;
esac
export JH_UNPACKDIR
cd $JH_UNPACKDIR

tar -xf ../clang-12.0.1.src.tar.xz -C tools
mv tools/clang-12.0.1.src tools/clang
tar -xf ../compiler-rt-12.0.1.src.tar.xz -C projects
mv projects/compiler-rt-12.0.1.src projects/compiler-rt
grep -rl '#!.*python' | xargs sed -i '1s/python$/python3/'
mkdir -v build
cd       build

CC=gcc CXX=g++                                  \
cmake -DCMAKE_INSTALL_PREFIX=/usr               \
      -DLLVM_ENABLE_FFI=ON                      \
      -DCMAKE_BUILD_TYPE=Release                \
      -DLLVM_BUILD_LLVM_DYLIB=ON                \
      -DLLVM_LINK_LLVM_DYLIB=ON                 \
      -DLLVM_ENABLE_RTTI=ON                     \
      -DLLVM_TARGETS_TO_BUILD="host;AMDGPU;BPF" \
      -DLLVM_BUILD_TESTS=ON                     \
      -DLLVM_BINUTILS_INCDIR=/usr/include       \
      -Wno-dev -G Ninja ..
ninja
#cmake -DLLVM_BUILD_DOCS=ON            \
#      -DLLVM_ENABLE_SPHINX=ON         \
#      -DSPHINX_WARNINGS_AS_ERRORS=OFF \
#      -Wno-dev -G Ninja ..
#ninja docs-llvm-html  docs-llvm-man
#ninja docs-clang-html docs-clang-man
#ninja check-all || true
sudo -E sh << ROOT_EOF
ninja install
#install -v -m644 docs/man/* /usr/share/man/man1
#install -v -d -m755 /usr/share/doc/llvm-12.0.1/llvm-html
#cp -Rv docs/html/* /usr/share/doc/llvm-12.0.1/llvm-html

#install -v -m644 tools/clang/docs/man/* /usr/share/man/man1
#install -v -d -m755 /usr/share/doc/llvm-12.0.1/clang-html
#cp -Rv tools/clang/docs/html/* /usr/share/doc/llvm-12.0.1/clang-html


for libdir in /lib /usr/lib \$(find /opt -name lib); do
  find \$libdir -name \\*.la           \\
             ! -path \\*ImageMagick\\* \\
               -delete
done
ROOT_EOF
sudo /sbin/ldconfig

cd $BUILD_DIR
[[ -n "$JH_KEEP_FILES" ]] || sudo rm -rf $JH_UNPACKDIR unpacked

exit
