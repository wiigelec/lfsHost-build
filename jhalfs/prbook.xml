<?xml version="1.0"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<book>
<!-- Another test -->
<!-- Another test -->
<bookinfo xml:base="prologue/bookinfo.xml">
  <title>Linux From Scratch</title>
  <subtitle revision="sysv">Version 11.0 </subtitle>
  
  <subtitle>Published September 1st, 2021</subtitle>

  <authorgroup>
    <author>
      <firstname>Created by Gerard</firstname>
      <surname>Beekmans</surname>
    </author>
    <author>
      <firstname>Managing Editor: Bruce</firstname>
      <surname>Dubbs</surname>
    </author>

    

    
  </authorgroup>

  <copyright id="copyright">
    <year>1999-2021</year>
    <holder>Gerard Beekmans</holder>
  </copyright>

  <legalnotice>

    <para>Copyright Â© 1999-2021, Gerard Beekmans</para>

    <para>All rights reserved.</para>

    <para>This book is licensed under a <xref linkend="CC"/>.</para>
    <para>Computer instructions may be extracted from the book under the
          <xref linkend="MIT"/>.</para>

    <para><trademark class="registered">Linux</trademark> is a registered trademark of
    Linus Torvalds.</para>

  </legalnotice>

</bookinfo>
<!--
<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="prologue/dedication.xml"/>
-->
<preface id="preface" xml:base="prologue/preface.xml">
  <?dbhtml dir="prologue"?>
  <?dbhtml filename="preface.html"?>

  <title>Preface</title>

  <sect1 id="pre-foreword">
  <?dbhtml filename="foreword.html"?>

  <title>Foreword</title>

<para>My journey to learn and better understand Linux began 
back in 1998. I had just installed my first Linux distribution and had
quickly become intrigued with the whole concept and philosophy behind
Linux.</para>

<para>There are always many ways to accomplish a single task. The same can be
said about Linux distributions. A great many have existed over the years.  Some
still exist, some have morphed into something else, yet others have been
relegated to our memories.  They all do things differently to suit the needs of
their target audience.  Because so many different ways to accomplish the same
end goal exist, I began to realize I no longer had to be limited by any one
implementation. Prior to discovering Linux, we simply put up with issues in
other Operating Systems as you had no choice. It was what it was, whether you
liked it or not. With Linux, the concept of choice began to emerge.  If you
didn't like something, you were free, even encouraged, to change it.</para>

<para>I tried a number of distributions and could not decide on any one. They
were great systems in their own right. It wasn't a matter of right and
wrong anymore. It had become a matter of personal taste. With all that
choice available, it became apparent that there would not be a single
system that would be perfect for me. So I set out to create my own Linux
system that would fully conform to my personal preferences.</para>

<para>To truly make it my own system, I resolved to compile everything from
source code instead of using pre-compiled binary packages. This
<quote>perfect</quote> Linux system would have the strengths of various
systems without their perceived weaknesses. At first, the idea was rather
daunting. I remained committed to the idea that such a system could be
built.</para>

<para>After sorting through issues such as circular dependencies and compile-time
errors, I finally built a custom-built Linux system. It was fully
operational and perfectly usable like any of the other Linux systems out
there at the time. But it was my own creation. It was very satisfying to
have put together such a system myself. The only thing better would have
been to create each piece of software myself. This was the next best
thing.</para>

<para>As I shared my goals and experiences with other members of the Linux
community, it became apparent that there was a sustained interest in these
ideas. It quickly became plain that such custom-built Linux systems
serve not only to meet user specific requirements, but also serve as an
ideal learning opportunity for programmers and system administrators to
enhance their (existing) Linux skills. Out of this broadened interest, the
<emphasis>Linux From Scratch Project</emphasis> was born.</para>

<para>This Linux From Scratch book is the central core around that project. It
provides the background and instructions necessary for you to design and
build your own system. While this book provides a template that will result
in a correctly working system, you are free to alter the instructions to
suit yourself, which is, in part, an important part of this project. You
remain in control; we just lend a helping hand to get you started on your
own journey.</para>

<para>I sincerely hope you will have a great time working on your own Linux From
Scratch system and enjoy the numerous benefits of having a system that is
truly your own.</para>

<literallayout format="linespecific" class="normal">--
Gerard Beekmans
gerard@linuxfromscratch.org</literallayout>

</sect1>
  <sect1 id="pre-audience">
  <?dbhtml filename="audience.html"?>

  <title>Audience</title>

<para>There are many reasons why you would want to read this book. One of the
questions many people raise is, <quote>why go through all the hassle of manually
building a Linux system from scratch when you can just download and install
an existing one?</quote></para>

<para>One important reason for this project's existence is to help you learn
how a Linux system works from the inside out. Building an LFS system helps
demonstrate what makes Linux tick, and how things work together and depend on
each other. One of the best things that this learning experience can provide is
the ability to customize a Linux system to suit your own unique needs.</para>

<para>Another key benefit of LFS is that it allows you to have more control
over the system without relying on someone else's Linux implementation. With
LFS, you are in the driver's seat and dictate every aspect of the
system.</para>

<para>LFS allows you to create very compact Linux systems. When installing
regular distributions, you are often forced to install a great many
programs which are probably never used or understood. These programs waste
resources. You may argue that with today's hard drive and CPUs, such
resources are no longer a consideration. Sometimes, however, you are still
constrained by size considerations if nothing else. Think about bootable
CDs, USB sticks, and embedded systems. Those are areas where LFS can be
beneficial.</para>

<para>Another advantage of a custom built Linux system is security. By compiling
the entire system from source code, you are empowered to audit everything
and apply all the security patches desired. It is no longer necessary to
wait for somebody else to compile binary packages that fix a security hole.
Unless you examine the patch and implement it yourself, you have no
guarantee that the new binary package was built correctly and adequately
fixes the problem.</para>

<para>The goal of Linux From Scratch is to build a complete and usable
foundation-level system. If you do not wish to build your own Linux system
from scratch, you may nevertheless benefit from the information in this
book.</para>

<para>There are too many other good reasons to build your own LFS system to
list them all here. In the end, education is by far the most powerful of
reasons. As you continue in your LFS experience, you will discover the power
that information and knowledge truly bring.</para>

</sect1>
  <sect1 id="pre-architecture">
  <?dbhtml filename="architecture.html"?>

  <title>LFS Target Architectures</title>

<para>The primary target architectures of LFS are the AMD/Intel x86 (32-bit)
and x86_64 (64-bit) CPUs.  On the other hand, the instructions in this book are
also known to work, with some modifications, with the Power PC and ARM CPUs. To
build a system that utilizes one of these CPUs, the main prerequisite, in
addition to those on the next page, is an existing Linux system such as an
earlier LFS installation, Ubuntu, Red Hat/Fedora, SuSE, or other distribution
that targets the architecture that you have. Also note that a 32-bit
distribution can be installed and used as a host system on a 64-bit AMD/Intel
computer.</para>

<para>For building LFS, the gain of building on a 64-bit system
compared to a 32-bit system is minimal.
For example, in a test build of LFS-9.1 on a Core i7-4790 CPU based system,
using 4 cores, the following statistics were measured:</para>

<screen format="linespecific"><computeroutput moreinfo="none">Architecture Build Time     Build Size
32-bit       239.9 minutes  3.6 GB
64-bit       233.2 minutes  4.4 GB</computeroutput></screen>

<para>As you can see, on the same hardware, the 64-bit build is only 3% faster
and is 22% larger than the 32-bit build. If you plan to use LFS as a LAMP
server, or a firewall, a 32-bit CPU may be largely sufficient. On the other
hand, several packages in BLFS now need more than 4GB of RAM to be built
and/or to run, so that if you plan to use LFS as a desktop, the LFS authors
recommend building on a 64-bit system.</para>

<para>The default 64-bit build that results from LFS is considered a
<quote>pure</quote> 64-bit system. That is, it supports 64-bit executables
only. Building a <quote>multi-lib</quote> system requires compiling many
applications twice, once for a 32-bit system and once for a 64-bit system.
This is not directly supported in LFS because it would interfere with the
educational objective of providing the instructions needed for a
straightforward base Linux system. Some LFS/BLFS editors maintain a fork
of LFS for multilib, which is accessible at <ulink url="https://www.linuxfromscratch.org/~thomas/multilib/index.html"/>. But it
is an advanced topic.</para>

</sect1>
  <sect1 id="pre-prerequisites">
  <?dbhtml filename="prerequisites.html"?>

  <title>Prerequisites</title>

  <para>Building an LFS system is not a simple task. It requires a certain
  level of existing knowledge of Unix system administration in order to resolve
  problems and correctly execute the commands listed. In particular, as an
  absolute minimum, you should already have the ability to use the
  command line (shell) to copy or move files and directories, list directory
  and file contents, and change the current directory. It is also expected that
  you have a reasonable knowledge of using and installing Linux
  software.</para>

  <para>Because the LFS book assumes <emphasis>at least</emphasis> this basic
  level of skill, the various LFS support forums are unlikely to be able to
  provide you with much assistance in these areas. You will find that your
  questions regarding such basic knowledge will likely go unanswered or you
  will simply be referred to the LFS essential pre-reading list.</para>

  <para>Before building an LFS system, we recommend reading the following:</para>

  <itemizedlist>
    <listitem>
      <para>Software-Building-HOWTO
      <ulink url="http://www.tldp.org/HOWTO/Software-Building-HOWTO.html"/></para>

      <para>This is a comprehensive guide to building and installing
      <quote>generic</quote> Unix software packages under Linux. Although it
      was written some time ago, it still provides a good summary of the
      basic techniques needed to build and install software.</para>
    </listitem>

    <listitem>
      <para>Beginner's Guide to Installing from Source
      <ulink url="http://moi.vonos.net/linux/beginners-installing-from-source/"/></para>

      <para>This guide provides a good summary of basic skills and
      techniques needed to build software from source code.</para>
    </listitem>
<!--
    <listitem>
      <para>The Essential Pre-Reading Hint
      <ulink url="&hints-root;essential_prereading.txt"/></para>

      <para>This is an LFS Hint written specifically for users new to Linux.
      It includes a list of links to excellent sources of information on a
      wide range of topics. Anyone attempting to install LFS should have an
      understanding of many of the topics in this hint.</para>
    </listitem>
-->
  </itemizedlist>

</sect1>
  <sect1 id="pre-standards">
  <?dbhtml filename="standards.html"?>

  <title>LFS and Standards</title>

  <!--<sect2>
    <title/> -->

     <para>The structure of LFS follows Linux standards as closely as
     possible.  The primary standards are:</para>

    <itemizedlist>
      <listitem>
        <para><ulink url="http://pubs.opengroup.org/onlinepubs/9699919799/">
        POSIX.1-2008</ulink>.</para>
      </listitem>
      <listitem>
        <para><ulink url="http://refspecs.linuxfoundation.org/FHS_3.0/fhs/index.html">
        Filesystem Hierarchy Standard (FHS) Version 3.0</ulink></para>

      </listitem>
      <listitem>
        <para><ulink url="http://refspecs.linuxfoundation.org/lsb.shtml">Linux
        Standard Base (LSB) Version 5.0 (2015)</ulink></para>

        <para>The LSB has four separate standards: Core, Desktop,
        Runtime Languages, and Imaging. In addition to generic requirements
        there are also architecture specific requirements.  There are also two
        areas for trial use: Gtk3 and Graphics.  LFS attempts to conform to the
        architectures discussed in the previous section.</para>

        <note><para>Many people do not agree with the requirements of the LSB.
        The main purpose of defining it is to ensure that proprietary software
        will be able to be installed and run properly on a compliant system.
        Since LFS is source based, the user has complete control over what
        packages are desired and many choose not to install some packages that
        are specified by the LSB.</para></note>

      </listitem>
    </itemizedlist>

    <para>Creating a complete LFS system capable of passing the LSB
    certifications tests is possible, but not without many additional packages
    that are beyond the scope of LFS.  These additional packages have
    installation instructions in BLFS. </para>

    <variablelist>
      <bridgehead renderas="sect3">Packages supplied by LFS needed to
          satisfy the LSB Requirements</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry>
        <term><emphasis>LSB Core:</emphasis></term>
        <listitem>
          <para>Bash, Bc, Binutils, Coreutils, Diffutils, File, Findutils, Gawk,
                Grep, Gzip, M4, Man-DB, Ncurses, Procps, Psmisc, Sed,
                Shadow, Tar, Util-linux, Zlib</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Desktop:</emphasis></term>
        <listitem>
          <para>None</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Runtime Languages:</emphasis></term>
        <listitem>
          <para>Perl</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Imaging:</emphasis></term>
        <listitem>
          <para>None</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Gtk3 and LSB Graphics (Trial Use):</emphasis></term>
        <listitem>
          <para>None</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <variablelist>
      <bridgehead renderas="sect3">Packages supplied by BLFS needed to
          satisfy the LSB Requirements</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry>
        <term><emphasis>LSB Core:</emphasis></term>
        <listitem>
          <para>At, Batch (a part of At), Cpio, Ed, Fcrontab, LSB-Tools, NSPR,
          NSS, PAM, Pax, Sendmail (or Postfix or Exim), time
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Desktop:</emphasis></term>
        <listitem>
          <para>Alsa, ATK, Cairo, Desktop-file-utils, Freetype, Fontconfig,
          Gdk-pixbuf, Glib2, GTK+2, Icon-naming-utils, Libjpeg-turbo, Libpng, Libtiff,
          Libxml2, MesaLib, Pango, Xdg-utils, Xorg</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Runtime Languages:</emphasis></term>
        <listitem>
          <para>Python, Libxml2, Libxslt </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Imaging:</emphasis></term>
        <listitem>
          <para>CUPS, Cups-filters, Ghostscript, SANE</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Gtk3 and LSB Graphics (Trial Use):</emphasis></term>
        <listitem>
          <para>GTK+3</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <variablelist>
      <bridgehead renderas="sect3">Packages not supplied by LFS or BLFS
      needed to satisfy the LSB Requirements</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry>
        <term><emphasis>LSB Core:</emphasis></term>
        <listitem>
          <para>None</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Desktop:</emphasis></term>
        <listitem>
          <para>Qt4 (but Qt5 is provided)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Runtime Languages:</emphasis></term>
        <listitem>
          <para>None</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Imaging:</emphasis></term>
        <listitem>
          <para>None</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis>LSB Gtk3 and LSB Graphics (Trial Use):</emphasis></term>
        <listitem>
          <para>None</para>
        </listitem>
      </varlistentry>

    </variablelist>

</sect1>
  <sect1 id="pre-why">
  <?dbhtml filename="package-choices.html"?>

  <title>Rationale for Packages in the Book</title>

    <para>As stated earlier, the goal of LFS is to build a complete and usable
    foundation-level system.  This includes all packages needed to replicate
    itself while providing a relatively minimal base from which to customize
    a more complete system based on the choices of the user.  This does not
    mean that LFS is the smallest system possible.  Several important packages
    are included that are not strictly required.  The lists below document the
    rationale for each package in the book.</para>

    <itemizedlist>

      <listitem>
        <para>Acl</para>

        <para>This package contains utilities to administer Access 
        Control Lists, which are used to define more fine-grained 
        discretionary access rights for files and directories. 
        </para>
      </listitem>

      <listitem>
        <para>Attr</para>

        <para>This package contains programs for administering  
        extended attributes on filesystem objects. 
        </para>
      </listitem>

      <listitem>
        <para>Autoconf</para>

        <para>This package contains programs for producing shell scripts that
        can automatically configure source code from a developer's
        template. It is often needed to rebuild a package after updates
        to the build procedures.</para>
      </listitem>

      <listitem>
        <para>Automake</para>

        <para>This package contains programs for generating Make files from
        a template. It is often needed to rebuild a package after updates
        to the build procedures.</para>
      </listitem>

      <listitem>
        <para>Bash</para>

        <para>This package satisfies an LSB core requirement to provide
        a Bourne Shell interface to the system.  It was chosen over
        other shell packages because of its common usage and extensive
        capabilities beyond basic shell functions.</para>
      </listitem>

      <listitem>
        <para>Bc</para>

        <para>This package provides an arbitrary precision numeric processing language. 
        It satisfies a requirement needed when building the Linux kernel.</para>
      </listitem>

      <listitem>
        <para>Binutils</para>

        <para>This package contains a linker, an assembler, and other
        tools for handling object files. The programs in this package are
        needed to compile most of the packages in an LFS system and beyond.</para>
      </listitem>

      <listitem>
        <para>Bison</para>

        <para>This package contains the GNU version of yacc (Yet Another
        Compiler Compiler) needed to build several other LFS programs.</para>
      </listitem>

      <listitem>
        <para>Bzip2</para>

        <para>This package contains programs for compressing and decompressing
        files.  It is required to decompress many LFS packages.</para>
      </listitem>

      <listitem>
        <para>Check</para>

        <para>This package contains a test harness for other programs.</para>
      </listitem>

      <listitem>
        <para>Coreutils</para>

        <para>This package contains a number of essential programs for viewing
        and manipulating files and directories. These programs are needed for
        command line file management, and are necessary for the installation
        procedures of every package in LFS.</para>
      </listitem>

      

      <listitem>
        <para>DejaGNU</para>

        <para>This package contains a framework for testing other programs.</para>
      </listitem>

      <listitem>
        <para>Diffutils</para>

        <para>This package contains programs that show the differences
        between files or directories. These programs can be used to create
        patches, and are also used in many packages' build procedures.</para>
      </listitem>

      <listitem>
        <para>E2fsprogs</para>

        <para>This package contains the utilities for handling the ext2, ext3
        and ext4 file systems.  These are the most common and thoroughly
        tested file systems that Linux supports.</para>
      </listitem>

      <listitem revision="sysv">
        <para>Eudev</para>

        <para>This package is a device manager.  It dynamically controls the ownership,
        permissions, names, and symbolic links of devices in the /dev directory as 
        devices are added or removed from the system.
        </para>
      </listitem>

      <listitem>
        <para>Expat</para>

        <para>This package contains a relatively small XML parsing library.  It
        is required by the XML::Parser Perl module.</para>
      </listitem>

      <listitem>
        <para>Expect</para>

        <para>This package contains a program for carrying out scripted
        dialogues with other interactive programs.  It is commonly used
        for testing other packages.</para>
      </listitem>

      <listitem>
        <para>File</para>

        <para>This package contains a utility for determining the type of a
        given file or files. A few packages need it in their build scripts.</para>
      </listitem>

      <listitem>
        <para>Findutils</para>

        <para>This package contains programs to find files in a file system.
        It is used in many packages' build scripts.</para>
      </listitem>

      <listitem>
        <para>Flex</para>

        <para>This package contains a utility for generating programs that
        recognize patterns in text.  It is the GNU version of the lex
        (lexical analyzer) program.  It is required to build several
        LFS packages.</para>
      </listitem>

      <listitem>
        <para>Gawk</para>

        <para>This package contains programs for manipulating text files.
        It is the GNU version of awk (Aho-Weinberg-Kernighan). It is used in
        many other packages' build scripts.</para>
      </listitem>

      <listitem>
        <para>GCC</para>

        <para>This package is the Gnu Compiler Collection.  It contains the
        C and C++ compilers as well as several others not built by LFS.
        </para>
      </listitem>

      <listitem>
        <para>GDBM</para>

        <para>This package contains the GNU Database Manager library.  It
        is used by one other LFS package, Man-DB.</para>
      </listitem>

      <listitem>
        <para>Gettext</para>

        <para>This package contains utilities and libraries for
        internationalization and localization of numerous packages.</para>
      </listitem>

      <listitem>
        <para>Glibc</para>

        <para>This package contains the main C library.  Linux programs will
        not run without it.</para>
      </listitem>

      <listitem>
        <para>GMP</para>

        <para>This package contains math libraries that provide useful functions
        for arbitrary precision arithmetic.  It is required to build GCC.</para>
      </listitem>

      <listitem>
        <para>Gperf</para>

        <para>This package contains a program that generates a perfect hash
        function from a key set. It is required for Eudev.</para>
      </listitem>

      <listitem>
        <para>Grep</para>

        <para>This package contains programs for searching through files. These
        programs are used by most packages' build scripts.</para>
      </listitem>

      <listitem>
        <para>Groff</para>

        <para>This package contains programs for processing and formatting text.
        One important function of these programs is to format man pages.</para>
      </listitem>

      <listitem>
        <para>GRUB</para>

        <para>This package is the Grand Unified Boot Loader.  It is one
        of several boot loaders available, but is the most flexible.
        </para>
      </listitem>

      <listitem>
        <para>Gzip</para>

        <para>This package contains programs for compressing and
        decompressing files. It is needed to decompress many packages in LFS
        and beyond.</para>
      </listitem>

      <listitem>
        <para>Iana-etc</para>

        <para>This package provides data for network services and protocols.
        It is needed to enable proper networking capabilities.</para>
      </listitem>

      <listitem>
        <para>Inetutils</para>

        <para>This package contains programs for basic network
        administration.</para>
      </listitem>

      <listitem>
        <para>Intltool</para>

        <para>This package contains tools for extracting translatable 
        strings from source files.</para>
      </listitem>

      <listitem>
        <para>IProute2</para>

        <para>This package contains programs for basic and advanced IPv4 and
        IPv6 networking.  It was chosen over the other common network
        tools package (net-tools) for its IPv6 capabilities.  </para>
      </listitem>

      

      <listitem>
        <para>Kbd</para>

        <para>This package contains key-table files, keyboard utilities
        for non-US keyboards, and a number of console fonts.</para>
      </listitem>

      <listitem>
        <para>Kmod</para>

        <para>This package contains programs needed to administer Linux
        kernel modules.</para>
      </listitem>

      <listitem>
        <para>Less</para>

        <para>This package contains a very nice text file viewer that
        allows scrolling up or down when viewing a file. It is also used by
        Man-DB for viewing manpages.</para>
      </listitem>

      <listitem>
        <para>Libcap</para>

        <para>This package implements the user-space interfaces to 
        the POSIX 1003.1e capabilities available in Linux kernels. 
        </para>
      </listitem>

      <listitem>
        <para>Libelf</para>

        <para>The elfutils project provides libraries and tools for ELF files
        and DWARF data.  Most utilities in this package are available in
        other packages, but the library is needed to build the Linux
        kernel using the default (and most efficient) configuration.</para>

      </listitem>

      <listitem>
        <para>Libffi</para>

        <para>This package implements a portable, high level programming
        interface to various calling conventions.  Some programs may not know
        at the time of compilation what arguments are to be passed to a
        function. For instance, an interpreter may be told at run-time about
        the number and types of arguments used to call a given function. Libffi
        can be used in such programs to provide a bridge from the interpreter
        program to compiled code.</para>

      </listitem>

      <listitem>
        <para>Libpipeline</para>

        <para>The Libpipeline package contains a library for manipulating
        pipelines of subprocesses in a flexible and convenient way. It is
        required by the Man-DB package.</para>
      </listitem>

      <listitem>
        <para>Libtool</para>

        <para>This package contains the GNU generic library support
        script. It wraps the complexity of using shared libraries in a
        consistent, portable interface.  It is needed by the test
        suites in other LFS packages.</para>
      </listitem>

      <listitem>
        <para>Linux Kernel</para>

        <para>This package is the Operating System.  It is the Linux in
        the GNU/Linux environment.</para>
      </listitem>

      <listitem>
        <para>M4</para>

        <para>This package contains a general text macro processor useful
        as a build tool for other programs.</para>
      </listitem>

      <listitem>
        <para>Make</para>

        <para>This package contains a program for directing the building
        of packages.  It is required by almost every package in LFS.</para>
      </listitem>

      

      <listitem>
        <para>Man-DB</para>

        <para>This package contains programs for finding and viewing man pages.
        It was chosen instead of the <application moreinfo="none">man</application> package
        due to superior internationalization capabilities.  It supplies
        the man program.</para>
      </listitem>

      <listitem>
        <para>Man-pages</para>

        <para>This package contains the actual contents of the basic
        Linux man pages.</para>
      </listitem>

      <listitem>
        <para>Meson</para>

        <para>This package provides a software tool for automating the building
        of software. The main goal for Meson is to minimize the amount of time
        that software developers need to spend configuring their build
        system.  It's required to build Systemd, as well as many BLFS
        packages.</para>

      </listitem>

      <listitem>
        <para>MPC</para>

        <para>This package contains functions for the arithmetic of complex
        numbers. It is required by GCC.</para>
      </listitem>

      <listitem>
        <para>MPFR</para>

        <para>This package contains functions for multiple precision
        arithmetic.  It is required by GCC.</para>
      </listitem>

      <listitem>
        <para>Ninja</para>

        <para>This package contains a small build system with a focus on speed.
        It is designed to have its input files generated by a higher-level build
        system, and to run builds as fast as possible.
        This package is required by Meson.</para>

      </listitem>

      <listitem>
        <para>Ncurses</para>

        <para>This package contains libraries for terminal-independent
        handling of character screens.  It is often used to provide
        cursor control for a menuing system. It is needed by a number of
        packages in LFS.</para>
      </listitem>

      <listitem>
        <para>Openssl</para>

        <para>This package provides management tools and libraries relating to
        cryptography. These are useful for providing cryptographic functions to
        other packages, including the Linux kernel.</para>
      </listitem>

      <listitem>
        <para>Patch</para>

        <para>This package contains a program for modifying or creating files by
        applying a <emphasis>patch</emphasis> file typically created
        by the <application moreinfo="none">diff</application> program.  It is needed by
        the build procedure for several LFS packages.</para>
      </listitem>

      <listitem>
        <para>Perl</para>

        <para>This package is an interpreter for the runtime language
        PERL. It is needed for the installation and test suites of several LFS
        packages.</para>
      </listitem>

      <listitem>
        <para>Pkg-config</para>

        <para>This package provides a program that returns meta-data about an
        installed library or package.</para>
      </listitem>

      <listitem>
        <para>Procps-NG</para>

        <para>This package contains programs for monitoring processes. These
        programs are useful for system administration, and are also used by
        the LFS Bootscripts.</para>
      </listitem>

      <listitem>
        <para>Psmisc</para>

        <para>This package contains programs for displaying information
        about running processes. These programs are useful for system
        administration.</para>
      </listitem>

      <listitem>
        <para>Python 3</para>

        <para>This package provides an interpreted language that has a design
        philosophy that emphasizes code readability.</para>

      </listitem>

      <listitem>
        <para>Readline</para>

        <para>This package is a set of libraries that offers command-line
        editing and history capabilities.  It is used by Bash.</para>
      </listitem>

      <listitem>
        <para>Sed</para>

        <para>This package allows editing of text without opening it in a
        text editor. It is also needed by most LFS packages' configure
        scripts.</para>
      </listitem>

      <listitem>
        <para>Shadow</para>

        <para>This package contains programs for handling passwords
        in a secure way.</para>
      </listitem>

      <listitem revision="sysv">
        <para>Sysklogd</para>

        <para>This package contains programs for logging system messages,
        such as those given by the kernel or daemon processes when unusual
        events occur.</para>
      </listitem>

      

      <listitem revision="sysv">
        <para>Sysvinit</para>

        <para>This package provides the <application moreinfo="none">init</application>
        program, which is the parent of all other processes on the Linux
        system. </para>
      </listitem>

      <listitem>
        <para>Tar</para>

        <para>This package provides archiving and extraction capabilities
        of virtually all packages used in LFS.</para>
      </listitem>

      <listitem>
        <para>Tcl</para>

        <para>This package contains the Tool Command Language used
        in many test suites in LFS packages.</para>
      </listitem>

      <listitem>
        <para>Texinfo</para>

        <para>This package contains programs for reading, writing, and
        converting info pages.  It is used in the installation
        procedures of many LFS packages.</para>
      </listitem>

      <listitem>
        <para>Util-linux</para>

        <para>This package contains miscellaneous utility programs.
        Among them are utilities for handling file systems, consoles,
        partitions, and messages.</para>
      </listitem>

      <listitem>
        <para>Vim</para>

        <para>This package contains an editor. It was chosen because of its
        compatibility with the classic vi editor and its huge number of powerful
        capabilities.  An editor is a very personal choice for
        many users and any other editor could be substituted if desired.</para>
      </listitem>

      <listitem>
        <para>XML::Parser</para>

        <para>This package is a Perl module that interfaces with Expat.</para>
      </listitem>

      <listitem>
        <para>XZ Utils</para>

        <para>This package contains programs for compressing and decompressing
        files.  It provides the highest compression generally available
        and is useful for decompressing packages in XZ or LZMA format.</para>
      </listitem>

      <listitem>
        <para>Zlib</para>

        <para>This package contains compression and decompression routines
        used by some programs.</para>
      </listitem>

      <listitem>
        <para>Zstd</para>

        <para>This package contains compression and decompression routines
        used by some programs. It provide high compression ratios and a very 
        wide range of compression / speed trade-offs.</para>
      </listitem>

    </itemizedlist>

</sect1>
  <sect1 id="pre-typography">
  <?dbhtml filename="typography.html"?>

  <title>Typography</title>

  <para>To make things easier to follow, there are a few typographical
  conventions used throughout this book. This section contains some
  examples of the typographical format found throughout Linux From
  Scratch.</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">./configure --prefix=/usr</userinput></screen>

  <para>This form of text is designed to be typed exactly as seen unless
  otherwise noted in the surrounding text. It is also used in the explanation
  sections to identify which of the commands is being referenced.</para>

  <para>In some cases, a logical line is extended to two or more physical lines
  with a backslash at the end of the line.</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">CC="gcc -B/usr/bin/" ../binutils-2.18/configure \
  --prefix=/tools --disable-nls --disable-werror</userinput></screen>

  <para>Note that the backslash must be followed by an immediate return.  Other
  whitespace characters like spaces or tab characters will create incorrect
  results.</para>

<screen format="linespecific"><computeroutput moreinfo="none">install-info: unknown option '--dir-file=/mnt/lfs/usr/info/dir'</computeroutput></screen>

  <para>This form of text (fixed-width text) shows screen output, usually as
  the result of commands issued.  This format is also used to show filenames,
  such as <filename moreinfo="none">/etc/ld.so.conf</filename>.</para>

  <para><emphasis>Emphasis</emphasis></para>

  <para>This form of text is used for several purposes in the book. Its main
  purpose is to emphasize important points or items.</para>

  <para><ulink url="https://www.linuxfromscratch.org/"/></para>

  <para>This format is used for hyperlinks both within the LFS community and to
  external pages. It includes HOWTOs, download locations, and websites.</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">cat &gt; $LFS/etc/group &lt;&lt; "EOF"
<literal moreinfo="none">root:x:0:
bin:x:1:
......</literal>
EOF</userinput></screen>

  <para>This format is used when creating configuration files. The first command
  tells the system to create the file <filename moreinfo="none">$LFS/etc/group</filename> from
  whatever is typed on the following lines until the sequence End Of File (EOF)
  is encountered. Therefore, this entire section is generally typed as
  seen.</para>

  <para><replaceable>&lt;REPLACED TEXT&gt;</replaceable></para>

  <para>This format is used to encapsulate text that is not to be typed
  as seen or for copy-and-paste operations.</para>

  <para><replaceable>[OPTIONAL TEXT]</replaceable></para>

  <para>This format is used to encapsulate text that is optional.</para>

  <para><filename moreinfo="none">passwd(5)</filename></para>

  <para>This format is used to refer to a specific manual (man) page. The number inside parentheses
  indicates a specific section inside the manuals. For example,
  <command moreinfo="none">passwd</command> has two man pages. Per LFS installation instructions,
  those two man pages will be located at
  <filename moreinfo="none">/usr/share/man/man1/passwd.1</filename> and
  <filename moreinfo="none">/usr/share/man/man5/passwd.5</filename>. When the book uses <filename moreinfo="none">passwd(5)</filename> it is
  specifically referring to <filename moreinfo="none">/usr/share/man/man5/passwd.5</filename>.
  <command moreinfo="none">man passwd</command> will print the first man page it finds that
  matches <quote>passwd</quote>, which will be
  <filename moreinfo="none">/usr/share/man/man1/passwd.1</filename>. For this example, you will
  need to run <command moreinfo="none">man 5 passwd</command> in order to read the page
  being specified. Note that most man pages do not have duplicate
  page names in different sections. Therefore, <command moreinfo="none">man <replaceable>&lt;program
  name&gt;</replaceable></command> is generally sufficient.</para>

</sect1>
  <sect1 id="pre-organization">
  <?dbhtml filename="organization.html"?>

  <title>Structure</title>

  <para>This book is divided into the following parts.</para>

  <sect2>
    <title>Part I - Introduction</title>

    <para>Part I explains a few important notes on how to proceed with the
    LFS installation.  This section also provides meta-information about
    the book.</para>
  </sect2>

  <sect2>
    <title>Part II - Preparing for the Build</title>

    <para>Part II describes how to prepare for the building processâmaking
    a partition, downloading the packages, and compiling temporary
    tools.</para>
  </sect2>

  <sect2>
    <title>Part III - Building the LFS Cross Toolchain and Temporary Tools</title>

    <para>Part III provides instructions for building the tools
    needed for constructing the final LFS system.</para>
  </sect2>

  <sect2>
    <title>Part IV - Building the LFS System</title>

    <para>Part IV guides the reader through the building of the LFS
    systemâcompiling and installing all the packages one by one,
    setting up the boot scripts, and installing the kernel. The resulting
    Linux system is the foundation on which other software can be built to
    expand the system as desired. At the end of this book, there is an
    easy to use reference listing all of the programs, libraries, and
    important files that have been installed.</para>
  </sect2>

  <sect2>
    <title>Part V - Appendices</title>

    <para>Part V provides information about the book itself including
    acronyms and terms, acknowledgments, package dependencies, 
    a listing of LFS boot scripts, licenses for the distribution of the 
    book, and a comprehensive index of packages, programs, libraries, 
    and scripts.</para>
  </sect2>

</sect1>
  <sect1 id="pre-errata">
  <?dbhtml filename="errata.html"?>

  <title>Errata and Security Advisories</title>

  <para>The software used to create an LFS system is constantly being updated
  and enhanced. Security warnings and bug fixes may become available after
  the LFS book has been released. To check whether the package versions or
  instructions in this release of LFS need any modifications to accommodate
  security vulnerabilities or other bug fixes, please visit
  <ulink revision="sysv" url="https://www.linuxfromscratch.org/lfs/errata/11.0/"/>
  
  before proceeding with your build. You should note any
  changes shown and apply them to the relevant section of the book as you
  progress with building the LFS system.</para>

  <para>In addition, the Linux From Scratch editors maintain a list of security
  vulnerabilities discovered after a book was released. To check whether there
  are any active security vulnerabilities, please visit
  <ulink url="https://www.linuxfromscratch.org/lfs/advisories/"/> prior to proceeding with your build. You should note
  any advisories and perform the steps to fix any security vulnerabilities as
  you progress with building the LFS system.</para>

</sect1>

</preface>

<part id="part1">
<title>Introduction</title>
<?dbhtml filename="part1.html"?>
<chapter id="chapter-intro" xreflabel="Chapter&#xA0;1" xml:base="chapter01/chapter01.xml">
  <?dbhtml dir="chapter01"?>
  <?dbhtml filename="chapter01.html"?>

  <title>Introduction</title>

  <sect1 id="ch-intro-how">
  <?dbhtml filename="how.html"?>

  <title>How to Build an LFS System</title>

  <para>The LFS system will be built by using an already installed
  Linux distribution (such as Debian, OpenMandriva, Fedora, or openSUSE). This
  existing Linux system (the host) will be used as a starting point to
  provide necessary programs, including a compiler, linker, and shell,
  to build the new system. Select the <quote>development</quote> option
  during the distribution installation to be able to access these
  tools.</para>

  <para>As an alternative to installing a separate distribution onto your
  machine, you may wish to use <!-- the Linux From Scratch LiveCD or --> a LiveCD from a
  commercial distribution. <!-- The LFS LiveCD works well as a host system,
  providing all the tools you need to successfully follow the instructions in
  this book. The LiveCD version is behind the current book, but is still useful
  as a host for building the current book.  The <quote>-nosrc</quote> or
  <quote>-min</quote> editions of the LiveCD are the most appropriate for
  building a current LFS system.  For more information about the LFS LiveCD or
  to download a copy, visit <ulink url="&livecd-root;"/>. --></para>

  <!--
  <note>
    <para>The LFS LiveCD might not work on newer hardware configurations,
    failing to boot or failing to detect some devices such as some SATA hard
    drives.</para>
  </note> -->

  <para><xref linkend="chapter-partitioning"/> of this book describes how
  to create a new Linux native partition and file system. This is the place
  where the new LFS system will be compiled and installed. <xref linkend="chapter-getting-materials"/> explains which packages and
  patches need to be downloaded to build an LFS system and how to store
  them on the new file system. <xref linkend="chapter-final-preps"/>
  discusses the setup of an appropriate working environment. Please read
  <xref linkend="chapter-final-preps"/> carefully as it explains several
  important issues you need be aware of before beginning to
  work your way through <xref linkend="chapter-cross-tools"/> and beyond.</para>

  <para><xref linkend="chapter-cross-tools"/>,  explains the installation of
  the initial tool chain, (binutils, gcc, and glibc) using cross compilation
  techniques to isolate the new tools from the host system.</para>

  <para><xref linkend="chapter-temporary-tools"/> shows you how to
  cross-compile basic utilities using the just built cross-toolchain.</para>

  <para><xref linkend="chapter-chroot-temporary-tools"/> then enters a
  "chroot" environment and uses the previously built tools to build
  the additional tools needed to build and test the final system.</para>

  <para>This effort to isolate the new system from the host distribution may
  seem excessive. A full technical explanation as to why this is done is
  provided in <xref linkend="ch-tools-toolchaintechnotes"/>.</para>

  <para>In <xref linkend="chapter-building-system"/>, The
  full LFS system is built. Another advantage provided by the chroot
  environment is that it allows you to continue using the host system
  while LFS is being built. While waiting for package compilations to
  complete, you can continue using your computer as normal.</para>

  <para>To finish the installation, the basic system configuration is set up in
  <xref linkend="chapter-config"/>, and the kernel and boot loader are set
  up in <xref linkend="chapter-bootable"/>. <xref linkend="chapter-finalizing"/>
  contains information on continuing the LFS experience beyond this book.
  After the steps in this book have been implemented, the computer will be
  ready to reboot into the new LFS system.</para>

  <para>This is the process in a nutshell. Detailed information on each
  step is discussed in the following chapters and package descriptions.
  Items that may seem complicated will be clarified, and everything will
  fall into place as you embark on the LFS adventure.</para>

</sect1>
  <sect1 id="ch-intro-whatsnew">
  <?dbhtml filename="whatsnew.html"?>

  <title>What's new since the last release</title>

  <para>In this version of LFS, there has been a major reorganization
  of the book using techniques that avoid changing the host system
  and provides a more straight forward build process.</para>

  <para>Below is a list of package updates made since the previous
  release of the book.</para>

  <!--
    Every package in the book is listed in the "Upgraded to:" section.
    Comment/uncomment as needed. DO NOT delete any of these lines unless that
    package is removed from the book entirely.
  -->

  <itemizedlist>
    <title>Upgraded to:</title>
    <listitem><para/></listitem>  <!-- satisfy build -->
    <!--<listitem>
    <para>None</para>
    </listitem>-->
    <listitem>
      <para>Acl-2.3.1</para>
    </listitem>
    <listitem>
      <para>Attr-2.5.1</para>
    </listitem>
    <!--<listitem>
      <para>Autoconf-&autoconf-version;</para>
    </listitem>-->
    <listitem>
      <para>Automake-1.16.4</para>
    </listitem>
    <listitem>
      <para>Bash 5.1.8</para>
    </listitem>
    <listitem>
      <para>Bc 5.0.0</para>
    </listitem>
    <listitem>
      <para>Binutils-2.37</para>
    </listitem>
    <listitem>
      <para>Bison-3.7.6</para>
    </listitem>
    <!--<listitem>
      <para>Bzip2-&bzip2-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Check-&check-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Coreutils-&coreutils-version;</para>
    </listitem>-->
    <listitem>
      <para>DejaGNU-1.6.3</para>
    </listitem>
    <!--<listitem revision="systemd">
      <para>D-Bus-&dbus-version;</para>
    </listitem>-->
    <listitem>
      <para>Diffutils-3.8</para>
    </listitem>
    <listitem>
       <para>E2fsprogs-1.46.4</para>
    </listitem>
    <!--<listitem revision="sysv">
       <para>Eudev-&eudev-version;</para>
    </listitem>-->
    <listitem>
       <para>Expat-2.4.1</para>
    </listitem>
    <!--<listitem>
       <para>Expect-&expect-version;</para>
    </listitem>-->
    <listitem>
       <para>File-5.40</para>
    </listitem>
    <!--<listitem>
      <para>Findutils-&findutils-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Flex-&flex-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Gawk-&gawk-version;</para>
    </listitem>-->
    <listitem>
       <para>GCC-11.2.0</para>
    </listitem>
    <listitem>
       <para>GDBM-1.20</para>
    </listitem>
    <!--<listitem>
      <para>Gettext-&gettext-version;</para>
    </listitem>-->
    <listitem>
      <para>Glibc-2.34</para>
    </listitem>
    <!--<listitem>
      <para>GMP-&gmp-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Gperf-&gperf-version;</para>
    </listitem>-->
    <listitem>
      <para>Grep-3.7</para>
    </listitem>
    <!--<listitem>
      <para>Groff-&groff-version;</para>
    </listitem>-->
    <listitem>
      <para>GRUB-2.06</para>
    </listitem>
    <!--<listitem>
      <para>Gzip-&gzip-version;</para>
    </listitem>-->
    <listitem>
      <para>IANA-Etc-20210611</para>
    </listitem>
    <!--<listitem>
      <para>Inetutils-&inetutils-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Intltool-&intltool-version;</para>
    </listitem>-->
    <listitem>
      <para>IPRoute2-5.13.0</para>
    </listitem>
    <!--<listitem revision="systemd">
      <para>Jinja2-&jinja2-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Kbd-&kbd-version;</para>
    </listitem>-->
    <listitem>
      <para>Kmod-29</para>
    </listitem>
    <listitem>
      <para>Less-590</para>
    </listitem>
    <!--<listitem>
      <para>LFS-Bootscripts-&lfs-bootscripts-version;</para>
    </listitem>-->
    <listitem>
      <para>Libcap-2.53</para>
    </listitem>
    <listitem>
      <para>Libelf-0.185 (from elfutils)</para>
    </listitem>
    <listitem>
      <para>Libffi-3.4.2</para>
    </listitem>
    <!--<listitem>
      <para>Libpipeline-&libpipeline-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Libtool-&libtool-version;</para>
    </listitem>-->
    <listitem>
      <para>Linux-5.13.12</para>
    </listitem>
    <listitem>
      <para>M4-1.4.19</para>
    </listitem>
    <!--<listitem>
      <para>Make-&make-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Man-DB-&man-db-version;</para>
    </listitem>-->
    <listitem>
      <para>Man-pages-5.13</para>
    </listitem>
    <!--<listitem revision="systemd">
      <para>MarkupSafe-&markupsafe-version;</para>
    </listitem>-->
    <listitem>
      <para>Meson-0.59.1</para>
    </listitem>
    <!--<listitem>
      <para>MPC-&mpc-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>MPFR-&mpfr-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Ncurses-&ncurses-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Ninja-&ninja-version;</para>
    </listitem>-->
    <listitem>
      <para>Openssl-1.1.1l</para>
    </listitem>
    <!--<listitem>
      <para>Patch-&patch-version;</para>
    </listitem>-->
    <listitem>
      <para>Perl-5.34.0</para>
    </listitem>
    <!--<listitem>
      <para>Pkg-config-&pkgconfig-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Procps-ng-&procps-ng-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Psmisc-&psmisc-version;</para>
    </listitem>-->
    <listitem>
      <para>Python-3.9.6</para>
    </listitem>
    <!--<listitem>
      <para>Readline-&readline-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Sed-&sed-version;</para>
    </listitem>-->
    <listitem>
      <para>Shadow-4.9</para>
    </listitem>
    <listitem revision="sysv">
      <para>Sysklogd-1.5.1</para>
    </listitem>
    
    <listitem revision="sysv">
      <para>SysVinit-2.99</para>
    </listitem>
    <!--<listitem>
      <para>Tar-&tar-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Tcl-&tcl-version;</para>
    </listitem>-->
    <listitem>
      <para>Texinfo-6.8</para>
    </listitem>
    <!--<listitem>
      <para>Tzdata-&tzdata-version;</para>
    </listitem>-->
    <listitem>
      <para>Util-Linux-2.37.2</para>
    </listitem>
    <listitem>
      <para>Vim-8.2.3337</para>
    </listitem>
    <!--<listitem>
      <para>XML-Parser-&xml-parser-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>XZ-Utils-&xz-version;</para>
    </listitem>-->
    <!--<listitem>
      <para>Zlib-&zlib-version;</para>
    </listitem>-->
    <listitem>
      <para>Zstd-1.5.0</para>
    </listitem>
  </itemizedlist>

  <!--<itemizedlist>
    <title>Downgraded to:</title>

    <listitem>
      <para>PLACEHOLDER</para>
    </listitem>

  </itemizedlist>-->

  <itemizedlist>
    <title>Added:</title>
    <listitem><para/></listitem>  <!-- satisfy build -->
    <listitem>
      <para>binutils-2.37-upstream_fix-1.patch</para>
    </listitem>
    <listitem>
      <para>gcc-11.1.0-upstream_fixes-1.patch</para>
    </listitem>
    
    

  </itemizedlist>

  <itemizedlist>
    <title>Removed:</title>
    <listitem><para/></listitem>  <!-- satisfy build -->

    <!--<listitem>
      <para>bash-5.0-upstream_fixes-1.patch</para>
    </listitem>-->

  </itemizedlist>

</sect1>
  <sect1 id="ch-intro-changelog">
  <?dbhtml filename="changelog.html"?>

  <title>Changelog</title>

  <para>This is version 
        <phrase revision="sysv">11.0</phrase>
        
  of the Linux From Scratch book, dated
  September 1st, 2021. If this book is more than six months old, a newer and better
  version is probably already available. To find out, please check one of the
  mirrors via <ulink url="https://www.linuxfromscratch.org/mirrors.html"/>.</para>

  <para>Below is a list of changes made since the previous release of the
  book.</para>

  <itemizedlist>
    <title>Changelog Entries:</title>

<!-- Changelog template

    <listitem>
      <para>Date</para>
      <itemizedlist>
        <listitem>
          <para>[name] - New changelog entry.</para>
        </listitem>
        <listitem>
          <para>[name] - Previous changelog entry.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    Note:  If a change is only specific to sysv or systemd, then use
    <listitem revision="sysv"> or <listitem revision="systemd"> as
    appropriate for the entry or if needed the entire day's listitem.
    -->
    <listitem>
      <para>2021-09-01</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - LFS-11.0 released.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-25</para>
      <itemizedlist>
        <listitem>
          <para>[xry111] - Update to man-pages-5.13. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4915">#4915</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-25</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - LFS-11.0-rc3 released.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to e2fsprogs-1.46.4. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4910">#4910</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to meson-0.59.1. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4909">#4909</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to util-linux 2.37.2. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4908">#4908</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to linux-5.13.12. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4907">#4907</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to libcap-2.53. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4906">#4906</ulink>.</para>
        </listitem>
        <listitem>
          <para>[xry111] - Update to openssl-1.1.1l (security fixes). Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4911">#4911</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-20</para>
      <itemizedlist>
        <listitem>
           <para>[bdubbs] - Add a sed to glibc in Chapter 8 to fix a 
           critical security issue.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-18</para>
      <itemizedlist>
        <listitem>
           <para>[bdubbs] - Eliminate an instruction to remove a test
           in bunutils that no longer fails.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-16</para>
      <itemizedlist>
        <listitem>
          <para>[dj] - add p11-kit to dependencies list for systemd.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-15</para>
      <itemizedlist>
        <listitem>
          <para>[renodr] - LFS-11.0-rc1 released.</para>
        </listitem>
      </itemizedlist>
    </listitem>
    
    <listitem>
      <para>2021-08-14</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Update to grep-3.7. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4901">#4901</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-13</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Update to linux-5.13.10. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4904">#4904</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to bc-5.0.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4903">#4903</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to vim-8.2.3337. Addresses
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4521">#4521</ulink>.</para>
        </listitem>
        <listitem>
           <para>[bdubbs] - Add binutils-2.37 upstream patch.</para> 
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-08</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Update to linux-5.13.9. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4900">#4900</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to libffi-3.4.2. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4902">#4902</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-06</para>
      <itemizedlist>
        <listitem>
          <para>[xry111] - Fix
          <filename class="libraryfile" moreinfo="none">libasan.a</filename> building
          GCC with Glibc-2.34.  Addresses
          <ulink url="https://wiki.linuxfromscratch.org/blfs/ticket/15350">
          BLFS #15350</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-02</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Update to glibc-2.34. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4897">#4897</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to diffutils-3.8. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4898">#4898</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to libcap-2.52. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4899">#4899</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-08-01</para>
      <itemizedlist>
        <listitem>
           <para>[bdubbs] - Remove unneeded sed commands from automake and
           coreutils. Fixes 
           <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4895">#4895</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to linux-5.13.7. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4893">#4893</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to e2fsprogs-1.46.3. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4896">#4896</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-27</para>
      <itemizedlist>
        <listitem>
          <para>[xry111] - Update to GCC-11.2.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4883">#4883</ulink>.</para>
        </listitem>
        <listitem>
          <para>[xry111] - Update to inetutils-2.1. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4892">#4892</ulink>.</para>
        </listitem>
        <listitem>
          <para>[xry111] - Update to automake-1.16.4. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4894">#4894</ulink>.</para>
        </listitem>
        <listitem>
          <para>[xry111] - Always use --strip-unneeded for stripping.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-27</para>
      <itemizedlist>
        <listitem>
          <para>[xry111] - Use workaround for Glibc NSS modules during
          stripping, to prevent bash from crash.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-26</para>
      <itemizedlist>
        <listitem>
          <para>[thomas] - Fix a programming error in shadow-4.9</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-25</para>
      <itemizedlist>
        <listitem>
          <para>[xry111] - (Hopefully) complete stripping workaround.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-25</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Add workaround to strip libraries 
          correctly.</para>
        </listitem>
        <listitem>
          <para>[xry111] - Add workaround to install Binutils-2.37 man pages
          correctly.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to shadow-4.9. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4891">#4891</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to util-linux 2.37.1. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4890">#4890</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-23</para>
      <itemizedlist>
        
        <listitem>
          <para>[renodr] - Update to meson-0.59.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4888">#4888</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to binutils-2.37. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4887">#4887</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to less-590. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4884">#4884</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-22</para>
      <itemizedlist>
        <listitem>
          <para>[dj] - Correct page IDs in Chapter 08 dejagnu, expect, and
          tcl.</para>
        </listitem>
        <listitem>
          <para>[dj] - Ensure that glibc installs ldconfig and sln to 
          <filename class="directory" moreinfo="none">/usr/sbin</filename>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-20</para>
      <itemizedlist>
        <listitem>
          <para>[ken] - Update to linux-5.13.4 (security fix). Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4886">#4886</ulink>.</para>
        </listitem>
        <listitem>
          <para>[xry111] - Use a fixed, non-zero UID for
          <systemitem class="username" moreinfo="none">tester</systemitem> user, and spawn a
          new pseudoterminal to satisfy bash testsuite.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-19</para>
      <itemizedlist>
        <listitem>
          <para>[renodr] - Add text about security advisories to the
          Errata page.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-17</para>
      <itemizedlist>
        <listitem>
          <para>[ken] - Fix test failures in perl-5.34.0 by building less before
          perl and by patching perl for a problem highlighted by gdbm-1.20. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4885">#4885</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-15</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Remove modifications to m4 that are no longer needed.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-08</para>
      <itemizedlist>
        
        
        <listitem>
          <para>[renodr] - Update to texinfo-6.8. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4880">#4880</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to iproute2-5.13.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4879">#4879</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to Python-3.9.6 (Security Update). Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4878">#4878</ulink>.</para>
        </listitem>
        
        <listitem>
          <para>[renodr] - Update to Linux-5.13.1. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4873">#4873</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-07-01</para>
      <itemizedlist>
        <listitem>
          <para>[ken] - Patch gcc to fix some regressions (will be
          needed to build firefox-91ESR in BLFS) and to allow it to
          build against linux-5.13.0 kernel headers. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4875">#4875</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-06-28</para>
      <itemizedlist>
        <listitem>
          <para>[ken] - If installing individual locales, add 9 more
          used by libstdc++-v3 tests. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4877">#4877</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-06-27</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Update to bash-5.1.8. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4869">#4869</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to dejagnu-1.6.3. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4871">#4871</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to gdbm-1.20. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4872">#4872</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to libcap-2.51. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4874">#4874</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to man-pages-5.1. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4876">#4876</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-06-18</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Ensure libcap installs capsh.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-06-15</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Update to iana-etc-20210611. Addresses
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4722">#4722</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to vim-8.2.3001. Addresses
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4500">#4500</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to util-linux-2.37. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4865">#4865</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to meson-0.58.1. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4867">#4867</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to linux-5.12.10. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4857">#4866</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to m4-1.4.19. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4864">#4864</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to grub-2.06. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4868">#4868</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-06-09</para>
      <itemizedlist>
        <listitem>
          <para>[ken] - For consistency, make the cpp link in /usr/lib.
          </para>
        </listitem>
        <listitem>
          <para>[ken] - Install iproute2 programs in /usr/sbin for
          consistency.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem revision="sysv">
      <para>2021-06-08</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Make shutting down the netwrok more robust.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem revision="sysv">
      <para>2021-06-02</para>
      <itemizedlist>
        <listitem>
          <para>[thomas] - Tweak sendsignal bootscript to avoid
            killing mdmod (if active).</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-05-31</para>
      <itemizedlist>
        <listitem>
          <para>[ken] - Update to linux-5.12.8 (security fix). Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4863">#4863</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-05-28</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Update to iana-etc-20210526. Addresses
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4722">#4722</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to vim-8.2.2890. Addresses
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4500">#4500</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to zstd-1.5.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4858">#4858</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to perl-5.34.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4860">#4860</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to linux-5.12.7. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4857">#4857</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to libcap-2.50. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4862">#4862</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to kmod-29. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4859">#4859</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to expat-2.4.1. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4861">#4861</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to elfutils-0.185. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4855">#4855</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to bc-4.0.2. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4855">#4855</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-05-26</para>
      <itemizedlist>
        <listitem>
          <para>[thomas] - Remove obsolete DOCDIR option from iproute2 install command.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-05-17</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Tweak install directories for eudev and e2fsprogs.
          Thanks to Ryan Marsaw for the report.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-05-14</para>
      <itemizedlist>
        <listitem>
          <para>[ken] - Add a Note about upgrading in OpenSSL.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-05-12</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Removed instructions for running tests
          in Python due to an indefinite hang in the partial
          LFS envrionment.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Moved LFS to a merged-/usr configuration. Thanks
          goes to Xi Ruoyao for doing almost all of the work. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4848">#4848</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to gcc-11.1.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4847">#4847</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Fix a FTBFS when building glibc-2.33 with
          gcc-11.1.0.</para>
        </listitem>
        
        <listitem>
          <para>[renodr] - Update to iproute2-5.12.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4852">#4852</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to Python-3.9.5. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4854">#4854</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to meson-0.58.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4853">#4853</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to linux-5.12.2. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4840">#4840</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-04-28</para>
      <itemizedlist>
        
        <listitem>
          <para>[bdubbs] - Add manual locales needed for tests
          if using alternate locale installation instructions. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4844">#4844</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Minor changes to boot scripts. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4842">#4842</ulink>.
          Thanks to Scott Andrews for the report.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-04-26</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Update to vim-8.2.2812. Addresses
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4500">#4500</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to iana-etc-20210407. Addresses
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4722">#4722</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to Python3-3.9.4. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4843">#4843</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to meson-0.57.2. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4846">#4846</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to linux-5.11.16. Addresses
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4840">#4840</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to less-581. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4849">#4849</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to file-5.40. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4839">#4839</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to bc-4.0.1. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4845">#4845</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-04-22</para>
      <itemizedlist>
        <listitem>
          <para>[xry111] - Revert 2772bb9c, as the proposed fix in it is
          rejected by Python maintainers explicitly.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-04-06</para>
      <itemizedlist>
        <listitem>
          <para>The XML source code of this book is migrated from SVN
          to Git.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-03-26</para>
      <itemizedlist>
        <listitem>
          <para>[renodr] - Update to openssl-1.1.1k (Security Update). Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4838">#4838</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to attr-2.5.1. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4833">#4833</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to linux-5.11.10. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4834">#4834</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to bc-3.3.4. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4835">#4835</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to man-pages-5.11. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4836">#4836</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to expat-2.3.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4837">#4837</ulink>.</para>
        </listitem>
        <listitem>
          <para>[renodr] - Update to acl-2.3.1. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4832">#4832</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-03-17</para>
      <itemizedlist>
        <listitem>
          <para>[xry111] - Use <option>-j1</option> for Binutils
		    installation.  Thanks report from Hans Meier.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-03-15</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - Update to vim-8.2.2604. Addreses
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4500">#4500</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to iana-etc-20210304. Addreses
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4722">#4722</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to zstd-1.4.9. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4827">#4827</ulink>.</para>
        </listitem>
        <listitem revision="sysv">
          <para>[bdubbs] - Update to sysvinit-2.99. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4822">#4822</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to linux-5.11.6. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4824">#4824</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to libcap-2.49. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4831">#4831</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to iproute2-5.11.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4823">#4823</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to e2fsprogs-1.46.2. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4826">#4826</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to bison-3.7.6. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4828">#4828</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to bc-3.3.3. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4825">#4825</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to attr-2.5.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4830">#4830</ulink>.</para>
        </listitem>
        <listitem>
          <para>[bdubbs] - Update to acl-2.3.0. Fixes
          <ulink url="https://wiki.linuxfromscratch.org/lfs/ticket/4829">#4829</ulink>.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    

    

    <listitem>
      <para>2021-03-02</para>
      <itemizedlist>
        <listitem>
          <para>[pierre] - Fix a header file for python, so that
          <command moreinfo="none">#include &lt;python3.9/Python.h&gt;</command>
          works.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>2021-03-01</para>
      <itemizedlist>
        <listitem>
          <para>[bdubbs] - LFS-10.1 released.</para>
        </listitem>
      </itemizedlist>
    </listitem>

  </itemizedlist>
</sect1>
  <sect1 id="ch-intro-resources">
  <?dbhtml filename="resources.html"?>

  <title>Resources</title>

  <sect2 id="ch-intro-faq">
    <title>FAQ</title>

    <para>If during the building of the LFS system you encounter any
    errors, have any questions, or think there is a typo in the book,
    please start by consulting the Frequently Asked Questions (FAQ)
    that is located at <ulink url="https://www.linuxfromscratch.org/faq/"/>.</para>

  </sect2>

  <sect2 id="ch-intro-maillists" xreflabel="Chapter&#xA0;1 - Mailing Lists">
    <title>Mailing Lists</title>

    <para>The <uri>linuxfromscratch.org</uri> server hosts a number of mailing
    lists used for the development of the LFS project. These lists include the
    main development and support lists, among others. If the FAQ does not solve
    the problem you are having, the next step would be to search the mailing
    lists at <ulink url="https://www.linuxfromscratch.org/search.html"/>.</para>

    <para>For information on the different lists, how to subscribe, archive
    locations, and additional information, visit
    <ulink url="https://www.linuxfromscratch.org/mail.html"/>.</para>

  </sect2>

  <!-- FIXME: Remove until such time as we have our own News Server, JH 20060105

  <sect2 id="ch-intro-newsserver">
    <title>News Server</title>

    <para>The mailing lists hosted at <uri>linuxfromscratch.org</uri> are
    also accessible via the Network News Transfer Protocol (NNTP) server.
    All messages posted to a mailing list are copied to the corresponding
    newsgroup, and vice versa.</para>

    <para>The news server is located at
    <uri>news.linuxfromscratch.org</uri>.</para>

  </sect2> -->

  <sect2 id="ch-intro-irc">
    <title>IRC</title>

    <para>Several members of the LFS community offer assistance on Internet
    Relay Chat (IRC). Before using this support, please make sure that your
    question is not already answered in the LFS FAQ or the mailing list
    archives. You can find the IRC network at <uri>irc.libera.chat</uri>.
    The support channel is named #LFS-support.</para>

  </sect2>

  <!-- Commentted out until the target link is updated
  <sect2 id="ch-intro-references">
    <title>References</title>

    <para>For additional information on the packages, useful tips are
    available in the LFS Package Reference page located at <ulink
    url="https://www.linuxfromscratch.org/~matthew/LFS-references.html"/>.</para>

  </sect2>  -->

  <sect2 id="ch-intro-mirrors" xreflabel="Chapter&#xA0;1 - Mirror sites">
    <title>Mirror Sites</title>

    <para>The LFS project has a number of world-wide mirrors to make accessing
    the website and downloading the required packages more convenient. Please
    visit the LFS website at <ulink url="https://www.linuxfromscratch.org/mirrors.html"/> for a list
    of current mirrors.</para>

  </sect2>

  <sect2 id="ch-intro-contactinfo">
    <title>Contact Information</title>

    <para>Please direct all your questions and comments to one of the LFS
    mailing lists (see above).</para>

  </sect2>

</sect1>
  <sect1 id="ch-intro-askforhelp">
  <?dbhtml filename="askforhelp.html"?>

  <title>Help</title>

  <para>If an issue or a question is encountered while working through
  this book, please check the FAQ page at <ulink url="https://www.linuxfromscratch.org/faq/#generalfaq"/>.
  Questions are often already answered there. If your question is not
  answered on this page, try to find the source of the problem. The
  following hint will give you some guidance for troubleshooting:
  <ulink url="https://www.linuxfromscratch.org/hints/downloads/files/errors.txt"/>.</para>

  <para>If you cannot find your problem listed in the FAQ, search the mailing
  lists at <ulink url="https://www.linuxfromscratch.org/search.html"/>.</para>

  <para>We also have a wonderful LFS community that is willing to offer
  assistance through the mailing lists and IRC (see the <xref linkend="ch-intro-resources"/> section of this book). However,
  we get several support questions every day and many of them can be easily
  answered by going to the FAQ and by searching the mailing lists first.
  So, for us to offer the best assistance possible, you need to do some
  research on your own first. That allows us to focus on the more unusual
  support needs. If your searches do not produce a solution, please include
  all relevant information (mentioned below) in your request for help.</para>

  <sect2>
    <title>Things to Mention</title>

    <para>Apart from a brief explanation of the problem being experienced,
    the essential things to include in any request for help are:</para>

    <itemizedlist>
      <listitem>
        <para>The version of the book being used (in this case 
              <phrase revision="sysv">11.0</phrase>
              )</para>
      </listitem>
      <listitem>
        <para>The host distribution and version being used to create LFS</para>
      </listitem>
      <listitem>
        <para>The output from the <xref linkend="version-check"/> script</para>
      </listitem>
      <listitem>
        <para>The package or section the problem was encountered in</para>
      </listitem>
      <listitem>
        <para>The exact error message or symptom being received</para>
      </listitem>
      <listitem>
        <para>Note whether you have deviated from the book at all </para>
      </listitem>
    </itemizedlist>

    <note>
      <para>Deviating from this book does <emphasis>not</emphasis> mean that
      we will not help you. After all, LFS is about personal preference.
      Being upfront about any changes to the established procedure helps us
      evaluate and determine possible causes of your problem.</para>
    </note>

  </sect2>

  <sect2>
    <title>Configure Script Problems</title>

    <para>If something goes wrong while running the <command moreinfo="none">configure</command>
    script, review the <filename moreinfo="none">config.log</filename> file. This file may
    contain errors encountered during <command moreinfo="none">configure</command> which were
    not printed to the screen. Include the <emphasis>relevant</emphasis> lines
    if you need to ask for help.</para>

  </sect2>

  <sect2>
    <title>Compilation Problems</title>

    <para>Both the screen output and the contents of various files are useful
    in determining the cause of compilation problems. The screen output from
    the <command moreinfo="none">configure</command> script and the <command moreinfo="none">make</command>
    run can be helpful. It is not necessary to include the entire output, but
    do include enough of the relevant information. Below is an example of the
    type of information to include from the screen output from
    <command moreinfo="none">make</command>:</para>

<screen format="linespecific"><computeroutput moreinfo="none">gcc -DALIASPATH=\"/mnt/lfs/usr/share/locale:.\"
-DLOCALEDIR=\"/mnt/lfs/usr/share/locale\"
-DLIBDIR=\"/mnt/lfs/usr/lib\"
-DINCLUDEDIR=\"/mnt/lfs/usr/include\" -DHAVE_CONFIG_H -I. -I.
-g -O2 -c getopt1.c
gcc -g -O2 -static -o make ar.o arscan.o commands.o dir.o
expand.o file.o function.o getopt.o implicit.o job.o main.o
misc.o read.o remake.o rule.o signame.o variable.o vpath.o
default.o remote-stub.o version.o opt1.o
-lutil job.o: In function `load_too_high':
/lfs/tmp/make-3.79.1/job.c:1565: undefined reference
to `getloadavg'
collect2: ld returned 1 exit status
make[2]: *** [make] Error 1
make[2]: Leaving directory `/lfs/tmp/make-3.79.1'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/lfs/tmp/make-3.79.1'
make: *** [all-recursive-am] Error 2</computeroutput></screen>

    <para>In this case, many people would just include the bottom
    section:</para>

<screen format="linespecific"><computeroutput moreinfo="none">make [2]: *** [make] Error 1</computeroutput></screen>

    <para>This is not enough information to properly diagnose the problem
    because it only notes that something went wrong, not
    <emphasis>what</emphasis> went wrong. The entire section, as in the
    example above, is what should be saved because it includes the command
    that was executed and the associated error message(s).</para>

    <para>An excellent article about asking for help on the Internet is
    available online at <ulink url="http://catb.org/~esr/faqs/smart-questions.html"/>. Read and
    follow the hints in this document to increase the likelihood of getting
    the help you need.</para>

  </sect2>

</sect1>
  <!--<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="livecd.xml"/>-->

</chapter>
</part>

<part id="part2">
<title>Preparing for the Build</title>
<?dbhtml filename="part2.html"?>
<chapter id="chapter-partitioning" xreflabel="Chapter&#xA0;2" xml:base="chapter02/chapter02.xml">
  <?dbhtml dir="chapter02"?>
  <?dbhtml filename="chapter02.html"?>

  <title>Preparing the Host System</title>

  <sect1 id="ch-partitioning-introduction">
  <?dbhtml filename="introduction.html"?>

  <title>Introduction</title>

  <para>In this chapter, the host tools needed for building LFS
  are checked and, if necessary, installed.  Then a partition which will 
  host the LFS system is prepared. We will create the partition 
  itself, create a file system on it, and mount it.</para>

</sect1>
  <sect1 id="ch-partitioning-hostreqs" xreflabel="Host System Requirements">
  <?dbhtml filename="hostreqs.html"?>

  <title>Host System Requirements</title>

    <para>Your host system should have the following software with the
    minimum versions indicated. This should not be an issue for most
    modern Linux distributions. Also note that many distributions will
    place software headers into separate packages, often in the form of
    <quote>&lt;package-name&gt;-devel</quote> or
    <quote>&lt;package-name&gt;-dev</quote>. Be sure to install those if
    your distribution provides them.</para>

   <para>Earlier versions of the listed software packages may work, but have
   not been tested.</para>

  <itemizedlist spacing="compact">

    <listitem>
      <para><emphasis role="strong">Bash-3.2</emphasis> (/bin/sh
      should be a symbolic or hard link to bash)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Binutils-2.25</emphasis> (Versions
      greater than 2.37 are not recommended as they have
      not been tested)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Bison-2.7</emphasis> (/usr/bin/yacc
      should be a link to bison or small script that executes bison)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Bzip2-1.0.4</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Coreutils-6.9</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Diffutils-2.8.1</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Findutils-4.2.31</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Gawk-4.0.1</emphasis> (/usr/bin/awk
      should be a link to gawk)</para>
    </listitem>

    <!-- glibc-2.30 requires gcc-6.2 or later -->
    <listitem>
      <para><emphasis role="strong">GCC-6.2</emphasis> including the C++
      compiler, <command moreinfo="none">g++</command> (Versions greater than 11.2.0 are
      not recommended as they have not been tested)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Glibc-2.11</emphasis> (Versions
      greater than 2.34 are not recommended as they have
      not been tested)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Grep-2.5.1a</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Gzip-1.3.12</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Linux Kernel-3.2</emphasis></para>

      <para>The reason for the kernel version requirement is that we specify
      that version when building <application moreinfo="none">glibc</application> in
      <xref linkend="chapter-cross-tools"/> and
      <xref linkend="chapter-building-system"/>,
      at the recommendation of the developers.  It is also required by
      udev.</para>

      <para>If the host kernel is earlier than 3.2 you will need to replace
      the kernel with a more up to date version. There are two ways
      you can go about this. First, see if your Linux vendor provides a 3.2
      or later kernel package. If so, you may wish to install it. If your
      vendor doesn't offer an acceptable kernel package, or you would prefer not to
      install it, you can compile a kernel yourself. Instructions for
      compiling the kernel and configuring the boot loader (assuming the host
      uses GRUB) are located in <xref linkend="chapter-bootable"/>.</para>

    </listitem>

    <listitem>
      <para><emphasis role="strong">M4-1.4.10</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Make-4.0</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Patch-2.5.4</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Perl-5.8.8</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Python-3.4</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Sed-4.1.5</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Tar-1.22</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Texinfo-4.7</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Xz-5.0.0</emphasis></para>
    </listitem>

  </itemizedlist>

  <important>
    <para>Note that the symlinks mentioned above are required to build an LFS
    system using the instructions contained within this book. Symlinks that
    point to other software (such as dash, mawk, etc.) may work, but are not
    tested or supported by the LFS development team, and may require either
    deviation from the instructions or additional patches to some
    packages.</para>
  </important>

  <!-- Use an empty sect2 element to prevent a pdf warning.  -->
  <bridgehead renderas="sect2" id="version-check" xreflabel="Host System Requirements">
  </bridgehead>
  <!--<title> </title>-->

  <para>To see whether your host system has all the appropriate versions, and
  the ability to compile programs, run the following:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">cat &gt; version-check.sh &lt;&lt; "EOF"
<literal moreinfo="none">#!/bin/bash
# Simple script to list version numbers of critical development tools
export LC_ALL=C
bash --version | head -n1 | cut -d" " -f2-4
MYSH=$(readlink -f /bin/sh)
echo "/bin/sh -&gt; $MYSH"
echo $MYSH | grep -q bash || echo "ERROR: /bin/sh does not point to bash"
unset MYSH

echo -n "Binutils: "; ld --version | head -n1 | cut -d" " -f3-
bison --version | head -n1

if [ -h /usr/bin/yacc ]; then
  echo "/usr/bin/yacc -&gt; `readlink -f /usr/bin/yacc`";
elif [ -x /usr/bin/yacc ]; then
  echo yacc is `/usr/bin/yacc --version | head -n1`
else
  echo "yacc not found" 
fi

bzip2 --version 2&gt;&amp;1 &lt; /dev/null | head -n1 | cut -d" " -f1,6-
echo -n "Coreutils: "; chown --version | head -n1 | cut -d")" -f2
diff --version | head -n1
find --version | head -n1
gawk --version | head -n1

if [ -h /usr/bin/awk ]; then
  echo "/usr/bin/awk -&gt; `readlink -f /usr/bin/awk`";
elif [ -x /usr/bin/awk ]; then
  echo awk is `/usr/bin/awk --version | head -n1`
else 
  echo "awk not found" 
fi

gcc --version | head -n1
g++ --version | head -n1
ldd --version | head -n1 | cut -d" " -f2-  # glibc version
grep --version | head -n1
gzip --version | head -n1
cat /proc/version
m4 --version | head -n1
make --version | head -n1
patch --version | head -n1
echo Perl `perl -V:version`
python3 --version
sed --version | head -n1
tar --version | head -n1
makeinfo --version | head -n1  # texinfo version
xz --version | head -n1

echo 'int main(){}' &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c
if [ -x dummy ]
  then echo "g++ compilation OK";
  else echo "g++ compilation failed"; fi
rm -f dummy.c dummy</literal>
EOF

bash version-check.sh</userinput></screen>
<!--
  <para>Also check for some library consistency:</para>

<screen role="nodump"><userinput>cat &gt; library-check.sh &lt;&lt; "EOF"
<literal>#!/bin/bash
for lib in lib{gmp,mpfr,mpc}.la; do
  echo $lib: $(if find /usr/lib* -name $lib|
               grep -q $lib;then :;else echo not;fi) found
done
unset lib</literal>
EOF

bash library-check.sh</userinput></screen>

<para>The files identified by this script should be all present
or all absent, but not only one or two present.</para>
-->

</sect1>
  <sect1 id="ch-partitioning-stages">
  <?dbhtml filename="stages.html"?>

  <title>Building LFS in Stages</title>

  <para>LFS is designed to be built in one session.  That is, the
  instructions assume that the system will not be shut down
  during the process.  That does not mean that the system has to
  be done in one sitting.  The issue is that certain procedures
  have to be re-accomplished after a reboot if resuming LFS at
  different points.</para>

  <sect2>
  <title>ChaptersÂ 1â4</title>

    <para>These chapters are accomplished on the host system.  When
    restarting, be careful of the following:</para>
  
    <itemizedlist>
      <listitem>
        <para>Procedures done as the
        <systemitem class="username" moreinfo="none">root</systemitem> user after Section
        2.4 need to have the LFS environment variable set
        <emphasis>FOR THE ROOT USER</emphasis>.</para>
      </listitem>
    </itemizedlist>
  </sect2>
  
  <sect2>
  <title>ChapterÂ 5â6</title>

    <itemizedlist>
      <listitem>
        <para>The /mnt/lfs partition must be mounted.</para>
      </listitem>

      <listitem>
        <para>These two chapters <emphasis>must</emphasis> be done as user
        <systemitem class="username" moreinfo="none">lfs</systemitem>.
        A <command moreinfo="none">su - lfs</command> needs to be done before any task in these
        chapters. Failing to do that, you are at risk of installing packages to the
        host, and potentially rendering it unusable.</para>
      </listitem>

      <listitem>
         <para>The procedures in <xref linkend="ch-tools-generalinstructions"/>
         are critical.  If there is any
         doubt about installing a package, ensure any previously expanded
         tarballs are removed, then re-extract the package files, and complete all
         instructions in that section.</para>
      </listitem>
    </itemizedlist>
  </sect2>

  <sect2>
  <title>ChapterÂ 7â10</title>

    <itemizedlist>
      <listitem>
         <para>The /mnt/lfs partition must be mounted.</para>
      </listitem>

      <listitem>
        <para>A few operations, from <quote>Changing Ownership</quote> to
        <quote>Entering the Chroot Environment</quote> must be done as the
        <systemitem class="username" moreinfo="none">root</systemitem> user, with the LFS
        environment variable set for the
        <systemitem class="username" moreinfo="none">root</systemitem>user.</para>
      </listitem>

      <listitem>
         <para> When entering chroot, the LFS environment variable must be set
         for <systemitem class="username" moreinfo="none">root</systemitem>. The LFS
         variable is not used afterwards.</para>
      </listitem>

      <listitem>
         <para> The virtual file systems must be mounted.  This can be done
         before or after entering chroot by changing to a host virtual terminal
         and, as <systemitem class="username" moreinfo="none">root</systemitem>, running the
         commands in 
         <xref linkend="ch-tools-bindmount"/> and 
         <xref linkend="ch-tools-kernfsmount"/>.</para>
      </listitem>
    </itemizedlist>
  </sect2>
</sect1>
  <sect1 id="ch-partitioning-creatingpartition">
  <?dbhtml filename="creatingpartition.html"?>

  <title>Creating a New Partition</title>

  <para>Like most other operating systems, LFS is usually installed on a
  dedicated partition. The recommended approach to building an LFS system
  is to use an available empty partition or, if you have enough unpartitioned
  space, to create one.</para>

  <para>A minimal system requires a partition of around 10 gigabytes (GB).
  This is enough to store all the source tarballs and compile the packages.
  However, if the LFS system is intended to be the primary Linux system,
  additional software will probably be installed which will require additional
  space. A 30 GB partition is a reasonable size to provide for growth.  The LFS
  system itself will not take up this much room.  A large portion of this
  requirement is to provide sufficient free temporary storage as well as
  for adding additional capabilities after LFS is complete. Additionally, compiling
  packages can require a lot of disk space which will be reclaimed after the
  package is installed.</para>

  <para>Because there is not always enough Random Access Memory (RAM) available
  for compilation processes, it is a good idea to use a small disk partition as
  <systemitem class="filesystem" moreinfo="none">swap</systemitem> space. This is used by the
  kernel to store seldom-used data and leave more memory available for active
  processes. The <systemitem class="filesystem" moreinfo="none">swap</systemitem> partition for
  an LFS system can be the same as the one used by the host system, in which
  case it is not necessary to create another one.</para>

  <para>Start a disk partitioning program such as <command moreinfo="none">cfdisk</command>
  or <command moreinfo="none">fdisk</command> with a command line option naming the hard
  disk on which the new partition will be createdâfor example
  <filename class="devicefile" moreinfo="none">/dev/sda</filename> for the primary 
  disk drive. Create a Linux native partition and a
  <systemitem class="filesystem" moreinfo="none">swap</systemitem> partition, if needed. Please
  refer to <filename moreinfo="none">cfdisk(8)</filename> or <filename moreinfo="none">fdisk(8)</filename> if
  you do not yet know how to use the programs.</para>

  <note><para>For experienced users, other partitioning schemes are possible.
  The new LFS system can be on a software <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/raid.html">RAID</ulink> array or an <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/aboutlvm.html">LVM</ulink> logical volume.
  However, some of these options require an <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/initramfs.html">initramfs</ulink>, which is
  an advanced topic.  These partitioning methodologies are not recommended for
  first time LFS users.</para></note>

  <para>Remember the designation of the new partition (e.g., <filename class="devicefile" moreinfo="none">sda5</filename>). This book will refer to this as
  the LFS partition. Also remember the designation of the <systemitem class="filesystem" moreinfo="none">swap</systemitem> partition. These names will be
  needed later for the <filename moreinfo="none">/etc/fstab</filename> file.</para>

  <sect2>
  <title>Other Partition Issues</title>

  <para>Requests for advice on system partitioning are often posted on the LFS mailing
  lists. This is a highly subjective topic.  The default for most distributions
  is to use the entire drive with the exception of one small swap partition.  This
  is not optimal for LFS for several reasons.  It reduces flexibility, makes
  sharing of data across multiple distributions or LFS builds more difficult, makes
  backups more time consuming, and can waste disk space through inefficient
  allocation of file system structures.</para>

    <sect3>
    <title>The Root Partition</title>

    <para>A root LFS partition (not to be confused with the
    <filename class="directory" moreinfo="none">/root</filename> directory) of
    twenty gigabytes is a good compromise for most systems.  It provides enough
    space to build LFS and most of BLFS, but is small enough so that multiple
    partitions can be easily created for experimentation.</para> </sect3>

    <sect3>
    <title>The Swap Partition</title>

    <para>Most distributions automatically create a swap partition.  Generally
    the recommended size of the swap partition is about twice the amount of
    physical RAM, however this is rarely needed.  If disk space is limited,
    hold the swap partition to two gigabytes and monitor the amount of disk
    swapping.</para>

    <para>If you want to use the hibernation feature (suspend-to-disk) of Linux,
    it writes out the contents of RAM to the swap partition before turning off 
    the machine. In this case the size of the swap partition should be at
    least as large as the system's installed RAM.</para>

    <para>Swapping is never good. For mechanical hard drives you can generally
    tell if a system is swapping by just listening to disk activity and
    observing how the system reacts to commands.  For an SSD drive you will not
    be able to hear swapping but you can tell how much swap space is being used
    by the <command moreinfo="none">top</command> or <command moreinfo="none">free</command> programs.  Use of
    an SSD drive for a swap partition should be avoided if possible.  The first
    reaction to swapping should be to check for an unreasonable command such as
    trying to edit a five gigabyte file. If swapping becomes a normal
    occurrence, the best solution is to purchase more RAM for your
    system.</para> </sect3>

    <sect3>
    <title>The Grub Bios Partition</title>

    <para>If the <emphasis>boot disk</emphasis> has been partitioned with a
    GUID Partition Table (GPT), then a small, typically 1 MB, partition must be
    created if it does not already exist.  This partition is not formatted, but
    must be available for GRUB to use during installation of the boot
    loader. This partition will normally be labeled 'BIOS Boot' if using
    <command moreinfo="none">fdisk</command> or have a code of <emphasis>EF02</emphasis> if
    using <command moreinfo="none">gdisk</command>.</para>

    <note><para>The Grub Bios partition must be on the drive that the BIOS 
    uses to boot the system.  This is not necessarily the same drive where the 
    LFS root partition is located. Disks on a system may use different
    partition table types.  The requirement for this partition depends
    only on the partition table type of the boot disk.</para></note>
    </sect3>

    <sect3>
    <title>Convenience Partitions</title>

    <para>There are several other partitions that are not required, but should
    be considered when designing a disk layout.  The following list
    is not comprehensive, but is meant as a guide.</para>

    <itemizedlist>

      <listitem><para>/boot â Highly recommended.  Use this partition to
      store kernels and other booting information.  To minimize potential boot
      problems with larger disks, make this the first physical partition on
      your first disk drive.  A partition size of 200 megabytes is quite
      adequate.</para></listitem>

      <listitem><para>/home â Highly recommended.  Share your home
      directory and user customization across multiple distributions or LFS
      builds.  The size is generally fairly large and depends on available disk
      space.</para></listitem>

      <listitem><para>/usr â In LFS,
      <filename class="directory" moreinfo="none">/bin</filename>,
      <filename class="directory" moreinfo="none">/lib</filename>, and
      <filename class="directory" moreinfo="none">/sbin</filename> are symlinks to their
      counterpart in <filename class="directory" moreinfo="none">/usr</filename>.
      So <filename class="directory" moreinfo="none">/usr</filename> contains all binaries
      needed for the system to run.  For LFS a separate partition for
      <filename class="directory" moreinfo="none">/usr</filename> is normally not needed.
      If you need it anyway, you should make a partition large enough to
      fit all programs and libraries in the system.  The root partition can be
      very small (maybe just one gigabyte) in this configuration, so it's
      suitable for a thin client or diskless workstation (where
      <filename class="directory" moreinfo="none">/usr</filename> is mounted from a remote
      server).  However you should take care that an initramfs (not covered by
      LFS) will be needed to boot a system with separate
      <filename class="directory" moreinfo="none">/usr</filename> partition.</para></listitem>

      <listitem><para>/opt â This directory is most useful for
      BLFS where multiple installations of large packages like Gnome or KDE can
      be installed without embedding the files in the /usr hierarchy.  If
      used, 5 to 10 gigabytes is generally adequate.</para>
      </listitem>

      <listitem><para>/tmp â A separate /tmp directory is rare, but
      useful if configuring a thin client.  This partition, if used, will
      usually not need to exceed a couple of gigabytes.</para></listitem>

      <listitem><para>/usr/src â This partition is very
      useful for providing a location to store BLFS source files and
      share them across LFS builds.  It can also be used as a location
      for building BLFS packages.  A reasonably large partition of 30-50
      gigabytes allows plenty of room.</para></listitem>

    </itemizedlist>

    <para>Any separate partition that you want automatically mounted upon boot
    needs to be specified in the <filename moreinfo="none">/etc/fstab</filename>.  Details
    about how to specify partitions will be discussed in <xref linkend="ch-bootable-fstab"/>.  </para>

    </sect3>
  </sect2>
</sect1>
  <sect1 id="ch-partitioning-creatingfilesystem">
  <?dbhtml filename="creatingfilesystem.html"?>

  <title>Creating a File System on the Partition</title>

  <para>Now that a blank partition has been set up, the file system can be
  created.  LFS can use any file system recognized by the Linux kernel, but the 
  most common types are ext3 and ext4.  The choice of file system can be 
  complex and depends on the characteristics of the files and the size of 
  the partition.  For example:</para>

  <variablelist>
    <varlistentry>
      <term>ext2</term>
      <listitem><para>is suitable for small partitions that are updated infrequently
      such as /boot.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>ext3</term>
      <listitem><para>is an upgrade to ext2 that includes a journal
      to help recover the partition's status in the case of an unclean 
      shutdown.  It is commonly used as a general purpose file system.
      </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>ext4</term>
      <listitem><para>is the latest version of the ext file system family of
      partition types.  It provides several new capabilities including
      nano-second timestamps, creation and use of very large files (16 TB), and
      speed improvements.</para>
      </listitem>
    </varlistentry>
  </variablelist>

  <para>Other file systems, including FAT32, NTFS, ReiserFS, JFS, and XFS are
  useful for specialized purposes.  More information about these file systems
  can be found at <ulink url="http://en.wikipedia.org/wiki/Comparison_of_file_systems"/>.</para>

  <para>LFS assumes that the root file system (/) is of type ext4.  To create
  an <systemitem class="filesystem" moreinfo="none">ext4</systemitem> file system on the LFS
  partition, run the following:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">mkfs -v -t ext4 /dev/<replaceable>&lt;xxx&gt;</replaceable></userinput></screen>

  <para>Replace <replaceable>&lt;xxx&gt;</replaceable> with the name of the LFS
  partition.</para>

  <para>If you are using an existing <systemitem class="filesystem" moreinfo="none">swap
  </systemitem> partition, there is no need to format it. If a new
  <systemitem class="filesystem" moreinfo="none"> swap</systemitem> partition was created,
  it will need to be initialized with this command:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">mkswap /dev/<replaceable>&lt;yyy&gt;</replaceable></userinput></screen>

  <para>Replace <replaceable>&lt;yyy&gt;</replaceable> with the name of the
  <systemitem class="filesystem" moreinfo="none">swap</systemitem> partition.</para>

</sect1>
  <sect1 id="ch-partitioning-aboutlfs">
  <?dbhtml filename="aboutlfs.html"?>

  <title>Setting The $LFS Variable</title>

  <para>Throughout this book, the environment variable <envar>LFS</envar> will
  be used several times. You should ensure that this variable is always defined
  throughout the LFS build process. It should be set to the name of the
  directory where you will be building your LFS system - we will use
  <filename class="directory" moreinfo="none">/mnt/lfs</filename> as an example, but the
  directory choice is up to you. If you are building LFS on a separate
  partition, this directory will be the mount point for the partition.
  Choose a directory location and set the variable with the
  following command:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">export LFS=<replaceable>/mnt/lfs</replaceable></userinput></screen>

  <para>Having this variable set is beneficial in that commands such as
  <command moreinfo="none">mkdir -v $LFS/tools</command> can be typed literally. The shell
  will automatically replace <quote>$LFS</quote> with
  <quote>/mnt/lfs</quote> (or whatever the variable was set to) when it
  processes the command line.</para>

  <caution>
  <para>Do not forget to check that <envar>LFS</envar> is set whenever
  you leave and reenter the current working environment (such as when doing a
  <command moreinfo="none">su</command> to <systemitem class="username" moreinfo="none">root</systemitem> or
  another user). Check that the <envar>LFS</envar> variable is set up
  properly with:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">echo $LFS</userinput></screen>

  <para>Make sure the output shows the path to your LFS system's build
  location, which is <filename class="directory" moreinfo="none">/mnt/lfs</filename> if the
  provided example was followed. If the output is incorrect, use the command
  given earlier on this  page to set <envar>$LFS</envar> to the correct
  directory name.</para>
  </caution>

  <note><para>One way to ensure that the <envar>LFS</envar> variable is always
  set is to edit the <filename moreinfo="none">.bash_profile</filename> file in both your
  personal home directory and in  <filename moreinfo="none">/root/.bash_profile</filename> and
  enter the export command above.  In addition, the shell specified in the
  <filename moreinfo="none">/etc/passwd</filename> file for all users that need the
  <envar>LFS</envar> variable needs to be bash to ensure that the
  <filename moreinfo="none">/root/.bash_profile</filename> file is incorporated as a part of
  the login process.</para>
  
  <para>Another consideration is the method that is used to log into the
  host system.  If logging in through a graphical display manager, the
  user's <filename moreinfo="none">.bash_profile</filename> is not normally used when
  a virtual terminal is started.  In this case, add the export command to
  the <filename moreinfo="none">.bashrc</filename> file for the user and
  <systemitem class="username" moreinfo="none">root</systemitem>.  In addition, 
  some distributions have instructions to not run the <filename moreinfo="none">.bashrc</filename> 
  instructions in a non-interactive bash invocation.  Be sure to add the
  export command before the test for non-interactive use.</para>
  
  </note>

</sect1>
  <sect1 id="ch-partitioning-mounting">
  <?dbhtml filename="mounting.html"?>

  <title>Mounting the New Partition</title>

  <para>Now that a file system has been created, the partition needs to
  be made accessible. In order to do this, the partition needs to be
  mounted at a chosen mount point. For the purposes of this book, it is
  assumed that the file system is mounted under the directory specified by the
  <envar>LFS</envar> environment variable as described in the previous section.
  </para>

  <para>Create the mount point and mount the LFS file system by running:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">mkdir -pv $LFS
mount -v -t ext4 /dev/<replaceable>&lt;xxx&gt;</replaceable> $LFS</userinput></screen>

  <para>Replace <replaceable>&lt;xxx&gt;</replaceable> with the designation of the LFS
  partition.</para>

  <para>If using multiple partitions for LFS (e.g., one for <filename class="directory" moreinfo="none">/</filename> and another for <filename class="directory" moreinfo="none">/home</filename>), mount them using:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">mkdir -pv $LFS
mount -v -t ext4 /dev/<replaceable>&lt;xxx&gt;</replaceable> $LFS
mkdir -v $LFS/home
mount -v -t ext4 /dev/<replaceable>&lt;yyy&gt;</replaceable> $LFS/home</userinput></screen>

  <para>Replace <replaceable>&lt;xxx&gt;</replaceable> and
  <replaceable>&lt;yyy&gt;</replaceable> with the appropriate partition
  names.</para>

  <para>Ensure that this new partition is not mounted with permissions that are
  too restrictive (such as the <option>nosuid</option> or
  <option>nodev</option> options). Run the <command moreinfo="none">mount</command> command
  without any parameters to see what options are set for the mounted LFS
  partition. If <option>nosuid</option> and/or <option>nodev</option> are set,
  the partition will need to be remounted.</para>

  <warning><para>The above instructions assume that you will not be restarting
  your computer throughout the LFS process.  If you shut down your system,
  you will either need to remount the LFS partition each time you restart 
  the build process or modify your host system's /etc/fstab file to automatically 
  remount it upon boot.  For example:

<screen role="nodump" format="linespecific">/dev/<replaceable>&lt;xxx&gt;</replaceable>  /mnt/lfs ext4   defaults      1     1</screen>

  If you use additional optional partitions, be sure to add them also.

  </para></warning>


  <para>If you are using a <systemitem class="filesystem" moreinfo="none">swap</systemitem> partition, ensure that it is enabled
  using the <command moreinfo="none">swapon</command> command:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">/sbin/swapon -v /dev/<replaceable>&lt;zzz&gt;</replaceable></userinput></screen>

  <para>Replace <replaceable>&lt;zzz&gt;</replaceable> with the name of the
  <systemitem class="filesystem" moreinfo="none">swap</systemitem> partition.</para>

  <para>Now that there is an established place to work, it is time to
  download the packages.</para>

</sect1>

</chapter>
<chapter id="chapter-getting-materials" xreflabel="Chapter&#xA0;3" xml:base="chapter03/chapter03.xml">
  <?dbhtml dir="chapter03"?>
  <?dbhtml filename="chapter03.html"?>

  <title>Packages and Patches</title>

  <sect1 id="ch-materials-introduction">
  <?dbhtml filename="introduction.html"?>

  <title>Introduction</title>

  <para>This chapter includes a list of packages that need to be downloaded in
  order to build a basic Linux system. The listed version numbers correspond to
  versions of the software that are known to work, and this book is based on
  their use. We highly recommend against using newer versions because the build
  commands for one version may not work with a newer version. The newest package
  versions may also have problems that require work-arounds. These work-arounds
  will be developed and stabilized in the development version of the
  book.</para>

  <para>Download locations may not always be accessible. If a download
  location has changed since this book was published, Google (<ulink url="http://www.google.com/"/>) provides a useful search engine for
  most packages. If this search is unsuccessful, try one of the
  alternative means of downloading at <ulink url="https://www.linuxfromscratch.org/lfs/mirrors.html#files"/>. </para>

  <para>Downloaded packages and patches will need to be stored somewhere
  that is conveniently available throughout the entire build. A working
  directory is also required to unpack the sources and build them.
  <filename class="directory" moreinfo="none">$LFS/sources</filename> can be used both
  as the place to store the tarballs and patches and as a working
  directory. By using this directory, the required elements will be
  located on the LFS partition and will be available during all stages
  of the building process.</para>

  <para>To create this directory, execute the following command, as user
  <systemitem class="username" moreinfo="none">root</systemitem>, before starting the download
  session:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">mkdir -v $LFS/sources</userinput></screen>

  <para>Make this directory writable and sticky. <quote>Sticky</quote>
  means that even if multiple users have write permission on a
  directory, only the owner of a file can delete the file within a
  sticky directory. The following command will enable the write and
  sticky modes:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">chmod -v a+wt $LFS/sources</userinput></screen>

  <para>There are several ways to optain all the necessary packages and patches
  to build LFS:</para>

  <itemizedlist>
    <listitem>
      <para>The files can be downloaded individually as described in the 
      next two sections.</para>
    </listitem>
    <listitem>
      <para>For stable versions of the book, a tarball of all the needed files 
      can be downloaded from one of the LFS files mirrors listed at
      <ulink url="https://www.linuxfromscratch.org/mirrors.html#files"/>.</para>
    </listitem>
    <listitem>
      <para>The files can be downloaded using <command moreinfo="none">wget</command> and
      a wget-list as described below.</para>
    </listitem>
  </itemizedlist>

  <para>To download all of the packages and patches by using
  <ulink url="../wget-list">wget-list</ulink> as an input to the
  <command moreinfo="none">wget</command> command, use:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">wget --input-file=wget-list --continue --directory-prefix=$LFS/sources</userinput></screen>

  <para>Additionally, starting with LFS-7.0, there is a separate file,
  <ulink url="../md5sums">md5sums</ulink>, which can be used to verify that all
  the correct packages are available before proceeding.  Place that file in
  <filename class="directory" moreinfo="none">$LFS/sources</filename> and run:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">pushd $LFS/sources
  md5sum -c md5sums
popd</userinput></screen>

  <para>This check can be used after retrieving the needed files with any of the 
  methods listed above.</para>

</sect1>
  <sect1 id="ch-materials-packages">
  <?dbhtml filename="packages.html"?>

  <title>All Packages</title>

  <para>Download or otherwise obtain the following packages:</para>

  <variablelist role="materials">

    <varlistentry>
      <term>Acl (2.3.1) - <token>348 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://savannah.nongnu.org/projects/acl"/></para>
        <para>Download: <ulink url="https://download.savannah.gnu.org/releases/acl/acl-2.3.1.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">95ce715fe09acca7c12d3306d0f076b2</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Attr (2.5.1) - <token>456 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://savannah.nongnu.org/projects/attr"/></para>
        <para>Download: <ulink url="https://download.savannah.gnu.org/releases/attr/attr-2.5.1.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">ac1c5a7a084f0f83b8cace34211f64d8</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Autoconf (2.71) - <token>1,263 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/autoconf/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">12cfa1687ffa2606337efe1a64416106</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Automake (1.16.4) - <token>1,564 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/automake/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/automake/automake-1.16.4.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">86e8e682bd74e6390a016c4d9c11267c</literal></para>
        <para>SHA256 sum: <literal moreinfo="none">80facc09885a57e6d49d06972c0ae1089c5fa8f4d4c7cfe5baea58e5085f136d</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Bash (5.1.8) - <token>10,287 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/bash/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/bash/bash-5.1.8.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">23eee6195b47318b9fd878e590ccb38c</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Bc (5.0.0) - <token>420 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://git.yzena.com/gavin/bc"/></para>
        <para>Download: <ulink url="https://github.com/gavinhoward/bc/releases/download/5.0.0/bc-5.0.0.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">8345bb81c576ddfc8c27e0842370603c</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Binutils (2.37) - <token>22,390 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/binutils/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/binutils/binutils-2.37.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">e78d9ff2976b745a348f4c1f27c77cb1</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Bison (3.7.6) - <token>2,566 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/bison/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/bison/bison-3.7.6.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">d61aa92e3562cb7292b004ce96173cf7</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Bzip2 (1.0.8) - <token>792 KB</token>:</term>
      <listitem>
        <!--<para>Home page: <ulink url="&bzip2-home;"/></para>-->
        <para>Download: <ulink url="https://www.sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">67e051268d0c475ea773822f7500d0e5</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Check (0.15.2) - <token>760 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://libcheck.github.io/check"/></para>
        <para>Download: <ulink url="https://github.com/libcheck/check/releases/download/0.15.2/check-0.15.2.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">50fcafcecde5a380415b12e9c574e0b2</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Coreutils (8.32) - <token>5,418 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/coreutils/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/coreutils/coreutils-8.32.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">022042695b7d5bcf1a93559a9735e668</literal></para>
      </listitem>
    </varlistentry>

    

    <varlistentry>
      <term>DejaGNU (1.6.3) - <token>608 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/dejagnu/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/dejagnu/dejagnu-1.6.3.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">68c5208c58236eba447d7d6d1326b821</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Diffutils (3.8) - <token>1,548 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/diffutils/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/diffutils/diffutils-3.8.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">6a6b0fdc72acfe3f2829aab477876fbc</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>E2fsprogs (1.46.4) - <token>9,298 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="http://e2fsprogs.sourceforge.net/"/></para>
        <para>Download: <ulink url="https://downloads.sourceforge.net/project/e2fsprogs/e2fsprogs/v1.46.4/e2fsprogs-1.46.4.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">128f5b0f0746b28d1e3ca7e263c57094</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Elfutils (0.185) - <token>8,973 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://sourceware.org/elfutils/"/></para>
        <para>Download: <ulink url="https://sourceware.org/ftp/elfutils/0.185/elfutils-0.185.tar.bz2"/></para>
        <para>MD5 sum: <literal moreinfo="none">2b6e94c2eebc1f2194173e31bca9396e</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry revision="sysv">
      <term>Eudev (3.2.10) - <token>1,916 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://dev.gentoo.org/~blueness/eudev/eudev-3.2.10.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">60b135a189523f333cea5f71a3345c8d</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Expat (2.4.1) - <token>435 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://libexpat.github.io/"/></para>
        <para>Download: <ulink url="https://prdownloads.sourceforge.net/expat/expat-2.4.1.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">a4fb91a9441bcaec576d4c4a56fa3aa6</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Expect (5.45.4) - <token>618 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://core.tcl.tk/expect/"/></para>
        <para>Download: <ulink url="https://prdownloads.sourceforge.net/expect/expect5.45.4.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">00fce8de158422f5ccd2666512329bd2</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>File (5.40) - <token>981 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.darwinsys.com/file/"/></para>
        <para>Download: <ulink url="https://astron.com/pub/file/file-5.40.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">72540ea1cc8c6e1dee35d6100ec66589</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Findutils (4.8.0) - <token>1,940 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/findutils/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/findutils/findutils-4.8.0.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">eeefe2e6380931a77dfa6d9350b43186</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Flex (2.6.4) - <token>1,386 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://github.com/westes/flex"/></para>
        <para>Download: <ulink url="https://github.com/westes/flex/releases/download/v2.6.4/flex-2.6.4.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">2882e3179748cc9f9c23ec593d6adc8d</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Gawk (5.1.0) - <token>3,081 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/gawk/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/gawk/gawk-5.1.0.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">8470c34eeecc41c1aa0c5d89e630df50</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>GCC (11.2.0) - <token>78,996 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://gcc.gnu.org/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/gcc/gcc-11.2.0/gcc-11.2.0.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">31c86f2ced76acac66992eeedce2fce2</literal></para>
        <para>SHA256 sum: <literal moreinfo="none">d08edc536b54c372a1010ff6619dd274c0f1603aa49212ba20f7aa2cda36fa8b</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>GDBM (1.20) - <token>965 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/gdbm/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/gdbm/gdbm-1.20.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">006c19b8b60828fd6916a16f3496bd3c</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Gettext (0.21) - <token>9,487 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/gettext/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/gettext/gettext-0.21.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">40996bbaf7d1356d3c22e33a8b255b31</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Glibc (2.34) - <token>16,896 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/libc/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/glibc/glibc-2.34.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">31998b53fb39cb946e96abc310af1c89</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>GMP (6.2.1) - <token>1,980 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/gmp/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">0b82665c4a92fd2ade7440c13fcaa42b</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Gperf (3.1) - <token>1,188 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/gperf/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/gperf/gperf-3.1.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">9e251c0a618ad0824b51117d5d9db87e</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Grep (3.7) - <token>1,603 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/grep/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/grep/grep-3.7.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">7c9cca97fa18670a21e72638c3e1dabf</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Groff (1.22.4) - <token>4,044 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/groff/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/groff/groff-1.22.4.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">08fb04335e2f5e73f23ea4c3adbf0c5f</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>GRUB (2.06) - <token>6,428 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/grub/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/grub/grub-2.06.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">cf0fd928b1e5479c8108ee52cb114363</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Gzip (1.10) - <token>757 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/gzip/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/gzip/gzip-1.10.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">691b1221694c3394f1c537df4eee39d3</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Iana-Etc (20210611) - <token>579 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.iana.org/protocols"/></para>
        <para>Download: <ulink url="https://github.com/Mic92/iana-etc/releases/download/20210611/iana-etc-20210611.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">f2854be57fe281e3ffc7364984467d2f</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Inetutils (2.1) - <token>1,496 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/inetutils/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/inetutils/inetutils-2.1.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">4e7676d1980e57c7df665e5c5c3c1047</literal></para>
        <para>SHA256 sum: <literal moreinfo="none">01b9a4bc73a47e63f6e8a07b76122d9ad2a2e46ebf14870e9c91d660b5647a22</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Intltool (0.51.0) - <token>159 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://freedesktop.org/wiki/Software/intltool"/></para>
        <para>Download: <ulink url="https://launchpad.net/intltool/trunk/0.51.0/+download/intltool-0.51.0.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">12e517cac2b57a0121cda351570f1e63</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>IPRoute2 (5.13.0) - <token>828 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.kernel.org/pub/linux/utils/net/iproute2/"/></para>
        <para>Download: <ulink url="https://www.kernel.org/pub/linux/utils/net/iproute2/iproute2-5.13.0.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">15fc3786303a173a14e180afe4cd2ecd</literal></para>
      </listitem>
    </varlistentry>

    

    <varlistentry>
      <term>Kbd (2.4.0) - <token>1,095 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://kbd-project.org/"/></para>
        <para>Download: <ulink url="https://www.kernel.org/pub/linux/utils/kbd/kbd-2.4.0.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">3cac5be0096fcf7b32dcbd3c53831380</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Kmod (29) - <token>548 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url=" "/></para>
        <para>Download: <ulink url="https://www.kernel.org/pub/linux/utils/kernel/kmod/kmod-29.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">e81e63acd80697d001c8d85c1acb38a0</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Less (590) - <token>348 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.greenwoodsoftware.com/less/"/></para>
        <para>Download: <ulink url="https://www.greenwoodsoftware.com/less/less-590.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">f029087448357812fba450091a1172ab</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry revision="sysv">
      <term>LFS-Bootscripts (20210608) - <token>33 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url=" "/></para>
        <para>Download: <ulink url="https://www.linuxfromscratch.org/lfs/downloads/11.0/lfs-bootscripts-20210608.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">6efd60044ad31a603a2c31c68919a988</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Libcap (2.53) - <token>153 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://sites.google.com/site/fullycapable/"/></para>
        <para>Download: <ulink url="https://www.kernel.org/pub/linux/libs/security/linux-privs/libcap2/libcap-2.53.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">094994d4554c6689cf98ae4f717b8e19</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Libffi (3.4.2) - <token>1,320 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://sourceware.org/libffi/"/></para>
        <para>Download: <ulink url="https://github.com/libffi/libffi/releases/download/v3.4.2/libffi-3.4.2.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">294b921e6cf9ab0fbaea4b639f8fdbe8</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Libpipeline (1.5.3) - <token>972 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="http://libpipeline.nongnu.org/"/></para>
        <para>Download: <ulink url="https://download.savannah.gnu.org/releases/libpipeline/libpipeline-1.5.3.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">dad443d0911cf9f0f1bd90a334bc9004</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Libtool (2.4.6) - <token>951 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/libtool/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">1bfb9b923f2c1339b4d2ce1807064aa5</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Linux (5.13.12) - <token>116,545 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.kernel.org/"/></para>
        <para>Download: <ulink url="https://www.kernel.org/pub/linux/kernel/v5.x/linux-5.13.12.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">6e1728b2021ca19cc9273f080e6c44c7</literal></para>

        <note>
          <para>The Linux kernel is updated relatively often, many times due to
          discoveries of security vulnerabilities.  The latest available
          <!--&linux-major-version;.&linux-minor-version;.x--> stable kernel 
          version <!--should--> may be
          used, unless the errata page says otherwise.</para>

          <para>For users with limited speed or expensive bandwidth who wish to
          update the Linux kernel, a baseline version of the package and
          patches can be downloaded separately.  This may save some time or
          cost for a subsequent patch level upgrade within a minor release.
          </para>
        </note>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>M4 (1.4.19) - <token>1,617 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/m4/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/m4/m4-1.4.19.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">0d90823e1426f1da2fd872df0311298d</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Make (4.3) - <token>2,263 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/make/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/make/make-4.3.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">fc7a67ea86ace13195b0bce683fd4469</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Man-DB (2.9.4) - <token>1,865 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.nongnu.org/man-db/"/></para>
        <para>Download: <ulink url="https://download.savannah.gnu.org/releases/man-db/man-db-2.9.4.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">6e233a555f7b9ae91ce7cd0faa322bce</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Man-pages (5.13) - <token>1,752 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.kernel.org/doc/man-pages/"/></para>
        <para>Download: <ulink url="https://www.kernel.org/pub/linux/docs/man-pages/man-pages-5.13.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">3ac24e8c6fae26b801cb87ceb63c0a30</literal></para>
      </listitem>
    </varlistentry>

    

    <varlistentry>
      <term>Meson (0.59.1) - <token>1,900 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://mesonbuild.com"/></para>
        <para>Download: <ulink url="https://github.com/mesonbuild/meson/releases/download/0.59.1/meson-0.59.1.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">9c8135ecde820094be2f42f457fb6535</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>MPC (1.2.1) - <token>820 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="http://www.multiprecision.org/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/mpc/mpc-1.2.1.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">9f16c976c25bb0f76b50be749cd7a3a8</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>MPFR (4.1.0) - <token>1,490 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.mpfr.org/"/></para>
        <para>Download: <ulink url="https://www.mpfr.org/mpfr-4.1.0/mpfr-4.1.0.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">bdd3d5efba9c17da8d83a35ec552baef</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Ncurses (6.2) - <token>3,346 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/ncurses/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/ncurses/ncurses-6.2.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">e812da327b1c2214ac1aed440ea3ae8d</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Ninja (1.10.2) - <token>209 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://ninja-build.org/"/></para>
        <para>Download: <ulink url="https://github.com/ninja-build/ninja/archive/v1.10.2/ninja-1.10.2.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">639f75bc2e3b19ab893eaf2c810d4eb4</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>OpenSSL (1.1.1l) - <token>9,604 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.openssl.org/"/></para>
        <para>Download: <ulink url="https://www.openssl.org/source/openssl-1.1.1l.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">ac0d4387f3ba0ad741b0580dd45f6ff3</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Patch (2.7.6) - <token>766 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://savannah.gnu.org/projects/patch/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/patch/patch-2.7.6.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">78ad9937e4caadcba1526ef1853730d5</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Perl (5.34.0) - <token>12,580 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.perl.org/"/></para>
        <para>Download: <ulink url="https://www.cpan.org/src/5.0/perl-5.34.0.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">df7ecb0653440b26dc951ad9dbfab517</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Pkg-config (0.29.2) - <token>1,970 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.freedesktop.org/wiki/Software/pkg-config"/></para>
        <para>Download: <ulink url="https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">f6e931e319531b736fadc017f470e68a</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Procps (3.3.17) - <token>985 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://sourceforge.net/projects/procps-ng"/></para>
        <para>Download: <ulink url="https://sourceforge.net/projects/procps-ng/files/Production/procps-ng-3.3.17.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">d60613e88c2f442ebd462b5a75313d56</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Psmisc (23.4) - <token>362 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://gitlab.com/psmisc/psmisc"/></para>
        <para>Download: <ulink url="https://sourceforge.net/projects/psmisc/files/psmisc/psmisc-23.4.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">8114cd4489b95308efe2509c3a406bbf</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Python (3.9.6) - <token>18,608 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.python.org/"/></para>
        <para>Download: <ulink url="https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">ecc29a7688f86e550d29dba2ee66cf80</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Python Documentation (3.9.6) - <token>6,692 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://www.python.org/ftp/python/doc/3.9.6/python-3.9.6-docs-html.tar.bz2"/></para>
        <para>MD5 sum: <literal moreinfo="none">0dae29e4c38af1b6b1a86b35c9e48923</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Readline (8.1) - <token>2,924 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://tiswww.case.edu/php/chet/readline/rltop.html"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/readline/readline-8.1.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">e9557dd5b1409f5d7b37ef717c64518e</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Sed (4.8) - <token>1,317 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/sed/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/sed/sed-4.8.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">6d906edfdb3202304059233f51f9a71d</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Shadow (4.9) - <token>1,592 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://shadow-maint.github.io/shadow/"/></para>
        <para>Download: <ulink url="https://github.com/shadow-maint/shadow/releases/download/v4.9/shadow-4.9.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">126924090caf72f3de7e9261fd4e10ac</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry revision="sysv">
      <term>Sysklogd (1.5.1) - <token>88 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.infodrom.org/projects/sysklogd/"/></para>
        <para>Download: <ulink url="https://www.infodrom.org/projects/sysklogd/download/sysklogd-1.5.1.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">c70599ab0d037fde724f7210c2c8d7f8</literal></para>
      </listitem>
    </varlistentry>

    

    


    <varlistentry revision="sysv">
      <term>Sysvinit (2.99) - <token>124 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://savannah.nongnu.org/projects/sysvinit"/></para>
        <para>Download: <ulink url="https://download.savannah.gnu.org/releases/sysvinit/sysvinit-2.99.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">6abc0ea61b8dd4a41b4e931a43b1bb90</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Tar (1.34) - <token>2,174 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/tar/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/tar/tar-1.34.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">9a08d29a9ac4727130b5708347c0f5cf</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Tcl (8.6.11) - <token>10,020 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="http://tcl.sourceforge.net/"/></para>
        <para>Download: <ulink url="https://downloads.sourceforge.net/tcl/tcl8.6.11-src.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">8a4c004f48984a03a7747e9ba06e4da4</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Tcl Documentation (8.6.11) - <token>1,172 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://downloads.sourceforge.net/tcl/tcl8.6.11-html.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">e358a9140c3a171e42f18c8a7f6a36ea</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Texinfo (6.8) - <token>4,848 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.gnu.org/software/texinfo/"/></para>
        <para>Download: <ulink url="https://ftp.gnu.org/gnu/texinfo/texinfo-6.8.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">a91b404e30561a5df803e6eb3a53be71</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Time Zone Data (2021a) - <token>403 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.iana.org/time-zones"/></para>
        <para>Download: <ulink url="https://www.iana.org/time-zones/repository/releases/tzdata2021a.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">20eae7d1da671c6eac56339c8df85bbd</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry revision="sysv">
      <term>Udev-lfs Tarball (udev-lfs-20171102) - <token>11 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://anduin.linuxfromscratch.org/LFS/udev-lfs-20171102.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">27cd82f9a61422e186b9d6759ddf1634</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Util-linux (2.37.2) - <token>5,490 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://git.kernel.org/pub/scm/utils/util-linux/util-linux.git/"/></para>
        <para>Download: <ulink url="https://www.kernel.org/pub/linux/utils/util-linux/v2.37/util-linux-2.37.2.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">d659bf7cd417d93dc609872f6334b019</literal></para>
      </listitem>
    </varlistentry>
<!--
    <varlistentry>
      <term>Util-linux Man Pages - <token>&util-linux-man-size;</token>:</term>
      <listitem>
        <para>Download: <ulink url="&util-linux-man-url;"/></para>
        <para>MD5 sum: <literal>&util-linux-man-md5;</literal></para>

        <note>
          <para>The Linux From Scratch team generates its own tarball of the
          man pages using the util-linux source. This is done in order to avoid
          unnecessary dependencies.</para>
        </note>
      </listitem>
    </varlistentry>
-->
    <varlistentry>
      <term>Vim (8.2.3337) - <token>15,311 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.vim.org"/></para>
        <para>Download: <ulink url="https://anduin.linuxfromscratch.org/LFS/vim-8.2.3337.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">e0325a4988b1b99b9c2e46fa853c1980</literal></para>
        <note>
          <para>
            The version of vim changes daily. To get the latest version, go to
            <ulink url="https://github.com/vim/vim/releases">
            https://github.com/vim/vim/releases</ulink>.
          </para>
        </note>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>XML::Parser (2.46) - <token>249 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://github.com/chorny/XML-Parser"/></para>
        <para>Download: <ulink url="https://cpan.metacpan.org/authors/id/T/TO/TODDR/XML-Parser-2.46.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">80bb18a8e6240fcf7ec2f7b57601c170</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Xz Utils (5.2.5) - <token>1,122 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://tukaani.org/xz"/></para>
        <para>Download: <ulink url="https://tukaani.org/xz/xz-5.2.5.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">aa1621ec7013a19abab52a8aff04fe5b</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Zlib (1.2.11) - <token>457 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://www.zlib.net/"/></para>
        <para>Download: <ulink url="https://zlib.net/zlib-1.2.11.tar.xz"/></para>
        <para>MD5 sum: <literal moreinfo="none">85adef240c5f370b308da8c938951a68</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Zstd (1.5.0) - <token>1,808 KB</token>:</term>
      <listitem>
        <para>Home page: <ulink url="https://facebook.github.io/zstd/"/></para>
        <para>Download: <ulink url="https://github.com/facebook/zstd/releases/download/v1.5.0/zstd-1.5.0.tar.gz"/></para>
        <para>MD5 sum: <literal moreinfo="none">a6eb7fb1f2c21fa80030a47993853e92</literal></para>
      </listitem>
    </varlistentry>

  </variablelist>

  <para>Total size of these packages: about <returnvalue/></para>

</sect1>
  <sect1 id="ch-materials-patches">
  <?dbhtml filename="patches.html"?>

  <title>Needed Patches</title>

  <para>In addition to the packages, several patches are also required.
  These patches correct any mistakes in the packages that should be
  fixed by the maintainer.  The patches also make small modifications to
  make the packages easier to work with. The following patches will be
  needed to build an LFS system:</para>

  <variablelist role="materials">
<!--
    <varlistentry>
      <term>Autoconf Consolidated Fixes Patch - <token>&autoconf-fixes-patch-size;</token>:</term>
      <listitem>
        <para>Download: <ulink url="&patches-root;&autoconf-fixes-patch;"/></para>
        <para>MD5 sum: <literal>&autoconf-fixes-patch-md5;</literal></para>
      </listitem>
    </varlistentry>
-->
<!--
    <varlistentry>
      <term>Bash Upstream Fixes Patch - <token>&bash-fixes-patch-size;</token>:</term>
      <listitem>
        <para>Download: <ulink url="&patches-root;&bash-fixes-patch;"/></para>
        <para>MD5 sum: <literal>&bash-fixes-patch-md5;</literal></para>
      </listitem>
    </varlistentry>
-->

    <varlistentry>
      <term>Binutils Upstream Fix Patch - <token>8.0 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://www.linuxfromscratch.org/patches/lfs/11.0/binutils-2.37-upstream_fix-1.patch"/></para>
        <para>MD5 sum: <literal moreinfo="none">3518fa864fe8d7ef65be4960f380b03b</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Bzip2 Documentation Patch - <token>1.6 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://www.linuxfromscratch.org/patches/lfs/11.0/bzip2-1.0.8-install_docs-1.patch"/></para>
        <para>MD5 sum: <literal moreinfo="none">6a5ac7e89b791aae556de0f745916f7f</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Coreutils Internationalization Fixes Patch - <token>166 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://www.linuxfromscratch.org/patches/lfs/11.0/coreutils-8.32-i18n-1.patch"/></para>
        <para>MD5 sum: <literal moreinfo="none">cd8ebed2a67fff2e231026df91af6776</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Glibc FHS Patch - <token>2.8 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://www.linuxfromscratch.org/patches/lfs/11.0/glibc-2.34-fhs-1.patch"/></para>
        <para>MD5 sum: <literal moreinfo="none">9a5997c3452909b1769918c759eff8a2</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Kbd Backspace/Delete Fix Patch - <token>12 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://www.linuxfromscratch.org/patches/lfs/11.0/kbd-2.4.0-backspace-1.patch"/></para>
        <para>MD5 sum: <literal moreinfo="none">f75cca16a38da6caa7d52151f7136895</literal></para>
      </listitem>
    </varlistentry>

 <!--
    <varlistentry>
      <term>Meson Upstream Fix Patch - <token>&meson-fix-patch-size;</token>:</term>
      <listitem>
        <para>Download: <ulink url="&patches-root;&meson-fix-patch;"/></para>
        <para>MD5 sum: <literal>&meson-fix-patch-md5;</literal></para>
      </listitem>
    </varlistentry>
-->
<!--
    <varlistentry>
      <term>Libpipeline Checks Patch - <token>&libpipeline-checks-patch-size;</token>:</term>
      <listitem>
        <para>Download: <ulink url="&patches-root;&libpipeline-checks-patch;"/></para>
        <para>MD5 sum: <literal>&libpipeline-checks-patch-md5;</literal></para>
      </listitem>
    </varlistentry>
-->

    <varlistentry>
      <term>Perl Upstream Fix Patch - <token>1.6 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://www.linuxfromscratch.org/patches/lfs/11.0/perl-5.34.0-upstream_fixes-1.patch"/></para>
        <para>MD5 sum: <literal moreinfo="none">fb42558b59ed95ee00eb9f1c1c9b8056</literal></para>
      </listitem>
    </varlistentry>

    <varlistentry revision="sysv">
      <term>Sysvinit Consolidated Patch - <token>2.4 KB</token>:</term>
      <listitem>
        <para>Download: <ulink url="https://www.linuxfromscratch.org/patches/lfs/11.0/sysvinit-2.99-consolidated-1.patch"/></para>
        <para>MD5 sum: <literal moreinfo="none">4900322141d493e74020c9cf437b2cdc</literal></para>
      </listitem>
    </varlistentry>

    

  </variablelist>

  <para>Total size of these patches: about <returnvalue/></para>

  <para>In addition to the above required patches, there exist a number of
  optional patches created by the LFS community. These optional patches
  solve minor problems or enable functionality that is not enabled by
  default. Feel free to peruse the patches database located at
  <ulink url="https://www.linuxfromscratch.org/patches/downloads/"/> and acquire any additional
  patches to suit your system needs.</para>

</sect1>

</chapter>
<chapter id="chapter-final-preps" xreflabel="Chapter&#xA0;4" xml:base="chapter04/chapter04.xml">
  <?dbhtml dir="chapter04"?>
  <?dbhtml filename="chapter04.html"?>

  <title>Final Preparations</title>

  <sect1 id="ch-preps-introduction">
  <?dbhtml filename="introduction.html"?>

  <title>Introduction</title>

  <para>In this chapter, we will perform a few additional tasks to prepare
  for building the temporary system. We will create a set of directories in
  <filename class="directory" moreinfo="none">$LFS</filename> for the installation of the
  temporary tools, add an unprivileged user to reduce risk,
  and create an appropriate build environment for that user. We will also
  explain the unit of time we use to measure how long LFS packages take to
  build, or <quote>SBUs</quote>, and give some information about package
  test suites.</para>

</sect1>
  <!--<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="aboutlfs.xml"/>-->
  <sect1 id="ch-tools-creatingminlayout">
  <?dbhtml filename="creatingminlayout.html"?>

  <title>Creating a limited directory layout in LFS filesystem</title>

  <para>The first task performed in the LFS partition is to create a limited
  directory hierarchy so that programs compiled in <xref linkend="chapter-temporary-tools"/> (as well as glibc and libstdc++ in <xref linkend="chapter-cross-tools"/>) may be installed in their final
  location. This is needed so that those temporary programs be overwritten
  when rebuilding them in <xref linkend="chapter-building-system"/>.</para>

  <para>Create the required directory layout by running the following as
  <systemitem class="username" moreinfo="none">root</systemitem>:</para>

<screen format="linespecific"><userinput moreinfo="none">mkdir -pv $LFS/{etc,var} $LFS/usr/{bin,lib,sbin}

for i in bin lib sbin; do
  ln -sv usr/$i $LFS/$i
done

case $(uname -m) in
  x86_64) mkdir -pv $LFS/lib64 ;;
esac</userinput></screen>

    <note>
      <para>
        The above command is correct.  The <command moreinfo="none">ln</command> command has
        a few syntactic versions, so be sure to check
		<command moreinfo="none">info coreutils ln</command> and <filename moreinfo="none">ln(1)</filename>
		before reporting what you may think is an error.
	  </para>
    </note>

  <para>Programs in <xref linkend="chapter-temporary-tools"/> will be compiled
  with a cross-compiler (more details in section <xref linkend="ch-tools-toolchaintechnotes"/>). In order to separate this
  cross-compiler from the other programs, it will be installed in a special
  directory. Create this directory with:</para>

<screen format="linespecific"><userinput moreinfo="none">mkdir -pv $LFS/tools</userinput></screen>

</sect1>
  <sect1 id="ch-preps-addinguser">
  <?dbhtml filename="addinguser.html"?>

  <title>Adding the LFS User</title>

  <para>When logged in as user <systemitem class="username" moreinfo="none">root</systemitem>,
  making a single mistake can damage or destroy a system. Therefore, 
  the packages in the next two chapters are built as an unprivileged user.
  You could use your own user name, but to make it easier to set up a clean
  working environment, create a new user called <systemitem class="username" moreinfo="none">lfs</systemitem> as a member of a new group (also named
  <systemitem class="groupname" moreinfo="none">lfs</systemitem>) and use this user during
  the installation process. As <systemitem class="username" moreinfo="none">root</systemitem>,
  issue the following commands to add the new user:</para>

<screen format="linespecific"><userinput moreinfo="none">groupadd lfs
useradd -s /bin/bash -g lfs -m -k /dev/null lfs</userinput></screen>

  <variablelist>
    <title>The meaning of the command line options:</title>

    <varlistentry>
      <term><parameter moreinfo="none">-s /bin/bash</parameter></term>
      <listitem>
        <para>This makes <command moreinfo="none">bash</command> the default shell for user
        <systemitem class="username" moreinfo="none">lfs</systemitem>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">-g lfs</parameter></term>
      <listitem>
        <para>This option adds user <systemitem class="username" moreinfo="none">lfs</systemitem>
        to group <systemitem class="groupname" moreinfo="none">lfs</systemitem>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">-m</parameter></term>
      <listitem>
        <para>This creates a home directory for <systemitem class="username" moreinfo="none">lfs</systemitem>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">-k /dev/null</parameter></term>
      <listitem>
        <para>This parameter prevents possible copying of files from a skeleton
        directory (default is <filename class="directory" moreinfo="none">/etc/skel</filename>)
        by changing the input location to the special null device.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">lfs</parameter></term>
      <listitem>
        <para>This is the actual name for the created user.</para>
      </listitem>
    </varlistentry>

  </variablelist>

  <para>To log in as <systemitem class="username" moreinfo="none">lfs</systemitem> (as opposed
  to switching to user <systemitem class="username" moreinfo="none">lfs</systemitem> when logged
  in as <systemitem class="username" moreinfo="none">root</systemitem>, which does not require
  the <systemitem class="username" moreinfo="none">lfs</systemitem> user to have a password),
  give <systemitem class="username" moreinfo="none">lfs</systemitem> a password:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">passwd lfs</userinput></screen>

  <para>Grant <systemitem class="username" moreinfo="none">lfs</systemitem> full access to
  all directories under <filename class="directory" moreinfo="none">$LFS</filename> by making
  <systemitem class="username" moreinfo="none">lfs</systemitem> the directory owner:</para>

<screen format="linespecific"><userinput moreinfo="none">chown -v lfs $LFS/{usr{,/*},lib,var,etc,bin,sbin,tools}
case $(uname -m) in
  x86_64) chown -v lfs $LFS/lib64 ;;
esac</userinput></screen>

  <para>If a separate working directory was created as suggested, give
  user <systemitem class="username" moreinfo="none">lfs</systemitem> ownership of this
  directory:</para>

<screen format="linespecific"><userinput moreinfo="none">chown -v lfs $LFS/sources</userinput></screen>

  <note><para>In some host systems, the following command does not complete
  properly and suspends the login to the lfs user to the background.  If the
  prompt "lfs:~$" does not appear immediately, entering the
  <command moreinfo="none">fg</command> command will fix the issue.</para></note>

  <para>Next, login as user <systemitem class="username" moreinfo="none">lfs</systemitem>.
  This can be done via a virtual console, through a display manager, or with
  the following substitute/switch user command:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">su - lfs</userinput></screen>

  <para>The <quote><parameter moreinfo="none">-</parameter></quote> instructs
  <command moreinfo="none">su</command> to start a login shell as opposed to a non-login shell.
  The difference between these two types of shells can be found in detail in
  <filename moreinfo="none">bash(1)</filename> and <command moreinfo="none">info bash</command>.</para>

</sect1>
  <sect1 id="ch-preps-settingenviron">
  <?dbhtml filename="settingenvironment.html"?>

  <title>Setting Up the Environment</title>

  <para>Set up a good working environment by creating two new startup files
  for the <command moreinfo="none">bash</command> shell. While logged in as user
  <systemitem class="username" moreinfo="none">lfs</systemitem>, issue the following command
  to create a new <filename moreinfo="none">.bash_profile</filename>:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; ~/.bash_profile &lt;&lt; "EOF"
<literal moreinfo="none">exec env -i HOME=$HOME TERM=$TERM PS1='\u:\w\$ ' /bin/bash</literal>
EOF</userinput></screen>

  <para>When logged on as user <systemitem class="username" moreinfo="none">lfs</systemitem>,
  the initial shell is usually a <emphasis>login</emphasis> shell which reads
  the <filename moreinfo="none">/etc/profile</filename> of the host (probably containing some
  settings and environment variables) and then <filename moreinfo="none">.bash_profile</filename>.
  The <command moreinfo="none">exec env -i.../bin/bash</command> command in the
  <filename moreinfo="none">.bash_profile</filename> file replaces the running shell with a new
  one with a completely empty environment, except for the <envar>HOME</envar>,
  <envar>TERM</envar>, and <envar>PS1</envar> variables. This ensures that no
  unwanted and potentially hazardous environment variables from the host system
  leak into the build environment. The technique used here achieves the goal of
  ensuring a clean environment.</para>

  <para>The new instance of the shell is a <emphasis>non-login</emphasis>
  shell, which does not read, and execute, the contents of <filename moreinfo="none">/etc/profile</filename> or
  <filename moreinfo="none">.bash_profile</filename> files, but rather reads, and executes, the
  <filename moreinfo="none">.bashrc</filename> file instead. Create the
  <filename moreinfo="none">.bashrc</filename> file now:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; ~/.bashrc &lt;&lt; "EOF"
<literal moreinfo="none">set +h
umask 022
LFS=/mnt/lfs
LC_ALL=POSIX
LFS_TGT=$(uname -m)-lfs-linux-gnu
PATH=/usr/bin
if [ ! -L /bin ]; then PATH=/bin:$PATH; fi
PATH=$LFS/tools/bin:$PATH
CONFIG_SITE=$LFS/usr/share/config.site
export LFS LC_ALL LFS_TGT PATH CONFIG_SITE</literal>
EOF</userinput></screen>

  <variablelist>
    <title>The meaning of the settings in <filename moreinfo="none">.bashrc</filename></title>

    <varlistentry>
      <term><parameter moreinfo="none">set +h</parameter></term>
      <listitem>
  <para>The <command moreinfo="none">set +h</command> command turns off
  <command moreinfo="none">bash</command>'s hash function. Hashing is ordinarily a useful
  featureâ<command moreinfo="none">bash</command> uses a hash table to remember the
  full path of executable files to avoid searching the <envar>PATH</envar>
  time and again to find the same executable. However, the new tools should
  be used as soon as they are installed. By switching off the hash function,
  the shell will always search the <envar>PATH</envar> when a program is to
  be run. As such, the shell will find the newly compiled tools in
  <filename class="directory" moreinfo="none">$LFS/tools</filename> as soon as they are
  available without remembering a previous version of the same program in a
  different location.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">umask 022</parameter></term>
      <listitem>
  <para>Setting the user file-creation mask (umask) to 022 ensures that newly
  created files and directories are only writable by their owner, but are
  readable and executable by anyone (assuming default modes are used by the
  <function moreinfo="none">open(2)</function> system call, new files will end up with permission
  mode 644 and directories with mode 755).</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">LFS=/mnt/lfs</parameter></term>
      <listitem>
  <para>The <envar>LFS</envar> variable should be set to the chosen mount
  point.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">LC_ALL=POSIX</parameter></term>
      <listitem>
  <para>The <envar>LC_ALL</envar> variable controls the localization of certain
  programs, making their messages follow the conventions of a specified country.
  Setting <envar>LC_ALL</envar> to <quote>POSIX</quote> or <quote>C</quote>
  (the two are equivalent) ensures that everything will work as expected in
  the chroot environment.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">LFS_TGT=(uname -m)-lfs-linux-gnu</parameter></term>
      <listitem>
  <para>The <envar>LFS_TGT</envar> variable sets a non-default, but compatible machine
  description for use when building our cross compiler and linker and when cross
  compiling our temporary toolchain. More information is contained in
  <xref linkend="ch-tools-toolchaintechnotes" role=""/>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">PATH=/usr/bin</parameter></term>
      <listitem>
  <para>Many modern linux distributions have merged <filename class="directory" moreinfo="none">/bin</filename> and <filename class="directory" moreinfo="none">/usr/bin</filename>. When this is the case, the standard
  <envar>PATH</envar> variable needs just to be set to <filename class="directory" moreinfo="none">/usr/bin/</filename> for the <xref linkend="chapter-temporary-tools"/> environment. When this is not the
  case, the following line adds <filename class="directory" moreinfo="none">/bin</filename>
  to the path.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">if [ ! -L /bin ]; then PATH=/bin:$PATH; fi</parameter></term>
      <listitem>
  <para>If <filename class="directory" moreinfo="none">/bin</filename> is not a symbolic
  link, then it has to be added to the <envar>PATH</envar> variable.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">PATH=$LFS/tools/bin:$PATH</parameter></term>
      <listitem>
  <para>By putting <filename class="directory" moreinfo="none">$LFS/tools/bin</filename> ahead of the
  standard <envar>PATH</envar>, the cross-compiler installed at the beginning
  of <xref linkend="chapter-cross-tools"/> is picked up by the shell
  immediately after its installation. This, combined with turning off hashing,
  limits the risk that the compiler from the host be used instead of the
  cross-compiler.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">CONFIG_SITE=$LFS/usr/share/config.site</parameter></term>
      <listitem>
  <para>In <xref linkend="chapter-cross-tools"/> and
  <xref linkend="chapter-temporary-tools"/>, if this variable is not set,
  <command moreinfo="none">configure</command> scripts
  may attempt to load configuration items specific to some distributions from
  <filename moreinfo="none">/usr/share/config.site</filename> on the host system. Override
  it to prevent potential contamination from the host.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">export ...</parameter></term>
      <listitem>
        <para>While the above commands have set some variables, in order
        to make them visible within any sub-shells, we export them.</para>
      </listitem>
    </varlistentry>

  </variablelist>

  <important>

     <para>Several commercial distributions add a non-documented instantiation
     of <filename moreinfo="none">/etc/bash.bashrc</filename> to the initialization of
     <command moreinfo="none">bash</command>. This file has the potential to modify the
     <systemitem class="username" moreinfo="none">lfs</systemitem>
     user's environment in ways that can affect the building of critical LFS
     packages. To make sure the <systemitem class="username" moreinfo="none">lfs</systemitem>
     user's environment is clean, check for the
     presence of <filename moreinfo="none">/etc/bash.bashrc</filename> and, if present, move it
     out of the way.  As the <systemitem class="username" moreinfo="none">root</systemitem>
     user, run:</para>

     <screen role="nodump" format="linespecific"><userinput moreinfo="none">[ ! -e /etc/bash.bashrc ] || mv -v /etc/bash.bashrc /etc/bash.bashrc.NOUSE</userinput></screen> 

     <para>After use of the <systemitem class="username" moreinfo="none">lfs</systemitem>
     user is finished at the beginning of <xref linkend="chapter-chroot-temporary-tools"/>, you can restore
	 <filename moreinfo="none">/etc/bash.bashrc</filename> (if desired).</para>

     <para>Note that the LFS Bash package we will build in
     <xref linkend="ch-system-bash"/> is not configured to load or execute
     <filename moreinfo="none">/etc/bash.bashrc</filename>, so this file is useless on a
     completed LFS system.</para>
  </important>

  <para>Finally, to have the environment fully prepared for building the
  temporary tools, source the just-created user profile:</para>

<screen format="linespecific"><userinput moreinfo="none">source ~/.bash_profile</userinput></screen>

</sect1>
  <sect1 id="ch-preps-aboutsbus">
  <?dbhtml filename="aboutsbus.html"?>

  <title>About SBUs</title>

  <para>Many people would like to know beforehand approximately how long
  it takes to compile and install each package. Because Linux From
  Scratch can be built on many different systems, it is impossible to
  provide accurate time estimates. The biggest package (Glibc) will
  take approximately 20 minutes on the fastest systems, but could take
  up to three days on slower systems! Instead of providing actual times,
  the Standard Build Unit (SBU) measure will be
  used instead.</para>

  <para>The SBU measure works as follows. The first package to be compiled
  from this book is binutils in <xref linkend="chapter-cross-tools"/>. The
  time it takes to compile this package is what will be referred to as the
  Standard Build Unit or SBU. All other compile times will be expressed relative
  to this time.</para>

  <para>For example, consider a package whose compilation time is 4.5
  SBUs. This means that if a system took 10 minutes to compile and
  install the first pass of binutils, it will take
  <emphasis>approximately</emphasis> 45 minutes to build this example package.
  Fortunately, most build times are shorter than the one for binutils.</para>

  <para>In general, SBUs are not entirely accurate because they depend on many
  factors, including the host system's version of GCC.  They are provided here
  to give an estimate of how long it might take to install a package, but the
  numbers can vary by as much as dozens of minutes in some cases.</para>

  <note>
    <para>For many modern systems with multiple processors (or cores) the
    compilation time for a package can be reduced by performing a "parallel
    make" by either setting an environment variable or telling the
    <command moreinfo="none">make</command> program how many processors are available.  For
    instance, an Intel i5-6500 CPU can support four simultaneous processes with:</para>

    <screen role="nodump" format="linespecific"><userinput moreinfo="none">export MAKEFLAGS='-j4'</userinput></screen>

    <para>or just building with:</para>

    <screen role="nodump" format="linespecific"><userinput moreinfo="none">make -j4</userinput></screen>

    <para>When multiple processors are used in this way, the SBU units in the
    book will vary even more than they normally would.  In some cases, the make
    step will simply fail.  Analyzing the output of the build process will also
    be more difficult because the lines of different processes will be
    interleaved.  If you run into a problem with a build step, revert back to a
    single processor build to properly analyze the error messages.</para>
  </note>

</sect1>
  <sect1 id="ch-preps-abouttestsuites">
  <?dbhtml filename="abouttestsuites.html"?>

  <title>About the Test Suites</title>

  <para>Most packages provide a test suite. Running the test suite for a
  newly built package is a good idea because it can provide a <quote>sanity
  check</quote> indicating that everything compiled correctly. A test suite
  that passes its set of checks usually proves that the package is
  functioning as the developer intended. It does not, however, guarantee
  that the package is totally bug free.</para>

  <para>Some test suites are more important than others. For example,
  the test suites for the core toolchain packagesâGCC, binutils, and
  glibcâare of the utmost importance due to their central role in a
  properly functioning system. The test suites for GCC and glibc can
  take a very long time to complete, especially on slower hardware, but
  are strongly recommended.</para>

  <note>
    <para>Running the test suites in <xref linkend="chapter-cross-tools"/>
    and <xref linkend="chapter-temporary-tools"/>
    is impossible, since the programs are compiled with a cross-compiler,
    so are not supposed to be able to run on the build host.</para>
  </note>

  <para>A common issue with running the test suites for binutils and GCC
  is running out of pseudo terminals (PTYs). This can result in a high
  number of failing tests. This may happen for several reasons, but the
  most likely cause is that the host system does not have the
  <systemitem class="filesystem" moreinfo="none">devpts</systemitem> file system set up
  correctly. This issue is discussed in greater detail at
  <ulink url="https://www.linuxfromscratch.org/lfs/faq.html#no-ptys"/>.</para>

  <para>Sometimes package test suites will fail, but for reasons which the
  developers are aware of and have deemed non-critical. Consult the logs located
  at <ulink url="https://www.linuxfromscratch.org/lfs/build-logs/11.0/"/> to verify whether or not these failures are
  expected. This site is valid for all tests throughout this book.</para>

</sect1>

</chapter>
</part>

<part id="part3">
<title>Building the LFS Cross Toolchain and Temporary Tools</title>
<?dbhtml filename="part3.html"?>
<preface id="partintro-cross-temp" xml:base="part3intro/part3intro.xml">
  <?dbhtml dir="partintro"?>
  <?dbhtml filename="partintro.html"?>

  <title>Important Preliminary Material</title>

  <sect1 id="ch-part3intro-intro">
  <?dbhtml filename="introduction.html"?>

  <title>Introduction</title>

  <para>This part is divided into three stages: first building a cross
  compiler and its associated libraries; second, use this cross toolchain
  to build several utilities in a way that isolates them from the host
  distribution; third, enter the chroot environment, which further improves
  host isolation, and build the remaining tools needed to build the final
  system.</para>

  <important><para>With this part begins the real work of building a new
  system. It requires much care in ensuring that the instructions are
  followed exactly as the book shows them. You should try to understand
  what they do, and whatever your eagerness to finish your build, you should
  refrain from blindly type them as shown, but rather read documentation when
  there is something you do not understand. Also, keep track of your typing
  and of the output of commands, by sending them to a file, using the
  <command moreinfo="none">tee</command> utility. This allows for better diagnosing
  if something gets wrong.</para></important>

  <para>The next section gives a technical introduction to the build process,
  while the following one contains <emphasis role="strong">very
  important</emphasis> general instructions.</para>

</sect1>
  <sect1 id="ch-tools-toolchaintechnotes" xreflabel="Toolchain Technical Notes">
  <?dbhtml filename="toolchaintechnotes.html"?>

  <title>Toolchain Technical Notes</title>

  <para>This section explains some of the rationale and technical details
  behind the overall build method. It is not essential to immediately
  understand everything in this section. Most of this information will be
  clearer after performing an actual build. This section can be referred
  to at any time during the process.</para>

  <para>The overall goal of <xref linkend="chapter-cross-tools"/> and <xref linkend="chapter-temporary-tools"/> is to produce a temporary area that
  contains a known-good set of tools that can be isolated from the host system.
  By using <command moreinfo="none">chroot</command>, the commands in the remaining chapters
  will be contained within that environment, ensuring a clean, trouble-free
  build of the target LFS system. The build process has been designed to
  minimize the risks for new readers and to provide the most educational value
  at the same time.</para>

  <para>The build process is based on the process of
  <emphasis>cross-compilation</emphasis>. Cross-compilation is normally used
  for building a compiler and its toolchain for a machine different from
  the one that is used for the build. This is not strictly needed for LFS,
  since the machine where the new system will run is the same as the one
  used for the build. But cross-compilation has the great advantage that
  anything that is cross-compiled cannot depend on the host environment.</para>

  <sect2 id="cross-compile" xreflabel="About Cross-Compilation">

    <title>About Cross-Compilation</title>

    <para>Cross-compilation involves some concepts that deserve a section on
    their own. Although this section may be omitted in a first reading, it
    is strongly suggested to come back to it later in order to get a full
    grasp of the build process.</para>

    <para>Let us first define some terms used in this context:</para>

    <variablelist>
      <varlistentry><term>build</term><listitem>
        <para>is the machine where we build programs. Note that this machine
        is referred to as the <quote>host</quote> in other
        sections.</para></listitem>
      </varlistentry>

      <varlistentry><term>host</term><listitem>
        <para>is the machine/system where the built programs will run. Note
        that this use of <quote>host</quote> is not the same as in other
        sections.</para></listitem>
      </varlistentry>

      <varlistentry><term>target</term><listitem>
        <para>is only used for compilers. It is the machine the compiler
        produces code for. It may be different from both build and
        host.</para></listitem>
      </varlistentry>

    </variablelist>

    <para>As an example, let us imagine the following scenario (sometimes
    referred to as <quote>Canadian Cross</quote>): we may have a
    compiler on a slow machine only, let's call the machine A, and the compiler
    ccA. We may have also a fast machine (B), but with no compiler, and we may
    want to produce code for another slow machine (C). To build a
    compiler for machine C, we would have three stages:</para>

    <informaltable align="center">
      <tgroup cols="5">
        <colspec colnum="1" align="center"/>
        <colspec colnum="2" align="center"/>
        <colspec colnum="3" align="center"/>
        <colspec colnum="4" align="center"/>
        <colspec colnum="5" align="left"/>
        <thead>
          <row><entry>Stage</entry><entry>Build</entry><entry>Host</entry>
               <entry>Target</entry><entry>Action</entry></row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry><entry>A</entry><entry>A</entry><entry>B</entry>
            <entry>build cross-compiler cc1 using ccA on machine A</entry>
          </row>
          <row>
            <entry>2</entry><entry>A</entry><entry>B</entry><entry>C</entry>
            <entry>build cross-compiler cc2 using cc1 on machine A</entry>
          </row>
          <row>
            <entry>3</entry><entry>B</entry><entry>C</entry><entry>C</entry>
            <entry>build compiler ccC using cc2 on machine B</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>Then, all the other programs needed by machine C can be compiled
    using cc2 on the fast machine B. Note that unless B can run programs
    produced for C, there is no way to test the built programs until machine
    C itself is running. For example, for testing ccC, we may want to add a
    fourth stage:</para>

    <informaltable align="center">
      <tgroup cols="5">
        <colspec colnum="1" align="center"/>
        <colspec colnum="2" align="center"/>
        <colspec colnum="3" align="center"/>
        <colspec colnum="4" align="center"/>
        <colspec colnum="5" align="left"/>
        <thead>
          <row><entry>Stage</entry><entry>Build</entry><entry>Host</entry>
               <entry>Target</entry><entry>Action</entry></row>
        </thead>
        <tbody>
          <row>
            <entry>4</entry><entry>C</entry><entry>C</entry><entry>C</entry>
            <entry>rebuild  and test ccC using itself on machine C</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>In the example above, only cc1 and cc2 are cross-compilers, that is,
    they produce code for a machine different from the one they are run on.
    The other compilers ccA and ccC produce code for the machine they are run
    on. Such compilers are called <emphasis>native</emphasis> compilers.</para>

  </sect2>

  <sect2 id="lfs-cross">
    <title>Implementation of Cross-Compilation for LFS</title>

    <note>
      <para>Almost all the build systems use names of the form
      cpu-vendor-kernel-os referred to as the machine triplet. An astute
      reader may wonder why a <quote>triplet</quote> refers to a four component
      name. The reason is history: initially, three component names were enough
      to designate unambiguously a machine, but with new machines and systems
      appearing, that proved insufficient. The word <quote>triplet</quote>
      remained. A simple way to determine your machine triplet is to run
      the <command moreinfo="none">config.guess</command>
      script that comes with the source for many packages. Unpack the binutils
      sources and run the script: <userinput moreinfo="none">./config.guess</userinput> and note
      the output. For example, for a 32-bit Intel processor the
      output will be <emphasis>i686-pc-linux-gnu</emphasis>. On a 64-bit
      system it will be <emphasis>x86_64-pc-linux-gnu</emphasis>.</para>

      <para>Also be aware of the name of the platform's dynamic linker, often
      referred to as the dynamic loader (not to be confused with the standard
      linker <command moreinfo="none">ld</command> that is part of binutils). The dynamic linker
      provided by Glibc finds and loads the shared libraries needed by a
      program, prepares the program to run, and then runs it. The name of the
      dynamic linker for a 32-bit Intel machine will be <filename class="libraryfile" moreinfo="none">ld-linux.so.2</filename> (<filename class="libraryfile" moreinfo="none">ld-linux-x86-64.so.2</filename> for 64-bit systems). A
      sure-fire way to determine the name of the dynamic linker is to inspect a
      random binary from the host system by running: <userinput moreinfo="none">readelf -l
      &lt;name of binary&gt; | grep interpreter</userinput> and noting the
      output. The authoritative reference covering all platforms is in the
      <filename moreinfo="none">shlib-versions</filename> file in the root of the Glibc source
      tree.</para>
    </note>

    <para>In order to fake a cross compilation, the name of the host triplet
    is slightly adjusted by changing the "vendor" field in the
    <envar>LFS_TGT</envar> variable. We also use the
    <parameter moreinfo="none">--with-sysroot</parameter> option when building the cross linker and
    cross compiler to tell them where to find the needed host files. This
    ensures that none of the other programs built in <xref linkend="chapter-temporary-tools"/> can link to libraries on the build
    machine. Only two stages are mandatory, and one more for tests:</para>

    <informaltable align="center">
      <tgroup cols="5">
        <colspec colnum="1" align="center"/>
        <colspec colnum="2" align="center"/>
        <colspec colnum="3" align="center"/>
        <colspec colnum="4" align="center"/>
        <colspec colnum="5" align="left"/>
        <thead>
          <row><entry>Stage</entry><entry>Build</entry><entry>Host</entry>
               <entry>Target</entry><entry>Action</entry></row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry><entry>pc</entry><entry>pc</entry><entry>lfs</entry>
            <entry>build cross-compiler cc1 using cc-pc on pc</entry>
          </row>
          <row>
            <entry>2</entry><entry>pc</entry><entry>lfs</entry><entry>lfs</entry>
            <entry>build compiler cc-lfs using cc1 on pc</entry>
          </row>
          <row>
            <entry>3</entry><entry>lfs</entry><entry>lfs</entry><entry>lfs</entry>
            <entry>rebuild and test cc-lfs using itself on lfs</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>In the above table, <quote>on pc</quote> means the commands are run
    on a machine using the already installed distribution. <quote>On
    lfs</quote> means the commands are run in a chrooted environment.</para>

    <para>Now, there is more about cross-compiling: the C language is not
    just a compiler, but also defines a standard library. In this book, the
    GNU C library, named glibc, is used. This library must
    be compiled for the lfs machine, that is, using the cross compiler cc1. 
    But the compiler itself uses an internal library implementing complex
    instructions not available in the assembler instruction set. This
    internal library is named libgcc, and must be linked to the glibc
    library to be fully functional! Furthermore, the standard library for
    C++ (libstdc++) also needs being linked to glibc. The solution to this
    chicken and egg problem is to first build a degraded cc1 based libgcc,
    lacking some functionalities such as threads and exception handling, then
    build glibc using this degraded compiler (glibc itself is not
    degraded), then build libstdc++. But this last library will lack the
    same functionalities as libgcc.</para>

    <para>This is not the end of the story: the conclusion of the preceding
    paragraph is that cc1 is unable to build a fully functional libstdc++, but
    this is the only compiler available for building the C/C++ libraries
    during stage 2! Of course, the compiler built during stage 2, cc-lfs,
    would be able to build those libraries, but (1) the build system of
    GCC does not know that it is usable on pc, and (2) using it on pc
    would be at risk of linking to the pc libraries, since cc-lfs is a native
    compiler. So we have to build libstdc++ later, in chroot.</para>

  </sect2>

  <sect2 id="other-details">

    <title>Other procedural details</title>

    <para>The cross-compiler will be installed in a separate <filename class="directory" moreinfo="none">$LFS/tools</filename> directory, since it will not
    be part of the final system.</para>

    <para>Binutils is installed first because the <command moreinfo="none">configure</command>
    runs of both GCC and Glibc perform various feature tests on the assembler
    and linker to determine which software features to enable or disable. This
    is more important than one might first realize. An incorrectly configured
    GCC or Glibc can result in a subtly broken toolchain, where the impact of
    such breakage might not show up until near the end of the build of an
    entire distribution. A test suite failure will usually highlight this error
    before too much additional work is performed.</para>

    <para>Binutils installs its assembler and linker in two locations,
    <filename class="directory" moreinfo="none">$LFS/tools/bin</filename> and <filename class="directory" moreinfo="none">$LFS/tools/$LFS_TGT/bin</filename>. The tools in one
    location are hard linked to the other. An important facet of the linker is
    its library search order. Detailed information can be obtained from
    <command moreinfo="none">ld</command> by passing it the <parameter moreinfo="none">--verbose</parameter>
    flag. For example, <command moreinfo="none">$LFS_TGT-ld --verbose | grep SEARCH</command>
    will illustrate the current search paths and their order. It shows which
    files are linked by <command moreinfo="none">ld</command> by compiling a dummy program and
    passing the <parameter moreinfo="none">--verbose</parameter> switch to the linker. For
    example,
    <command moreinfo="none">$LFS_TGT-gcc dummy.c -Wl,--verbose 2&gt;&amp;1 | grep succeeded</command>
    will show all the files successfully opened during the linking.</para>

    <para>The next package installed is GCC. An example of what can be
    seen during its run of <command moreinfo="none">configure</command> is:</para>

<screen format="linespecific"><computeroutput moreinfo="none">checking what assembler to use... /mnt/lfs/tools/i686-lfs-linux-gnu/bin/as
checking what linker to use... /mnt/lfs/tools/i686-lfs-linux-gnu/bin/ld</computeroutput></screen>

    <para>This is important for the reasons mentioned above. It also
    demonstrates that GCC's configure script does not search the PATH
    directories to find which tools to use. However, during the actual
    operation of <command moreinfo="none">gcc</command> itself, the same search paths are not
    necessarily used. To find out which standard linker <command moreinfo="none">gcc</command>
    will use, run: <command moreinfo="none">$LFS_TGT-gcc -print-prog-name=ld</command>.</para>

    <para>Detailed information can be obtained from <command moreinfo="none">gcc</command> by
    passing it the <parameter moreinfo="none">-v</parameter> command line option while compiling
    a dummy program. For example, <command moreinfo="none">gcc -v dummy.c</command> will show
    detailed information about the preprocessor, compilation, and assembly
    stages, including <command moreinfo="none">gcc</command>'s included search paths and their
    order.</para>

    <para>Next installed are sanitized Linux API headers. These allow the
    standard C library (Glibc) to interface with features that the Linux
    kernel will provide.</para>

    <para>The next package installed is Glibc. The most important
    considerations for building Glibc are the compiler, binary tools, and
    kernel headers. The compiler is generally not an issue since Glibc will
    always use the compiler relating to the <parameter moreinfo="none">--host</parameter>
    parameter passed to its configure script; e.g. in our case, the compiler
    will be <command moreinfo="none">$LFS_TGT-gcc</command>. The binary tools and kernel
    headers can be a bit more complicated. Therefore, take no risks and use
    the available configure switches to enforce the correct selections. After
    the run of <command moreinfo="none">configure</command>, check the contents of the
    <filename moreinfo="none">config.make</filename> file in the <filename class="directory" moreinfo="none">build</filename> directory for all important details.
    Note the use of <parameter moreinfo="none">CC="$LFS_TGT-gcc"</parameter> (with
    <envar>$LFS_TGT</envar> expanded) to control which binary tools are used
    and the use of the <parameter moreinfo="none">-nostdinc</parameter> and
    <parameter moreinfo="none">-isystem</parameter> flags to control the compiler's include
    search path. These items highlight an important aspect of the Glibc
    packageâit is very self-sufficient in terms of its build machinery
    and generally does not rely on toolchain defaults.</para>

    <para>As said above, the standard C++ library is compiled next, followed in
    <xref linkend="chapter-temporary-tools"/> by all the programs that need
    themselves to be built. The install step of all those packages uses the
    <envar>DESTDIR</envar> variable to have the
    programs land into the LFS filesystem.</para>

    <para>At the end of <xref linkend="chapter-temporary-tools"/> the native
    lfs compiler is installed. First binutils-pass2 is built,
    with the same <envar>DESTDIR</envar> install as the other programs,
    then the second pass of GCC is constructed, omitting libstdc++
    and other non-important libraries.  Due to some weird logic in GCC's
    configure script, <envar>CC_FOR_TARGET</envar> ends up as
    <command moreinfo="none">cc</command> when the host is the same as the target, but is
    different from the build system. This is why
    <parameter moreinfo="none">CC_FOR_TARGET=$LFS_TGT-gcc</parameter> is put explicitly into
    the configure options.</para>

    <para>Upon entering the chroot environment in <xref linkend="chapter-chroot-temporary-tools"/>, the first task is to install
    libstdc++. Then temporary installations of programs needed for the proper
    operation of the toolchain are performed. From this point onwards, the
    core toolchain is self-contained and self-hosted.  In 
    <xref linkend="chapter-building-system"/>, final versions of all the
    packages needed for a fully functional system are built, tested and
    installed.</para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-generalinstructions" xreflabel="General Compilation Instructions">
  <?dbhtml filename="generalinstructions.html"?>

  <title>General Compilation Instructions</title>

  <para>When building packages there are several assumptions made within
  the instructions:</para>

  <itemizedlist>

  <listitem>
    <para>Several of the packages are patched before compilation, but only when
    the patch is needed to circumvent a problem. A patch is often needed in
    both this and the following chapters, but sometimes in only one location.
    Therefore, do not be concerned if instructions for a downloaded patch seem
    to be missing.  Warning messages about <emphasis>offset</emphasis> or
    <emphasis>fuzz</emphasis> may also be encountered when applying a patch. Do
    not worry about these warnings, as the patch was still successfully
    applied.</para>
  </listitem>

  <listitem>
    <para>During the compilation of most packages, there will be several
    warnings that scroll by on the screen. These are normal and can safely be
    ignored.  These warnings are as they appearâwarnings about
    deprecated, but not invalid, use of the C or C++ syntax. C standards change
    fairly often, and some packages still use the older standard. This is not a
    problem, but does prompt the warning.</para>
  </listitem>

  <listitem>
    <para>Check one last time that the <envar>LFS</envar> environment variable
    is set up properly:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">echo $LFS</userinput></screen>

    <para>Make sure the output shows the path to the LFS partition's mount
    point, which is <filename class="directory" moreinfo="none">/mnt/lfs</filename>, using our
    example.</para>
  </listitem>

  <listitem>

    <para>Finally, two important items must be emphasized:</para>

    <important>

      <para>The build instructions assume that the <xref linkend="ch-partitioning-hostreqs"/>, including symbolic links, have
      been set properly:</para>

      <itemizedlist role="important">

        <listitem override="bullet"><para><command moreinfo="none">bash</command> is the shell
        in use.</para></listitem>

        <listitem override="bullet"><para><command moreinfo="none">sh</command> is a symbolic
        link to <command moreinfo="none">bash</command>.</para></listitem>

        <listitem override="bullet"><para><command moreinfo="none">/usr/bin/awk</command> is a
        symbolic link to <command moreinfo="none">gawk</command>.</para></listitem>

        <listitem override="bullet"><para><command moreinfo="none">/usr/bin/yacc</command> is a
        symbolic link to <command moreinfo="none">bison</command> or a small script that
        executes bison.</para></listitem>

      </itemizedlist>
    </important>

    <important>
      <para>To re-emphasize the build process:</para>

      <orderedlist numeration="arabic" spacing="compact" inheritnum="ignore" continuation="restarts">
        <listitem>
          <para>Place all the sources and patches in a directory that will be
          accessible from the chroot environment such as
      	  <filename class="directory" moreinfo="none">/mnt/lfs/sources/</filename>.<!-- Do
          <emphasis>not</emphasis> put sources in
	  <filename class="directory">/mnt/lfs/tools/</filename>. --></para>
        </listitem>
        <listitem>
          <para>Change to the sources directory.</para>
        </listitem>
        <listitem id="buildinstr" xreflabel="Package build instructions">
          <para>For each package:</para>
          <orderedlist numeration="loweralpha" spacing="compact" inheritnum="ignore" continuation="restarts">
            <listitem>
              <para>Using the <command moreinfo="none">tar</command> program, extract the package
              to be built.  In <xref linkend="chapter-cross-tools"/> and
              <xref linkend="chapter-temporary-tools"/>, ensure you are 
              the <emphasis>lfs</emphasis> user when extracting the package.</para>
            </listitem>
            <listitem>
              <para>Change to the directory created when the package was
              extracted.</para>
            </listitem>
            <listitem>
              <para>Follow the book's instructions for building the package.</para>
            </listitem>
            <listitem>
              <para>Change back to the sources directory.</para>
            </listitem>
            <listitem>
              <para>Delete the extracted source directory unless instructed otherwise.</para>
            </listitem>
          </orderedlist>
        </listitem>
      </orderedlist>
    </important>
  </listitem>

  </itemizedlist>

</sect1>

</preface>
<chapter id="chapter-cross-tools" xreflabel="Chapter&#xA0;5" xml:base="chapter05/chapter05.xml">
  <?dbhtml dir="chapter05"?>
  <?dbhtml filename="chapter05.html"?>

  <title>Compiling a Cross-Toolchain</title>

  <sect1 id="ch-tools-introduction">
  <?dbhtml filename="introduction.html"?>

  <title>Introduction</title>

  <para>This chapter shows how to build a cross-compiler and its associated
  tools. Although here cross-compilation is faked, the principles are
  the same as for a real cross-toolchain.</para>

  <para>The programs compiled in this chapter will be installed under the
  <filename class="directory" moreinfo="none">$LFS/tools</filename> directory to keep them
  separate from the files installed in the following chapters. The libraries,
  on the other hand, are installed into their final place, since they pertain
  to the system we want to build.</para>

</sect1>
  <sect1 id="ch-tools-binutils-pass1" role="wrap">
  <?dbhtml filename="binutils-pass1.html"?>

  <sect1info condition="script">
    <productname class="trade">binutils-pass1</productname>
    <productnumber>2.37</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/binutils/binutils-2.37.tar.xz</address>
  </sect1info>

  <title>Binutils-2.37 - Pass 1</title>

  <indexterm zone="ch-tools-binutils-pass1" significance="normal">
    <primary sortas="a-Binutils">Binutils</primary>
    <secondary>tools, pass 1</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/binutils.xml">The Binutils package contains a linker, an assembler, and other
    tools for handling object files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1 SBU</seg>
        <seg>602 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Cross Binutils</title>

    <note><para>Go back and re-read the notes in the section titled <xref linkend="ch-tools-generalinstructions"/>.
    Understanding the notes labeled important can save you a lot
    of problems later.</para></note>

    <para>It is important that Binutils be the first package compiled
    because both Glibc and GCC perform various tests on the available
    linker and assembler to determine which of their own features to
    enable.</para>

    <para>The Binutils documentation recommends building Binutils 
    in a dedicated build directory:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <note>
      <para>In order for the SBU values listed in the rest of the book
      to be of any use, measure the time it takes to build this package from
      the configuration, up to and including the first install. To achieve
      this easily, wrap the commands in a <command moreinfo="none">time</command>
      command like this: <userinput moreinfo="none">time { ../configure ... &amp;&amp; make
      &amp;&amp; make install; }</userinput>.</para>
    </note>

    <para>Now prepare Binutils for compilation:</para>

    <screen format="linespecific"><userinput remap="configure" moreinfo="none">../configure --prefix=$LFS/tools \
             --with-sysroot=$LFS \
             --target=$LFS_TGT   \
             --disable-nls       \
             --disable-werror</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--prefix=$LFS/tools</parameter></term>
        <listitem>
          <para>This tells the configure script to prepare to install the
          binutils programs in the <filename class="directory" moreinfo="none">$LFS/tools</filename> directory.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--with-sysroot=$LFS</parameter></term>
        <listitem>
          <para>For cross compilation, this tells the build system to look in
          $LFS for the target system libraries as needed.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><envar>--target=$LFS_TGT</envar></term>
        <listitem>
          <para>Because the machine description in the <envar>LFS_TGT</envar>
          variable is slightly different than the value returned by the
          <command moreinfo="none">config.guess</command> script, this switch will tell the
          <command moreinfo="none">configure</command> script to adjust binutil's build system
          for building a cross linker.  </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-nls</parameter></term>
        <listitem>
          <para>This disables internationalization as i18n is not needed for the
          temporary tools.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-werror</parameter></term>
        <listitem>
          <para>This prevents the build from stopping in the event that there
          are warnings from the host's compiler.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Continue with compiling the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install -j1</userinput></screen>

    <variablelist>
      <title>The meaning of the make parameter:</title>

      <varlistentry>
        <term><parameter moreinfo="none">-j1</parameter></term>
        <listitem>
          <para>An issue in the building system may cause the installation
          to fail with <option>-j N</option> in <envar>MAKEFLAGS</envar>.
          Override it to workaround this issue.</para>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-binutils" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-gcc-pass1" role="wrap" xreflabel="gcc-pass1">
  <?dbhtml filename="gcc-pass1.html"?>

  <sect1info condition="script">
    <productname class="trade">gcc-pass1</productname>
    <productnumber>11.2.0</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gcc/gcc-11.2.0/gcc-11.2.0.tar.xz</address>
  </sect1info>

  <title>GCC-11.2.0 - Pass 1</title>

  <indexterm zone="ch-tools-gcc-pass1" significance="normal">
    <primary sortas="a-GCC">GCC</primary>
    <secondary>tools, pass 1</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/gcc.xml">The GCC package contains the GNU compiler collection, which includes
    the C and C++ compilers.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>12 SBU</seg>
        <seg>3.4 GB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Cross GCC</title>

    <para>GCC requires the GMP, MPFR and MPC packages. As these packages may
    not be included in your host distribution, they will be built with
    GCC.  Unpack each package into the GCC source directory and rename the
    resulting directories so the GCC build procedures will automatically
    use them:</para>

    <note><para>There are frequent misunderstandings about this chapter.  The
    procedures are the same as every other chapter as explained earlier (<xref linkend="buildinstr"/>).  First extract the gcc tarball from the sources
    directory and then change to the directory created.  Only then should you
    proceed with the instructions below.</para></note>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">tar -xf ../mpfr-4.1.0.tar.xz
mv -v mpfr-4.1.0 mpfr
tar -xf ../gmp-6.2.1.tar.xz
mv -v gmp-6.2.1 gmp
tar -xf ../mpc-1.2.1.tar.gz
mv -v mpc-1.2.1 mpc</userinput></screen>

    <para>On x86_64 hosts, set the default directory name for
    64-bit libraries to <quote>lib</quote>:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
 ;;
esac</userinput></screen>

    <para>The GCC documentation recommends building GCC 
    in a dedicated build directory:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare GCC for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../configure                                       \
    --target=$LFS_TGT                              \
    --prefix=$LFS/tools                            \
    --with-glibc-version=2.11                      \
    --with-sysroot=$LFS                            \
    --with-newlib                                  \
    --without-headers                              \
    --enable-initfini-array                        \
    --disable-nls                                  \
    --disable-shared                               \
    --disable-multilib                             \
    --disable-decimal-float                        \
    --disable-threads                              \
    --disable-libatomic                            \
    --disable-libgomp                              \
    --disable-libquadmath                          \
    --disable-libssp                               \
    --disable-libvtv                               \
    --disable-libstdcxx                            \
    --enable-languages=c,c++</userinput></screen>
    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--with-glibc-version=2.11</parameter></term>
        <listitem>
          <para>This option ensures the package will be compatible with the host's
          version of glibc.  It is set to the minimum glibc requirement 
          specified in the <xref linkend="ch-partitioning-hostreqs"/>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--with-newlib</parameter></term>
        <listitem>
          <para>Since a working C library is not yet available, this ensures
          that the inhibit_libc constant is defined when building libgcc. This prevents
          the compiling of any code that requires libc support.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--without-headers</parameter></term>
        <listitem>
          <para>When creating a complete cross-compiler, GCC requires
          standard headers compatible with the target system. For our
          purposes these headers will not be needed. This switch prevents
          GCC from looking for them.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-initfini-array</parameter></term>
        <listitem>
          <para>This switch forces the use of some internal data structures
          that are needed but cannot be detected when building a cross
          compiler.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-shared</parameter></term>
        <listitem>
          <para>This switch forces GCC to link its internal libraries
          statically. We need this because the shared libraries require glibc,
          which is not yet installed on the target system.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-multilib</parameter></term>
        <listitem>
          <para>On x86_64, LFS does not support a multilib configuration.
          This switch is harmless for x86.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-decimal-float, --disable-threads,
              --disable-libatomic, --disable-libgomp, 
        --disable-libquadmath, --disable-libssp, --disable-libvtv,
        --disable-libstdcxx</parameter></term>
        <listitem>
          <para>These switches disable support for the decimal floating point
          extension, threading, libatomic, libgomp, libquadmath, libssp,
          libvtv, and the C++ standard library respectively. These features
          will fail to compile when building a cross-compiler and are not
          necessary for the task of cross-compiling the temporary libc.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-languages=c,c++</parameter></term>
        <listitem>
          <para>This option ensures that only the C and C++ compilers are built.
          These are the only languages needed now.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile GCC by running:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

    <screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>This build of GCC has installed a couple of internal system
    headers.  Normally one of them, <filename moreinfo="none">limits.h</filename>, would in turn
    include the corresponding system <filename moreinfo="none">limits.h</filename> header, in
    this case, <filename moreinfo="none">$LFS/usr/include/limits.h</filename>. However, at the
    time of this build of GCC <filename moreinfo="none">$LFS/usr/include/limits.h</filename>
    does not exist, so the internal header that has just been installed is a
    partial, self-contained file and does not include the extended features of
    the system header. This is adequate for building glibc, but the full
    internal header will be needed later.  Create a full version of the internal
    header using a command that is identical to what the GCC build system does
    in normal circumstances:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">cd ..
cat gcc/limitx.h gcc/glimits.h gcc/limity.h &gt; \
  `dirname $($LFS_TGT-gcc -print-libgcc-file-name)`/install-tools/include/limits.h</userinput></screen>
  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-gcc" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-linux-headers" role="wrap">
  <?dbhtml filename="linux-headers.html"?>

  <sect1info condition="script">
    <productname class="trade">linux-headers</productname>
    <productnumber>5.13.12</productnumber>
    <address format="linespecific">https://www.kernel.org/pub/linux/kernel/v5.x/linux-5.13.12.tar.xz</address>
  </sect1info>

  <title>Linux-5.13.12 API Headers</title>

  <indexterm zone="ch-tools-linux-headers" significance="normal">
    <primary sortas="a-Linux">Linux</primary>
    <secondary>tools, API headers</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Linux API Headers (in linux-5.13.12.tar.xz) expose the
    kernel's API for use by Glibc.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>1.2 GB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Linux API Headers</title>

    <para>The Linux kernel needs to expose an Application Programming Interface
    (API) for the system's C library (Glibc in LFS) to use.  This is done
    by way of sanitizing various C header files that are shipped in the Linux
    kernel source tarball.</para>

    <para>Make sure there are no stale files embedded in the package:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">make mrproper</userinput></screen>

    <para>Now extract the user-visible kernel headers from the source.
    The recommended make target <quote>headers_install</quote> cannot be
    used, because it requires <application moreinfo="none">rsync</application>, which may not
    be available. The headers are first placed in
    <filename class="directory" moreinfo="none">./usr</filename>, then copied to the needed
    location.</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make headers
find usr/include -name '.*' -delete
rm usr/include/Makefile
</userinput><userinput remap="install" moreinfo="none">cp -rv usr/include $LFS/usr</userinput></screen>

  </sect2>

  <sect2 id="contents-linux-headers" role="content">
    <title>Contents of Linux API Headers</title>

    <segmentedlist>
      <segtitle>Installed headers</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>/usr/include/asm/*.h, /usr/include/asm-generic/*.h,
        /usr/include/drm/*.h, /usr/include/linux/*.h, /usr/include/misc/*.h,
        /usr/include/mtd/*.h, /usr/include/rdma/*.h, /usr/include/scsi/*.h, 
        /usr/include/sound/*.h, /usr/include/video/*.h, 
        and /usr/include/xen/*.h</seg>
        <seg>/usr/include/asm, /usr/include/asm-generic, /usr/include/drm,
        /usr/include/linux, /usr/include/misc, /usr/include/mtd, 
        /usr/include/rdma, /usr/include/scsi, /usr/include/sound, 
        /usr/include/video, and /usr/include/xen</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="asm">
        <term><filename class="headerfile" moreinfo="none">/usr/include/asm/*.h</filename></term>
        <listitem>
          <para>The Linux API ASM Headers</para>
          <indexterm zone="ch-tools-linux-headers asm" significance="normal">
            <primary sortas="e-/usr/include/asm/*.h">/usr/include/asm/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

     <varlistentry id="asm-generic">
        <term><filename class="headerfile" moreinfo="none">/usr/include/asm-generic/*.h</filename></term>
        <listitem>
          <para>The Linux API ASM Generic Headers</para>
          <indexterm zone="ch-tools-linux-headers asm-generic" significance="normal">
            <primary sortas="e-/usr/include/asm-generic/*.h">/usr/include/asm-generic/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="drm">
        <term><filename class="headerfile" moreinfo="none">/usr/include/drm/*.h</filename></term>
        <listitem>
          <para>The Linux API DRM Headers</para>
          <indexterm zone="ch-tools-linux-headers drm" significance="normal">
            <primary sortas="e-/usr/include/drm/*.h">/usr/include/drm/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="linux">
        <term><filename class="headerfile" moreinfo="none">/usr/include/linux/*.h</filename></term>
        <listitem>
          <para>The Linux API Linux Headers</para>
          <indexterm zone="ch-tools-linux-headers linux" significance="normal">
            <primary sortas="e-/usr/include/linux/*.h">/usr/include/linux/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="misc">
        <term><filename class="headerfile" moreinfo="none">/usr/include/misc/*.h</filename></term>
        <listitem>
          <para>The Linux API Miscellaneous Headers</para>
          <indexterm zone="ch-tools-linux-headers misc" significance="normal">
            <primary sortas="e-/usr/include/misc/*.h">/usr/include/misc/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mtd">
        <term><filename class="headerfile" moreinfo="none">/usr/include/mtd/*.h</filename></term>
        <listitem>
          <para>The Linux API MTD Headers</para>
          <indexterm zone="ch-tools-linux-headers mtd" significance="normal">
            <primary sortas="e-/usr/include/mtd/*.h">/usr/include/mtd/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rdma">
        <term><filename class="headerfile" moreinfo="none">/usr/include/rdma/*.h</filename></term>
        <listitem>
          <para>The Linux API RDMA Headers</para>
          <indexterm zone="ch-tools-linux-headers rdma" significance="normal">
            <primary sortas="e-/usr/include/rdma/*.h">/usr/include/rdma/*.h</primary>
         </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="scsi">
        <term><filename class="headerfile" moreinfo="none">/usr/include/scsi/*.h</filename></term>
        <listitem>
          <para>The Linux API SCSI Headers</para>
          <indexterm zone="ch-tools-linux-headers scsi" significance="normal">
            <primary sortas="e-/usr/include/scsi/*.h">/usr/include/scsi/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sound">
        <term><filename class="headerfile" moreinfo="none">/usr/include/sound/*.h</filename></term>
        <listitem>
          <para>The Linux API Sound Headers</para>
          <indexterm zone="ch-tools-linux-headers sound" significance="normal">
           <primary sortas="e-/usr/include/sound/*.h">/usr/include/sound/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="video">
        <term><filename class="headerfile" moreinfo="none">/usr/include/video/*.h</filename></term>
        <listitem>
          <para>The Linux API Video Headers</para>
          <indexterm zone="ch-tools-linux-headers video" significance="normal">
            <primary sortas="e-/usr/include/video/*.h">/usr/include/video/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xen">
        <term><filename class="headerfile" moreinfo="none">/usr/include/xen/*.h</filename></term>
        <listitem>
          <para>The Linux API Xen Headers</para>
          <indexterm zone="ch-tools-linux-headers xen" significance="normal">
            <primary sortas="e-/usr/include/xen/*.h">/usr/include/xen/*.h</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-tools-glibc" role="wrap">
  <?dbhtml filename="glibc.html"?>

  <sect1info condition="script">
    <productname class="trade">glibc</productname>
    <productnumber>2.34</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/glibc/glibc-2.34.tar.xz</address>
  </sect1info>

  <title>Glibc-2.34</title>

  <indexterm zone="ch-tools-glibc" significance="normal">
    <primary sortas="a-Glibc">Glibc</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/glibc.xml">The Glibc package contains the main C library. This library provides
    the basic routines for allocating memory, searching directories, opening and
    closing files, reading and writing files, string handling, pattern matching,
    arithmetic, and so on.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>4.2 SBU</seg>
        <seg>744 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Glibc</title>

    <para>First, create a symbolic link for LSB compliance. Additionally,
    for x86_64, create a compatibility symbolic link required for proper
    operation of the dynamic library loader:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">case $(uname -m) in
    i?86)   ln -sfv ld-linux.so.2 $LFS/lib/ld-lsb.so.3
    ;;
    x86_64) ln -sfv ../lib/ld-linux-x86-64.so.2 $LFS/lib64
            ln -sfv ../lib/ld-linux-x86-64.so.2 $LFS/lib64/ld-lsb-x86-64.so.3
    ;;
esac</userinput></screen>

    <para>Some of the Glibc programs use the non-FHS compliant
    <filename class="directory" moreinfo="none">/var/db</filename> directory to store their
    runtime data. Apply the following patch to make such programs store their
    runtime data in the FHS-compliant locations:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">patch -Np1 -i ../glibc-2.34-fhs-1.patch</userinput></screen>

    <para>The Glibc documentation recommends building Glibc 
    in a dedicated build directory:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Ensure that the <command moreinfo="none">ldconfig</command> and <command moreinfo="none">sln</command>
    utilites are installed into
    <filename class="directory" moreinfo="none">/usr/sbin</filename>:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">echo "rootsbindir=/usr/sbin" &gt; configparms</userinput></screen>

    <para>Next, prepare Glibc for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../configure                             \
      --prefix=/usr                      \
      --host=$LFS_TGT                    \
      --build=$(../scripts/config.guess) \
      --enable-kernel=3.2                \
      --with-headers=$LFS/usr/include    \
      libc_cv_slibdir=/usr/lib</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--host=$LFS_TGT, --build=$(../scripts/config.guess)</parameter></term>
        <listitem>
          <para>The combined effect of these switches is that Glibc's build system
          configures itself to be cross-compiled, using the cross-linker and
          cross-compiler in <filename class="directory" moreinfo="none">$LFS/tools</filename>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-kernel=3.2</parameter></term>
        <listitem>
          <para>This tells Glibc to compile the library with support
          for 3.2 and later Linux kernels.  Workarounds for older
          kernels are not enabled.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--with-headers=$LFS/usr/include</parameter></term>
        <listitem>
          <para>This tells Glibc to compile itself against the headers
          recently installed to the $LFS/usr/include directory, so that
          it knows exactly what features the kernel has and can optimize
          itself accordingly.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">libc_cv_slibdir=/usr/lib</parameter></term>
        <listitem>
          <para>This ensures that the library is installed in /usr/lib instead
          of the default /lib64 on 64 bit machines.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>During this stage the following warning might appear:</para>

    <blockquote>
<screen format="linespecific"><computeroutput moreinfo="none">configure: WARNING:
*** These auxiliary programs are missing or
*** incompatible versions: msgfmt
*** some features will be disabled.
*** Check the INSTALL file for required versions.</computeroutput></screen>
    </blockquote>

    <para>The missing or incompatible <command moreinfo="none">msgfmt</command> program is
    generally harmless. This <command moreinfo="none">msgfmt</command> program is part of the
    Gettext package which the host distribution should provide.</para>

    <note><para>There have been reports that this package may fail when 
    building as a "parallel make".  If this occurs, rerun the make command
    with a "-j1" option.</para></note>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

    <warning><para>If <envar>LFS</envar> is not properly set, and despite the
    recommendations, you are building as
    <systemitem class="username" moreinfo="none">root</systemitem>, the next command will
    install the newly built glibc to your host system, which most likely
    will render it unusable. So double check that the environment is
    correctly set, before running the following command.</para></warning>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

    <variablelist>
      <title>The meaning of the <command moreinfo="none">make install</command> option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">DESTDIR=$LFS</parameter></term>
        <listitem>
          <para>The <envar>DESTDIR</envar> make variable is used by almost all
          packages to define the location where the package should be
          installed. If it is not set, it defaults to the root (<filename class="directory" moreinfo="none">/</filename>) directory. Here we specify that
          the package be installed in <filename class="directory" moreinfo="none">$LFS
          </filename>, which will become the root after <xref linkend="ch-tools-chroot"/>.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Fix hardcoded path to the executable loader in
    <command moreinfo="none">ldd</command> script:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">sed '/RTLDLIST=/s@/usr@@g' -i $LFS/usr/bin/ldd</userinput></screen>

    <caution>
      <para>At this point, it is imperative to stop and ensure that the basic
      functions (compiling and linking) of the new toolchain are working as
      expected. To perform a sanity check, run the following commands:</para>

<screen format="linespecific"><userinput moreinfo="none">echo 'int main(){}' &gt; dummy.c
$LFS_TGT-gcc dummy.c
readelf -l a.out | grep '/ld-linux'</userinput></screen>

      <para>If everything is working correctly, there should be no errors,
      and the output of the last command will be of the form:</para>

<screen format="linespecific"><computeroutput moreinfo="none">[Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]</computeroutput></screen>

      <para>Note that for 32-bit machines, the interpreter name will be
      <filename moreinfo="none">/lib/ld-linux.so.2</filename>.</para>

      <para>If the output is not shown as above or there was no output at all,
      then something is wrong. Investigate and retrace the steps to find out
      where the problem is and correct it. This issue must be resolved before
      continuing on.</para>

      <para>Once all is well, clean up the test files:</para>

<screen format="linespecific"><userinput moreinfo="none">rm -v dummy.c a.out</userinput></screen>

    </caution>

    <note><para>Building packages in the next chapter will serve as an
    additional check that the toolchain has been built properly. If some
    package, especially binutils-pass2 or gcc-pass2, fails to build, it is
    an indication that something has gone wrong with the
    previous Binutils, GCC, or Glibc installations.</para></note>

    <para>Now that our cross-toolchain is complete, finalize the installation
    of the limits.h header. For doing so, run a utility provided by the GCC
    developers:</para>

<screen format="linespecific"><userinput moreinfo="none">$LFS/tools/libexec/gcc/$LFS_TGT/11.2.0/install-tools/mkheaders</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-glibc" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-libstdcpp-pass1" role="wrap">
  <?dbhtml filename="gcc-libstdc++-pass1.html"?>

  <sect1info condition="script">
    <productname class="trade">gcc-libstdc++</productname>
    <productnumber>11.2.0</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gcc/gcc-11.2.0/gcc-11.2.0.tar.xz</address>
  </sect1info>

  <title>Libstdc++ from GCC-11.2.0, Pass 1</title>

  <indexterm zone="ch-tools-libstdcpp-pass1" significance="normal">
    <primary sortas="a-GCC">GCC</primary>
    <secondary>tools, libstdc++ pass 1</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Libstdc++ is the standard C++ library. It is needed 
    to compile C++ code
    (part of GCC is written in C++), but we had to defer its installation
    when we built <xref linkend="ch-tools-gcc-pass1"/>
    because it depends on glibc, which was not yet available in the target
    directory.
    </para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.4 SBU</seg>
        <seg>1.0 GB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Target Libstdc++</title>

    <note>
      <para><application moreinfo="none">Libstdc++</application> is part of the GCC sources.
      You should first unpack the GCC tarball and change to the
      <filename moreinfo="none">gcc-11.2.0</filename> directory.</para>
    </note>

    <para>Create a separate build directory for libstdc++ and enter it:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare libstdc++ for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../libstdc++-v3/configure           \
    --host=$LFS_TGT                 \
    --build=$(../config.guess)      \
    --prefix=/usr                   \
    --disable-multilib              \
    --disable-nls                   \
    --disable-libstdcxx-pch         \
    --with-gxx-include-dir=/tools/$LFS_TGT/include/c++/11.2.0</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--host=...</parameter></term>
        <listitem>
          <para>Specifies that the cross compiler we have just built
          should be used instead of the one in
          <filename moreinfo="none">/usr/bin</filename>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-libstdcxx-pch</parameter></term>
        <listitem>
          <para>This switch prevents the installation of precompiled
          include files, which are not needed at this stage.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--with-gxx-include-dir=/tools/$LFS_TGT/include/c++/11.2.0</parameter></term>
        <listitem>
          <para>This is the location where the C++ compiler should search for the
          standard include files. In a normal build, this information
          is automatically passed to the libstdc++ <command moreinfo="none">configure</command>
          options from the top level directory. In our case, this information
          must be explicitly given.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile libstdc++ by running:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the library:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-gcc" role="."/></para>

  </sect2>

</sect1>

</chapter>
<chapter id="chapter-temporary-tools" xreflabel="Chapter&#xA0;6" xml:base="chapter06/chapter06.xml">
  <?dbhtml dir="chapter06"?>
  <?dbhtml filename="chapter06.html"?>

  <title>Cross Compiling Temporary Tools</title>

  <sect1 id="ch-tools-introduction-cross">
  <?dbhtml filename="introduction.html"?>

  <title>Introduction</title>

  <para>This chapter shows how to cross-compile basic utilities using
  the just built cross-toolchain. Those utilities are installed into
  their final location, but cannot be used yet. Basic tasks still rely on
  the host's tools. Nevertheless, the installed libraries are used when
  linking.</para>

  <para>Using the utilities will be possible in next chapter after entering
  the <quote>chroot</quote> environment. But all the packages built in the
  present chapter need to be built before we do that. Therefore we cannot be 
  independent of the host system yet.</para>

  <para>Once again, let us recall that improper setting of <envar>LFS</envar>
  together with building as <systemitem class="username" moreinfo="none">root</systemitem>,
  may render your computer unusable.
  This whole chapter must be done as user <systemitem class="username" moreinfo="none">lfs</systemitem>, with the environment as described in
  <xref linkend="ch-preps-settingenviron"/>.</para>

</sect1>
  <sect1 id="ch-tools-m4" role="wrap">
  <?dbhtml filename="m4.html"?>

  <sect1info condition="script">
    <productname class="trade">m4</productname>
    <productnumber>1.4.19</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/m4/m4-1.4.19.tar.xz</address>
  </sect1info>

  <title>M4-1.4.19</title>

  <indexterm zone="ch-tools-m4" significance="normal">
    <primary sortas="a-M4">M4</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/m4.xml">The M4 package contains a macro processor.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>32 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of M4</title>
<!--
    <para>First, make some fixes introduced by glibc-2.28:</para>

<screen><userinput remap="pre">sed -i 's/IO_ftrylockfile/IO_EOF_SEEN/' lib/*.c
echo "#define _IO_IN_BACKUP 0x100" >> lib/stdio-impl.h</userinput></screen>
-->
    <para>Prepare M4 for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr   \
            --host=$LFS_TGT \
            --build=$(build-aux/config.guess)</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>
    <para>Details on this package are located in
    <xref linkend="contents-m4" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-ncurses" role="wrap">
  <?dbhtml filename="ncurses.html"?>

  <sect1info condition="script">
    <productname class="trade">ncurses</productname>
    <productnumber>6.2</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/ncurses/ncurses-6.2.tar.gz</address>
  </sect1info>

  <title>Ncurses-6.2</title>

  <indexterm zone="ch-tools-ncurses" significance="normal">
    <primary sortas="a-Ncurses">Ncurses</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/ncurses.xml">The Ncurses package contains libraries for terminal-independent
    handling of character screens.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.7 SBU</seg>
        <seg>48 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Ncurses</title>

    <para>First, ensure that <command moreinfo="none">gawk</command> is found first during configuration:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i s/mawk// configure</userinput></screen>

    <para>Then, run the following commands to build the <quote>tic</quote>
    program on the build host:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir build
pushd build
  ../configure
  make -C include
  make -C progs tic
popd</userinput></screen>

    <para>Prepare Ncurses for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr                \
            --host=$LFS_TGT              \
            --build=$(./config.guess)    \
            --mandir=/usr/share/man      \
            --with-manpage-format=normal \
            --with-shared                \
            --without-debug              \
            --without-ada                \
            --without-normal             \
            --enable-widec</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--with-manpage-format=normal</parameter></term>
        <listitem>
          <para>This prevents Ncurses installing compressed manual
          pages, which may happen if the host distribution itself
          has compressed manual pages.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--without-ada</parameter></term>
        <listitem>
          <para>This ensures that Ncurses does not build support for the Ada
          compiler which may be present on the host but will not be available
          once we enter the <command moreinfo="none">chroot</command> environment.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-widec</parameter></term>
        <listitem>
          <para>This switch causes wide-character libraries (e.g., <filename class="libraryfile" moreinfo="none">libncursesw.so.6.2</filename>)
          to be built instead of normal ones (e.g., <filename class="libraryfile" moreinfo="none">libncurses.so.6.2</filename>).
          These wide-character libraries are usable in both multibyte and
          traditional 8-bit locales, while normal libraries work properly
          only in 8-bit locales. Wide-character and normal libraries are
          source-compatible, but not binary-compatible.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--without-normal</parameter></term>
        <listitem>
          <para>This switch disables building and installing most static libraries.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS TIC_PATH=$(pwd)/build/progs/tic install
echo "INPUT(-lncursesw)" &gt; $LFS/usr/lib/libncurses.so</userinput></screen>

    <variablelist>
      <title>The meaning of the install options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">TIC_PATH=$(pwd)/build/progs/tic</parameter></term>
        <listitem>
          <para>We need to pass the path of the just built
          <command moreinfo="none">tic</command> able to run on the building machine, so that
          the terminal database can be created without errors.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><command moreinfo="none">echo "INPUT(-lncursesw)" &gt; $LFS/usr/lib/libncurses.so</command></term>
        <listitem>
          <para>The <filename moreinfo="none">libncurses.so</filename> library is needed by
          a few packages we will build soon. We create this small linker
          script, as this is what is done in <xref linkend="chapter-building-system"/>.</para>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-ncurses" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-bash" role="wrap">
  <?dbhtml filename="bash.html"?>

  <sect1info condition="script">
    <productname class="trade">bash</productname>
    <productnumber>5.1.8</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/bash/bash-5.1.8.tar.gz</address>
  </sect1info>

  <title>Bash-5.1.8</title>

  <indexterm zone="ch-tools-bash" significance="normal">
    <primary sortas="a-Bash">Bash</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/bash.xml">The Bash package contains the Bourne-Again SHell.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.4 SBU</seg>
        <seg>64 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Bash</title>

    <para>Prepare Bash for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr                   \
            --build=$(support/config.guess) \
            --host=$LFS_TGT                 \
            --without-bash-malloc</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--without-bash-malloc</parameter></term>
        <listitem>
          <para>This option turns off the use of Bash's memory allocation
          (<function moreinfo="none">malloc</function>) function which is known to cause
          segmentation faults. By turning this option off, Bash will use
          the <function moreinfo="none">malloc</function> functions from Glibc which are
          more stable.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

    <para>Make a link for the programs that use <command moreinfo="none">sh</command> for
    a shell:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">ln -sv bash $LFS/bin/sh</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-bash" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-coreutils" role="wrap">
  <?dbhtml filename="coreutils.html"?>

  <sect1info condition="script">
    <productname class="trade">coreutils</productname>
    <productnumber>8.32</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/coreutils/coreutils-8.32.tar.xz</address>
  </sect1info>

  <title>Coreutils-8.32</title>

  <indexterm zone="ch-tools-coreutils" significance="normal">
    <primary sortas="a-Coreutils">Coreutils</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/coreutils.xml">The Coreutils package contains utilities for showing and setting the
    basic system characteristics.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.6 SBU</seg>
        <seg>151 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Coreutils</title>

    <para>Prepare Coreutils for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr                     \
            --host=$LFS_TGT                   \
            --build=$(build-aux/config.guess) \
            --enable-install-program=hostname \
            --enable-no-install-program=kill,uptime</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><envar>--enable-install-program=hostname</envar></term>
        <listitem>
          <para>This enables the <command moreinfo="none">hostname</command> binary to be built
          and installed â it is disabled by default but is required by the
          Perl test suite.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>
<!--
    <para>The above command refuses to install <filename>su</filename>
    because the program cannot be installed setuid root as a non-privileged
    user. By manually installing it, we can use it for running tests in the
    final system as a non-privileged user. Install it with:</para>

<screen><userinput remap="install">cp -v src/su /tools/bin</userinput></screen>
-->
    <para>Move programs to their final expected locations. Although this is
    not necessary in this temporary environment, we must do so because some
    programs harcode executable locations:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">mv -v $LFS/usr/bin/chroot                                     $LFS/usr/sbin
mkdir -pv $LFS/usr/share/man/man8
mv -v $LFS/usr/share/man/man1/chroot.1                        $LFS/usr/share/man/man8/chroot.8
sed -i 's/"1"/"8"/'                                           $LFS/usr/share/man/man8/chroot.8</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-coreutils" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-diffutils" role="wrap">
  <?dbhtml filename="diffutils.html"?>

  <sect1info condition="script">
    <productname class="trade">diffutils</productname>
    <productnumber>3.8</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/diffutils/diffutils-3.8.tar.xz</address>
  </sect1info>

  <title>Diffutils-3.8</title>

  <indexterm zone="ch-tools-diffutils" significance="normal">
    <primary sortas="a-Diffutils">Diffutils</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/diffutils.xml">The Diffutils package contains programs that show the differences
    between files or directories.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>28 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Diffutils</title>

    <para>Prepare Diffutils for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr --host=$LFS_TGT</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-diffutils" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-file" role="wrap">
  <?dbhtml filename="file.html"?>

  <sect1info condition="script">
    <productname class="trade">file</productname>
    <productnumber>5.40</productnumber>
    <address format="linespecific">https://astron.com/pub/file/file-5.40.tar.gz</address>
  </sect1info>

  <title>File-5.40</title>

  <indexterm zone="ch-tools-file" significance="normal">
    <primary sortas="a-File">File</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/file.xml">The File package contains a utility for determining the type of a given
    file or files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>31 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of File</title>

    <para>
       The <command moreinfo="none">file</command> command on the build host needs 
       to be same version as the one we are building in order to 
       create the signature file. Run the following commands to build it:
    </para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir build
pushd build
  ../configure --disable-bzlib      \
               --disable-libseccomp \
               --disable-xzlib      \
               --disable-zlib
  make
popd</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-*</parameter></term>
        <listitem>
          <para>The configuration script attempts to use some packages from
          the host distribution if the corresponding library files exist.
          It may cause compilation failure if a library file exists, but
          the corresponding header files do not.  These options prevent
          using these unneeded capabilities from the host.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Prepare File for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr --host=$LFS_TGT --build=$(./config.guess)</userinput></screen>

<!-- devs: if using - -build here, the build system wants to compile
     the signature file with "file" on the build system, but stops if it is not
     the same version. One possibility would be to build "file" on the build
     system first, but it is simpler to have the system think it is not
     cross-compiling, and use the just built "file". -->
    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make FILE_COMPILE=$(pwd)/build/src/file</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>
    <para>Details on this package are located in <xref linkend="contents-file" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-findutils" role="wrap">
  <?dbhtml filename="findutils.html"?>

  <sect1info condition="script">
    <productname class="trade">findutils</productname>
    <productnumber>4.8.0</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/findutils/findutils-4.8.0.tar.xz</address>
  </sect1info>

  <title>Findutils-4.8.0</title>

  <indexterm zone="ch-tools-findutils" significance="normal">
    <primary sortas="a-Findutils">Findutils</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/findutils.xml">The Findutils package contains programs to find files. These programs
    are provided to recursively search through a directory tree and to
    create, maintain, and search a database (often faster than the recursive
    find, but is unreliable if the database has not been recently updated).</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>40 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Findutils</title>

    <para>Prepare Findutils for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr                   \
            --localstatedir=/var/lib/locate \
            --host=$LFS_TGT                 \
            --build=$(build-aux/config.guess)</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-findutils" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-gawk" role="wrap">
  <?dbhtml filename="gawk.html"?>

  <sect1info condition="script">
    <productname class="trade">gawk</productname>
    <productnumber>5.1.0</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gawk/gawk-5.1.0.tar.xz</address>
  </sect1info>

  <title>Gawk-5.1.0</title>

  <indexterm zone="ch-tools-gawk" significance="normal">
    <primary sortas="a-Gawk">Gawk</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/gawk.xml">The Gawk package contains programs for manipulating text files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>43 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Gawk</title>

    <para>First, ensure some unneeded files are not installed:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i 's/extras//' Makefile.in</userinput></screen>

    <para>Prepare Gawk for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr   \
            --host=$LFS_TGT \
            --build=$(./config.guess)</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-gawk" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-grep" role="wrap">
  <?dbhtml filename="grep.html"?>

  <sect1info condition="script">
    <productname class="trade">grep</productname>
    <productnumber>3.7</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/grep/grep-3.7.tar.xz</address>
  </sect1info>

  <title>Grep-3.7</title>

  <indexterm zone="ch-tools-grep" significance="normal">
    <primary sortas="a-Grep">Grep</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/grep.xml">The Grep package contains programs for searching through the contents of files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>25 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Grep</title>

    <para>Prepare Grep for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr   \
            --host=$LFS_TGT</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-grep" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-gzip" role="wrap">
  <?dbhtml filename="gzip.html"?>

  <sect1info condition="script">
    <productname class="trade">gzip</productname>
    <productnumber>1.10</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gzip/gzip-1.10.tar.xz</address>
  </sect1info>

  <title>Gzip-1.10</title>

  <indexterm zone="ch-tools-gzip" significance="normal">
    <primary sortas="a-Gzip">Gzip</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/gzip.xml">The Gzip package contains programs for compressing and decompressing
    files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>10 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Gzip</title>

    <para>Prepare Gzip for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr --host=$LFS_TGT</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-gzip" role="."/></para>

  </sect2>

</sect1>
  <!--xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="zlib.xml"/-->
  <sect1 id="ch-tools-make" role="wrap">
  <?dbhtml filename="make.html"?>

  <sect1info condition="script">
    <productname class="trade">make</productname>
    <productnumber>4.3</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/make/make-4.3.tar.gz</address>
  </sect1info>

  <title>Make-4.3</title>

  <indexterm zone="ch-tools-make" significance="normal">
    <primary sortas="a-Make">Make</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/make.xml">The Make package contains a program for controlling the generation of
    executables and other non-source files of a package from source files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>15 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Make</title>

    <para>Prepare Make for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr   \
            --without-guile \
            --host=$LFS_TGT \
            --build=$(build-aux/config.guess)</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--without-guile</parameter></term>
        <listitem>
          <para>Although we are cross-compiling, configure tries to use
          guile from the build host if it finds it. This makes compilation
          fail, so this switch prevents using it.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-make" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-patch" role="wrap">
  <?dbhtml filename="patch.html"?>

  <sect1info condition="script">
    <productname class="trade">patch</productname>
    <productnumber>2.7.6</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/patch/patch-2.7.6.tar.xz</address>
  </sect1info>

  <title>Patch-2.7.6</title>

  <indexterm zone="ch-tools-patch" significance="normal">
    <primary sortas="a-Patch">Patch</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/patch.xml">The Patch package contains a program for modifying or creating files
    by applying a <quote>patch</quote> file typically created by the
    <command moreinfo="none">diff</command> program.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>12 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Patch</title>

    <para>Prepare Patch for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr   \
            --host=$LFS_TGT \
            --build=$(build-aux/config.guess)</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-patch" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-sed" role="wrap">
  <?dbhtml filename="sed.html"?>

  <sect1info condition="script">
    <productname class="trade">sed</productname>
    <productnumber>4.8</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/sed/sed-4.8.tar.xz</address>
  </sect1info>

  <title>Sed-4.8</title>

  <indexterm zone="ch-tools-sed" significance="normal">
    <primary sortas="a-Sed">Sed</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/sed.xml">The Sed package contains a stream editor.</para>

    <segmentedlist>
    <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>20 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Sed</title>

    <para>Prepare Sed for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr   \
            --host=$LFS_TGT</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-sed" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-tar" role="wrap">
  <?dbhtml filename="tar.html"?>

  <sect1info condition="script">
    <productname class="trade">tar</productname>
    <productnumber>1.34</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/tar/tar-1.34.tar.xz</address>
  </sect1info>

  <title>Tar-1.34</title>

  <indexterm zone="ch-tools-tar" significance="normal">
    <primary sortas="a-Tar">Tar</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/tar.xml">The Tar package provides the ability to create tar archives as well
    as perform various other kinds of archive manipulation.  Tar can be used on
    previously created archives to extract files, to store additional files, or
    to update or list files which were already stored. </para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>38 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Tar</title>

    <para>Prepare Tar for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr                     \
            --host=$LFS_TGT                   \
            --build=$(build-aux/config.guess)</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in <xref linkend="contents-tar" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-xz" role="wrap">
  <?dbhtml filename="xz.html"?>

  <sect1info condition="script">
    <productname class="trade">xz</productname>
    <productnumber>5.2.5</productnumber>
    <address format="linespecific">https://tukaani.org/xz/xz-5.2.5.tar.xz</address>
  </sect1info>

  <title>Xz-5.2.5</title>

  <indexterm zone="ch-tools-xz" significance="normal">
    <primary sortas="a-xz">Xz</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/xz.xml">The Xz package contains programs for compressing and decompressing
    files. It provides capabilities for the lzma and the newer xz compression
    formats.  Compressing text files with <command moreinfo="none">xz</command> yields a better
    compression percentage than with the traditional <command moreinfo="none">gzip</command> or
    <command moreinfo="none">bzip2</command> commands.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>15 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Xz</title>

    <para>Prepare Xz for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr                     \
            --host=$LFS_TGT                   \
            --build=$(build-aux/config.guess) \
            --disable-static                  \
            --docdir=/usr/share/doc/xz-5.2.5</userinput></screen>

   <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>
    <para>Details on this package are located in <xref linkend="contents-xz" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-binutils-pass2" role="wrap">
  <?dbhtml filename="binutils-pass2.html"?>

  <sect1info condition="script">
    <productname class="trade">binutils-pass2</productname>
    <productnumber>2.37</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/binutils/binutils-2.37.tar.xz</address>
  </sect1info>

  <title>Binutils-2.37 - Pass 2</title>

  <indexterm zone="ch-tools-binutils-pass2" significance="normal">
    <primary sortas="a-Binutils">Binutils</primary>
    <secondary>tools, pass 2</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/binutils.xml">The Binutils package contains a linker, an assembler, and other
    tools for handling object files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.3 SBU</seg>
        <seg>505 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Binutils</title>

    <para>Create a separate build directory again:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare Binutils for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../configure                   \
    --prefix=/usr              \
    --build=$(../config.guess) \
    --host=$LFS_TGT            \
    --disable-nls              \
    --enable-shared            \
    --disable-werror           \
    --enable-64-bit-bfd</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-shared</parameter></term>
        <listitem>
          <para>Builds <filename class="libraryfile" moreinfo="none">libbfd</filename> as a shared library.</para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><parameter moreinfo="none">--enable-64-bit-bfd</parameter></term>
        <listitem>
          <para>Enables 64-bit support (on hosts with narrower word sizes).
          May not be needed on 64-bit systems, but does no harm.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package, and
    workaround an issue causing
    <filename class="libraryfile" moreinfo="none">libctf.so</filename>
    to link against zlib from the host distribution:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install -j1
install -vm755 libctf/.libs/libctf.so.0.0.0 $LFS/usr/lib</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-binutils" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-gcc-pass2" role="wrap" xreflabel="gcc-pass2">
  <?dbhtml filename="gcc-pass2.html"?>

  <sect1info condition="script">
    <productname class="trade">gcc-pass2</productname>
    <productnumber>11.2.0</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gcc/gcc-11.2.0/gcc-11.2.0.tar.xz</address>
  </sect1info>

  <title>GCC-11.2.0 - Pass 2</title>

  <indexterm zone="ch-tools-gcc-pass2" significance="normal">
    <primary sortas="a-GCC">GCC</primary>
    <secondary>tools, pass 2</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/gcc.xml">The GCC package contains the GNU compiler collection, which includes
    the C and C++ compilers.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>12 SBU</seg>
        <seg>3.3 GB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of GCC</title>

    <para>As in the first build of GCC, the GMP, MPFR, and MPC packages are
    required. Unpack the tarballs and move them into the required directory
    names:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">tar -xf ../mpfr-4.1.0.tar.xz
mv -v mpfr-4.1.0 mpfr
tar -xf ../gmp-6.2.1.tar.xz
mv -v gmp-6.2.1 gmp
tar -xf ../mpc-1.2.1.tar.gz
mv -v mpc-1.2.1 mpc</userinput></screen>

    <para>If building on x86_64, change the default directory name for 64-bit
    libraries to <quote>lib</quote>:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' -i.orig gcc/config/i386/t-linux64
  ;;
esac</userinput></screen>
<!--
    <para>Fix an issue with GCC-10.1 when building with a cross
    compiler:</para>

<screen><userinput remap="pre">patch -Np1 -i ../&gcc-cross-patch;</userinput></screen>
-->
    <para>Create a separate build directory again:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Create a symlink that allows libgcc to be built with posix threads
    support:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -pv $LFS_TGT/libgcc
ln -s ../../../libgcc/gthr-posix.h $LFS_TGT/libgcc/gthr-default.h</userinput></screen>

    <para>Before starting to build GCC, remember to unset any environment
    variables that override the default optimization flags.</para>

    <para>Now prepare GCC for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../configure                                       \
    --build=$(../config.guess)                     \
    --host=$LFS_TGT                                \
    --prefix=/usr                                  \
    CC_FOR_TARGET=$LFS_TGT-gcc                     \
    --with-build-sysroot=$LFS                      \
    --enable-initfini-array                        \
    --disable-nls                                  \
    --disable-multilib                             \
    --disable-decimal-float                        \
    --disable-libatomic                            \
    --disable-libgomp                              \
    --disable-libquadmath                          \
    --disable-libssp                               \
    --disable-libvtv                               \
    --disable-libstdcxx                            \
    --enable-languages=c,c++</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure options:</title><!-- WIP -->

      <varlistentry>
        <term><parameter moreinfo="none">-with-build-sysroot=$LFS</parameter></term>
        <listitem>
          <para>Normally, using <parameter moreinfo="none">--host</parameter> ensures that
          a cross-compiler is used for building GCC, and that compiler knows
          that it has to look for headers and libraries in <filename class="directory" moreinfo="none">$LFS</filename>. But the build system of GCC uses
          other tools, which are not aware of this location. This switch is
          needed to have them find the needed files in <filename class="directory" moreinfo="none">$LFS</filename>, and not on the host.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-initfini-array</parameter></term>
        <listitem>
          <para>This option is automatically enabled when building a native
          compiler with a native compiler on x86. But here, we build with
          a cross compiler, so we need to explicitly set this option.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make DESTDIR=$LFS install</userinput></screen>

    <para>As a finishing touch, create a utility symlink. Many programs and scripts
    run <command moreinfo="none">cc</command> instead of <command moreinfo="none">gcc</command>, which is
    used to keep programs generic and therefore usable on all kinds of UNIX
    systems where the GNU C compiler is not always installed. Running
    <command moreinfo="none">cc</command> leaves the system administrator free to decide
    which C compiler to install:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">ln -sv gcc $LFS/usr/bin/cc</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-gcc" role="."/></para>

  </sect2>

</sect1>

</chapter>
<chapter id="chapter-chroot-temporary-tools" xreflabel="Chapter&#xA0;7" xml:base="chapter07/chapter07.xml">
  <?dbhtml dir="chapter07"?>
  <?dbhtml filename="chapter07.html"?>

  <title>Entering Chroot and Building Additional Temporary Tools</title>

  <sect1 id="ch-tools-introduction-chroot">
  <?dbhtml filename="introduction.html"?>

  <title>Introduction</title>

  <para>This chapter shows how to build the last missing bits of the temporary
  system: the tools needed by the build machinery of various packages.
  Now that all circular dependencies
  have been resolved, we can use a <quote>chroot</quote> environment,
  completely isolated the host operating system used for the build, except
  for the running kernel.</para>

  <para>For proper operation of the isolated environment, some communication
  with the running kernel must be established. This is done through the
  so-called <emphasis>Virtual Kernel File Systems</emphasis>, which must be
  mounted when entering the chroot environment. You may want to check
  that they are mounted by issuing <command moreinfo="none">findmnt</command>.</para>

  <para>Until <xref linkend="ch-tools-chroot"/>, the commands must be
  run as <systemitem class="username" moreinfo="none">root</systemitem>, with the
  <envar>LFS</envar> variable set. After entering chroot, all commands
  are run as root, fortunately without access to the OS of the computer
  you built LFS on. Be careful anyway, as it is easy to destroy the whole
  LFS system with badly formed commands.</para>

</sect1>
  <sect1 id="ch-tools-changingowner">
  <?dbhtml filename="changingowner.html"?>

  <title>Changing Ownership</title>

  <note>
    <para>The commands in the remainder of this book must be performed while
    logged in as user <systemitem class="username" moreinfo="none">root</systemitem> and no
    longer as user <systemitem class="username" moreinfo="none">lfs</systemitem>. Also, double
    check that <envar>$LFS</envar> is set in <systemitem class="username" moreinfo="none">root</systemitem>'s environment.</para>
  </note>

  <para>Currently, the whole directory hierarchy in <filename class="directory" moreinfo="none">$LFS</filename>
  is owned by the user <systemitem class="username" moreinfo="none">lfs</systemitem>, a user
  that exists only on the host system. If the directories and files under <filename class="directory" moreinfo="none">$LFS</filename> are kept as they are, they will be
  owned by a user ID without a corresponding account. This is dangerous because
  a user account created later could get this same user ID and would own all
  the files under <filename class="directory" moreinfo="none">$LFS</filename>, thus exposing
  these files to possible malicious manipulation.</para>

  <para>To address this issue, change the
  ownership of the <filename class="directory" moreinfo="none">$LFS/*</filename> directories to
  user <systemitem class="username" moreinfo="none">root</systemitem> by running the following
  command:</para>

<screen format="linespecific"><userinput moreinfo="none">chown -R root:root $LFS/{usr,lib,var,etc,bin,sbin,tools}
case $(uname -m) in
  x86_64) chown -R root:root $LFS/lib64 ;;
esac</userinput></screen>

</sect1>
  <sect1 id="ch-tools-kernfs">
  <?dbhtml filename="kernfs.html"?>

  <title>Preparing Virtual Kernel File Systems</title>

  <indexterm zone="ch-tools-kernfs" significance="normal">
    <primary sortas="e-/dev/">/dev/*</primary>
  </indexterm>

    <para>Various file systems exported by the kernel are used to communicate to
    and from the kernel itself. These file systems are virtual in that no disk
    space is used for them. The content of the file systems resides in
    memory.</para>

    <para>Begin by creating directories onto which the file systems will be
    mounted:</para>

<screen format="linespecific"><userinput moreinfo="none">mkdir -pv $LFS/{dev,proc,sys,run}</userinput></screen>

  <sect2>
    <title>Creating Initial Device Nodes</title>

    <para>When the kernel boots the system, it requires the presence of a few
    device nodes, in particular the <filename class="devicefile" moreinfo="none">console</filename> and <filename class="devicefile" moreinfo="none">null</filename> devices. The device nodes must be
    created on the hard disk so that they are available before the kernel
    populates <systemitem class="filesystem" moreinfo="none">/dev</systemitem>), and
    additionally when Linux is started with
    <parameter moreinfo="none">init=/bin/bash</parameter>. Create the devices by running the
    following commands:</para>

<screen format="linespecific"><userinput moreinfo="none">mknod -m 600 $LFS/dev/console c 5 1
mknod -m 666 $LFS/dev/null c 1 3</userinput></screen>

  </sect2>

  <sect2 id="ch-tools-bindmount">
    <title>Mounting and Populating /dev</title>

      <para>The recommended method of populating the <filename class="directory" moreinfo="none">/dev</filename> directory with devices is to mount a
      virtual filesystem (such as <systemitem class="filesystem" moreinfo="none">tmpfs</systemitem>) on the <filename class="directory" moreinfo="none">/dev</filename> directory, and allow the devices to be
      created dynamically on that virtual filesystem as they are detected or
      accessed. Device creation is generally done during the boot process
      by Udev. Since this new system does not yet have Udev and has not yet
      been booted, it is necessary to mount and populate <filename class="directory" moreinfo="none">/dev</filename> manually. This is accomplished by bind
      mounting the host system's <filename class="directory" moreinfo="none">/dev</filename>
      directory. A bind mount is a special type of mount that allows you to
      create a mirror of a directory or mount point to some other location. Use
      the following command to achieve this:</para>

<screen format="linespecific"><userinput moreinfo="none">mount -v --bind /dev $LFS/dev</userinput></screen>

  </sect2>

  <sect2 id="ch-tools-kernfsmount">
    <title>Mounting Virtual Kernel File Systems</title>

      <para>Now mount the remaining virtual kernel filesystems:</para>

<screen format="linespecific"><userinput moreinfo="none">mount -v --bind /dev/pts $LFS/dev/pts
mount -vt proc proc $LFS/proc
mount -vt sysfs sysfs $LFS/sys
mount -vt tmpfs tmpfs $LFS/run</userinput></screen>
<!--
    <variablelist>
      <title>The meaning of the mount options for devpts:</title>

      <varlistentry>
        <term><parameter>gid=5</parameter></term>
        <listitem>
          <para>This ensures that all devpts-created device nodes are owned by
          group ID 5.  This is the ID we will use later on for the <systemitem
          class="groupname">tty</systemitem> group.  We use the group ID instead
          of a name, since the host system might use a different ID for its
          <systemitem class="groupname">tty</systemitem> group.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>mode=0620</parameter></term>
        <listitem>
          <para>This ensures that all devpts-created device nodes have mode 0620
          (user readable and writable, group writable).  Together with the
          option above, this ensures that devpts will create device nodes that
          meet the requirements of grantpt(), meaning the Glibc
          <command>pt_chown</command> helper binary (which is not installed by
          default) is not necessary.</para>
        </listitem>
      </varlistentry>

    </variablelist>
-->
      <para>In some host systems, <filename moreinfo="none">/dev/shm</filename> is a
      symbolic link to <filename class="directory" moreinfo="none">/run/shm</filename>.
      The /run tmpfs was mounted above so in this case only a 
      directory needs to be created.</para>

<screen format="linespecific"><userinput moreinfo="none">if [ -h $LFS/dev/shm ]; then
  mkdir -pv $LFS/$(readlink $LFS/dev/shm)
fi</userinput></screen>

  </sect2>

</sect1>
  <sect1 id="ch-tools-chroot">
  <?dbhtml filename="chroot.html"?>

  <title>Entering the Chroot Environment</title>

  <para>Now that all the packages which are required to build the rest of the
  needed tools are on the system, it is time to enter the chroot environment to
  finish installing the remaining temporary tools. This environment will be in
  use also for installing the final system. As user <systemitem class="username" moreinfo="none">root</systemitem>, run the following command to enter the
  environment that is, at the moment, populated with only the temporary
  tools:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">chroot "$LFS" /usr/bin/env -i   \
    HOME=/root                  \
    TERM="$TERM"                \
    PS1='(lfs chroot) \u:\w\$ ' \
    PATH=/usr/bin:/usr/sbin     \
    /bin/bash --login +h</userinput></screen>

  <para>The <parameter moreinfo="none">-i</parameter> option given to the <command moreinfo="none">env</command>
  command will clear all variables of the chroot environment. After that, only
  the <envar>HOME</envar>, <envar>TERM</envar>, <envar>PS1</envar>, and
  <envar>PATH</envar> variables are set again. The
  <parameter moreinfo="none">TERM=$TERM</parameter> construct will set the <envar>TERM</envar>
  variable inside chroot to the same value as outside chroot. This variable is
  needed for programs like <command moreinfo="none">vim</command> and <command moreinfo="none">less</command>
  to operate properly.  If other variables are desired, such as
  <envar>CFLAGS</envar> or <envar>CXXFLAGS</envar>, this is a good place to set
  them again.</para>

  <para>From this point on, there is no need to use the
  <envar>LFS</envar> variable anymore because all work will be restricted
  to the LFS file system.  This is because the Bash shell is told that
  <filename class="directory" moreinfo="none">$LFS</filename> is now the root
  (<filename class="directory" moreinfo="none">/</filename>) directory.</para>

  <para>Notice that <filename class="directory" moreinfo="none">/tools/bin</filename> is not
  in the <envar>PATH</envar>. This means that the cross toolchain will no longer be
  used in the chroot environment. This occurs when the shell does not
  <quote>remember</quote> the locations of executed binariesâfor this
  reason, hashing is switched off by passing the <parameter moreinfo="none">+h</parameter> option
  to <command moreinfo="none">bash</command>.</para>

  <para>Note that the <command moreinfo="none">bash</command> prompt will say
  <computeroutput moreinfo="none">I have no name!</computeroutput> This is normal because the
  <filename moreinfo="none">/etc/passwd</filename> file has not been created yet.</para>

  <note>
    <para>It is important that all the commands throughout the remainder of this
    chapter and the following chapters are run from within the chroot
    environment. If you leave this environment for any reason (rebooting for
    example), ensure that the virtual kernel filesystems are mounted as
    explained in <xref linkend="ch-tools-bindmount"/> and <xref linkend="ch-tools-kernfsmount"/> and enter chroot again before continuing
    with the installation.</para>
  </note>

</sect1>
  <sect1 id="ch-tools-creatingdirs">
  <?dbhtml filename="creatingdirs.html"?>

  <title>Creating Directories</title>

  <para>It is time to create the full structure in the LFS file system.</para>

  <para>Create some root-level directories that are not in the limited set
    required in the previous chapters by issuing the following command:</para>

  <note><para>Some of the directories below have already been created earlier
  with explicit instructions or when installing some packages.  They are
  repeated below for completeness.</para></note>

<screen format="linespecific"><userinput moreinfo="none">mkdir -pv /{boot,home,mnt,opt,srv}</userinput></screen>

  <para>Create the required set of subdirectories below the root-level by
    issuing the following commands:</para>

<screen format="linespecific"><userinput moreinfo="none">mkdir -pv /etc/{opt,sysconfig}
mkdir -pv /lib/firmware
mkdir -pv /media/{floppy,cdrom}
mkdir -pv /usr/{,local/}{include,src}
mkdir -pv /usr/local/{bin,lib,sbin}
mkdir -pv /usr/{,local/}share/{color,dict,doc,info,locale,man}
mkdir -pv /usr/{,local/}share/{misc,terminfo,zoneinfo}
mkdir -pv /usr/{,local/}share/man/man{1..8}
mkdir -pv /var/{cache,local,log,mail,opt,spool}
mkdir -pv /var/lib/{color,misc,locate}

ln -sfv /run /var/run
ln -sfv /run/lock /var/lock

install -dv -m 0750 /root
install -dv -m 1777 /tmp /var/tmp</userinput></screen>

  <para>Directories are, by default, created with permission mode 755, but
  this is not desirable for all directories. In the commands above, two
  changes are madeâone to the home directory of user <systemitem class="username" moreinfo="none">root</systemitem>, and another to the directories for
  temporary files.</para>

  <para>The first mode change ensures that not just anybody can enter
  the <filename class="directory" moreinfo="none">/root</filename> directoryâthe
  same as a normal user would do with his or her home directory. The
  second mode change makes sure that any user can write to the
  <filename class="directory" moreinfo="none">/tmp</filename> and <filename class="directory" moreinfo="none">/var/tmp</filename> directories, but cannot remove
  another user's files from them. The latter is prohibited by the so-called
  <quote>sticky bit,</quote> the highest bit (1) in the 1777 bit mask.</para>

  <sect2>
    <title>FHS Compliance Note</title>

    <para>The directory tree is based on the Filesystem Hierarchy Standard
    (FHS) (available at <ulink url="https://refspecs.linuxfoundation.org/fhs.shtml"/>).  The FHS also specifies
    the optional existence of some directories such as <filename class="directory" moreinfo="none">/usr/local/games</filename> and <filename class="directory" moreinfo="none">/usr/share/games</filename>.  We create only the
    directories that are needed. However, feel free to create these
    directories.  </para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-createfiles">
  <?dbhtml filename="createfiles.html"?>

  <title>Creating Essential Files and Symlinks</title>

  <indexterm zone="ch-tools-createfiles" significance="normal">
    <primary sortas="e-/etc/passwd">/etc/passwd</primary>
  </indexterm>

  <indexterm zone="ch-tools-createfiles" significance="normal">
    <primary sortas="e-/etc/group">/etc/group</primary>
  </indexterm>

  <indexterm zone="ch-tools-createfiles" significance="normal">
    <primary sortas="e-/run/utmp">/run/utmp</primary>
  </indexterm>

  <indexterm zone="ch-tools-createfiles" significance="normal">
    <primary sortas="e-/var/log/btmp">/var/log/btmp</primary>
  </indexterm>

  <indexterm zone="ch-tools-createfiles" significance="normal">
    <primary sortas="e-/var/log/lastlog">/var/log/lastlog</primary>
  </indexterm>

  <indexterm zone="ch-tools-createfiles" significance="normal">
    <primary sortas="e-/var/log/wtmp">/var/log/wtmp</primary>
  </indexterm>

  <para>Historically, Linux maintains a list of the mounted file systems in the
  file <filename moreinfo="none">/etc/mtab</filename>. Modern kernels maintain this list
  internally and exposes it to the user via the <filename class="directory" moreinfo="none">/proc</filename> filesystem. To satisfy utilities that
  expect the presence of <filename moreinfo="none">/etc/mtab</filename>, create the following
  symbolic link:</para>

<screen format="linespecific"><userinput moreinfo="none">ln -sv /proc/self/mounts /etc/mtab</userinput></screen>

  <para>Create a basic <filename moreinfo="none">/etc/hosts</filename> file to be
  referenced in some test suites, and in one of Perl's configuration files
  as well:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/hosts &lt;&lt; EOF
127.0.0.1  localhost $(hostname)
::1        localhost
EOF</userinput></screen>

  <para>In order for user <systemitem class="username" moreinfo="none">root</systemitem> to be
  able to login and for the name <quote>root</quote> to be recognized, there
  must be relevant entries in the <filename moreinfo="none">/etc/passwd</filename> and
  <filename moreinfo="none">/etc/group</filename> files.</para>

  <para>Create the <filename moreinfo="none">/etc/passwd</filename> file by running the following
  command:</para>

<screen revision="sysv" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/passwd &lt;&lt; "EOF"
<literal moreinfo="none">root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/bin/false
daemon:x:6:6:Daemon User:/dev/null:/bin/false
messagebus:x:18:18:D-Bus Message Daemon User:/run/dbus:/bin/false
uuidd:x:80:80:UUID Generation Daemon User:/dev/null:/bin/false
nobody:x:99:99:Unprivileged User:/dev/null:/bin/false</literal>
EOF</userinput></screen>



  <para>The actual password for <systemitem class="username" moreinfo="none">root</systemitem>
  will be set later.</para>

  <para>Create the <filename moreinfo="none">/etc/group</filename> file by running the following
  command:</para>

<screen revision="sysv" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/group &lt;&lt; "EOF"
<literal moreinfo="none">root:x:0:
bin:x:1:daemon
sys:x:2:
kmem:x:3:
tape:x:4:
tty:x:5:
daemon:x:6:
floppy:x:7:
disk:x:8:
lp:x:9:
dialout:x:10:
audio:x:11:
video:x:12:
utmp:x:13:
usb:x:14:
cdrom:x:15:
adm:x:16:
messagebus:x:18:
input:x:24:
mail:x:34:
kvm:x:61:
uuidd:x:80:
wheel:x:97:
nogroup:x:99:
users:x:999:</literal>
EOF</userinput></screen>



  <para>The created groups are not part of any standardâthey are groups
  decided on in part by the requirements of the Udev configuration in Chapter
  9, and in part by common convention employed by a number of existing Linux
  distributions. In addition, some test suites rely on specific users or
  groups.  The Linux Standard Base (LSB, available at <ulink url="http://refspecs.linuxfoundation.org/lsb.shtml"/>) only recommends that,
  besides the group <systemitem class="groupname" moreinfo="none">root</systemitem> with a
  Group ID (GID) of 0, a group <systemitem class="groupname" moreinfo="none">bin</systemitem>
  with a GID of 1 be present. All other group names and GIDs can be chosen
  freely by the system administrator since well-written programs do not depend
  on GID numbers, but rather use the group's name.</para>

  <para>Some tests in <xref linkend="chapter-building-system"/> need a regular
  user. We add this user here and delete this account at the end of that
  chapter.</para>

<screen format="linespecific"><userinput moreinfo="none">echo "tester:x:101:101::/home/tester:/bin/bash" &gt;&gt; /etc/passwd
echo "tester:x:101:" &gt;&gt; /etc/group
install -o tester -d /home/tester</userinput></screen>

  <para>To remove the <quote>I have no name!</quote> prompt, start a new
  shell. Since the
  <filename moreinfo="none">/etc/passwd</filename> and <filename moreinfo="none">/etc/group</filename>
  files have been created, user name and group name resolution will now
  work:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">exec /bin/bash --login +h</userinput></screen>

  <para>Note the use of the <parameter moreinfo="none">+h</parameter> directive. This tells
  <command moreinfo="none">bash</command> not to use its internal path hashing. Without this
  directive, <command moreinfo="none">bash</command> would remember the paths to binaries it has
  executed. To ensure the use of the newly compiled binaries as soon as they are
  installed, the <parameter moreinfo="none">+h</parameter> directive will be used for the duration
  of this and the next chapter.</para>

  <para>The <command moreinfo="none">login</command>, <command moreinfo="none">agetty</command>, and
  <command moreinfo="none">init</command> programs (and others) use a number of log
  files to record information such as who was logged into the system and
  when. However, these programs will not write to the log files if they
  do not already exist. Initialize the log files and give them
  proper permissions:</para>

<screen format="linespecific"><userinput moreinfo="none">touch /var/log/{btmp,lastlog,faillog,wtmp}
chgrp -v utmp /var/log/lastlog
chmod -v 664  /var/log/lastlog
chmod -v 600  /var/log/btmp</userinput></screen>

  <para>The <filename moreinfo="none">/var/log/wtmp</filename> file records all logins and
  logouts. The <filename moreinfo="none">/var/log/lastlog</filename> file records when each
  user last logged in. The <filename moreinfo="none">/var/log/faillog</filename> file records
  failed login attempts.  The <filename moreinfo="none">/var/log/btmp</filename> file records
  the bad login attempts.</para>

  <note><para>The <filename moreinfo="none">/run/utmp</filename> file records the users that
  are currently logged in.  This file is created dynamically in the boot
  scripts.</para></note>

</sect1>
  <sect1 id="ch-tools-libstdcpp-pass2" role="wrap">
  <?dbhtml filename="gcc-libstdc++-pass2.html"?>

  <sect1info condition="script">
    <productname class="trade">gcc-libstdc++</productname>
    <productnumber>11.2.0</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gcc/gcc-11.2.0/gcc-11.2.0.tar.xz</address>
  </sect1info>

  <title>Libstdc++ from GCC-11.2.0, Pass 2</title>

  <indexterm zone="ch-tools-libstdcpp-pass2" significance="normal">
    <primary sortas="a-GCC">GCC</primary>
    <secondary>tools, libstdc++ pass 2</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>When building <xref linkend="ch-tools-gcc-pass2"/> we had to defer
    the installation of the C++ standard library because no suitable compiler
    was available to compile it. We could not use the compiler built in that
    section because it is a native compiler and should not be used outside of
    chroot and risks polluting the libraries with some host components.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.8 SBU</seg>
        <seg>1.1 GB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Target Libstdc++</title>

    <note>
      <para><application moreinfo="none">Libstdc++</application> is part of the GCC sources.
      You should first unpack the GCC tarball and change to the
      <filename moreinfo="none">gcc-11.2.0</filename> directory.</para>
    </note>

    <para>Create a link which exists when building libstdc++ in the gcc tree:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">ln -s gthr-posix.h libgcc/gthr-default.h</userinput></screen>

    <para>Create a separate build directory for libstdc++ and enter it:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare libstdc++ for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../libstdc++-v3/configure            \
    CXXFLAGS="-g -O2 -D_GNU_SOURCE"  \
    --prefix=/usr                    \
    --disable-multilib               \
    --disable-nls                    \
    --host=$(uname -m)-lfs-linux-gnu \
    --disable-libstdcxx-pch</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">CXXFLAGS="-g -O2 -D_GNU_SOURCE"</parameter></term>
        <listitem>
          <para>These flags are passed by the top level Makefile when doing
          a full build of GCC.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--host=$(uname -m)-lfs-linux-gnu</parameter></term>
        <listitem>
          <para>We have to mimic what would happen if this package were built
          as part of a full compiler build. This switch would be passed to
          configure by GCC's build machinery.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-libstdcxx-pch</parameter></term>
        <listitem>
          <para>This switch prevents the installation of precompiled
          include files, which are not needed at this stage.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile libstdc++ by running:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the library:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in <xref linkend="contents-gcc" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-gettext" role="wrap">
  <?dbhtml filename="gettext.html"?>

  <sect1info condition="script">
    <productname class="trade">gettext</productname>
    <productnumber>0.21</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gettext/gettext-0.21.tar.xz</address>
  </sect1info>

  <title>Gettext-0.21</title>

  <indexterm zone="ch-tools-gettext" significance="normal">
    <primary sortas="a-Gettext">Gettext</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/gettext.xml">The Gettext package contains utilities for internationalization and
    localization. These allow programs to be compiled with NLS (Native Language
    Support), enabling them to output messages in the user's native
    language.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.8 SBU</seg>
        <seg>280 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Gettext</title>

    <para>For our temporary set of tools, we only need to install
    three programs from Gettext.</para>

    <para>Prepare Gettext for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --disable-shared</userinput></screen>

    <variablelist>
      <title>The meaning of the configure option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-shared</parameter></term>
        <listitem>
          <para>We do not need to install any of the shared Gettext libraries at
          this time, therefore there is no need to build them.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the <command moreinfo="none">msgfmt</command>, <command moreinfo="none">msgmerge</command>, and
    <command moreinfo="none">xgettext</command> programs:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">cp -v gettext-tools/src/{msgfmt,msgmerge,xgettext} /usr/bin</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in <xref linkend="contents-gettext" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-bison" role="wrap">
  <?dbhtml filename="bison.html"?>

  <sect1info condition="script">
    <productname class="trade">bison</productname>
    <productnumber>3.7.6</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/bison/bison-3.7.6.tar.xz</address>
  </sect1info>

  <title>Bison-3.7.6</title>

  <indexterm zone="ch-tools-bison" significance="normal">
    <primary sortas="a-Bison">Bison</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/bison.xml">The Bison package contains a parser generator.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.3 SBU</seg>
        <seg>50 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Bison</title>

    <para>Prepare Bison for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr \
            --docdir=/usr/share/doc/bison-3.7.6</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--docdir=/usr/share/doc/bison-3.7.6</parameter></term>
        <listitem>
          <para>This tells the build system to install bison documentation
          into a versioned directory.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in
    <xref linkend="contents-bison" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-perl" role="wrap">
  <?dbhtml filename="perl.html"?>

  <sect1info condition="script">
    <productname class="trade">perl</productname>
    <productnumber>5.34.0</productnumber>
    <address format="linespecific">https://www.cpan.org/src/5.0/perl-5.34.0.tar.xz</address>
  </sect1info>

  <title>Perl-5.34.0</title>

  <indexterm zone="ch-tools-perl" significance="normal">
    <primary sortas="a-Perl">Perl</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/perl.xml">The Perl package contains the Practical Extraction and Report
    Language.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.7 SBU</seg>
        <seg>272 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Perl</title>

    <para>Prepare Perl for compilation:</para>

    <screen format="linespecific"><userinput remap="configure" moreinfo="none">sh Configure -des                                        \
             -Dprefix=/usr                               \
             -Dvendorprefix=/usr                         \
             -Dprivlib=/usr/lib/perl5/5.34/core_perl     \
             -Darchlib=/usr/lib/perl5/5.34/core_perl     \
             -Dsitelib=/usr/lib/perl5/5.34/site_perl     \
             -Dsitearch=/usr/lib/perl5/5.34/site_perl    \
             -Dvendorlib=/usr/lib/perl5/5.34/vendor_perl \
             -Dvendorarch=/usr/lib/perl5/5.34/vendor_perl</userinput></screen>

    <variablelist>
      <title>The meaning of the new Configure options:</title>
      <varlistentry>
        <term><parameter moreinfo="none">-des</parameter></term>
        <listitem>
          <para>This is a combination of three options: -d uses defaults for 
          all items; -e ensures completion of all tasks; -s silences
          non-essential output.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in <xref linkend="contents-perl" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-Python" role="wrap">
  <?dbhtml filename="Python.html"?>

  <sect1info condition="script">
    <productname class="trade">Python</productname>
    <productnumber>3.9.6</productnumber>
    <address format="linespecific">https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz</address>
  </sect1info>

  <title>Python-3.9.6</title>

  <indexterm zone="ch-tools-Python" significance="normal">
    <primary sortas="a-Python">Python</primary>
    <secondary>temporary</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/python.xml">The Python 3 package contains the Python development environment. It
    is useful for object-oriented programming, writing scripts, prototyping
    large programs, or developing entire applications.</para>

    <segmentedlist>
    <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.2 SBU</seg>
        <seg>347 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Python</title>

    <note>
      <para>There are two package files whose name starts with
      <quote>python</quote>. The one to extract from is
      <filename moreinfo="none">Python-3.9.6.tar.xz</filename> (notice the
      uppercase first letter).</para>
    </note>

    <para>Prepare Python for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr   \
            --enable-shared \
            --without-ensurepip</userinput></screen>

    <variablelist>
      <title>The meaning of the configure option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-shared</parameter></term>
        <listitem>
          <para>This switch prevents installation of static libraries.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--without-ensurepip</parameter></term>
        <listitem>
          <para>This switch disables the Python package installer, which is not
          needed at this stage.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <note>
      <para>
        Some Python 3 modules can't be built now because the dependencies
        are not installed yet. The building system still attempts to build
        them however, so the compilation of some files will fail and the
        compiler message may seem to indicate <quote>fatal error</quote>.
        The message should be ignored.  Just make sure the toplevel
        <command moreinfo="none">make</command> command has not failed.  The optional
        modules are not needed now and they will be built in
        <xref linkend="chapter-building-system"/>.
      </para>
    </note>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in <xref linkend="contents-python" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-texinfo" role="wrap">
  <?dbhtml filename="texinfo.html"?>

  <sect1info condition="script">
    <productname class="trade">texinfo</productname>
    <productnumber>6.8</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/texinfo/texinfo-6.8.tar.xz</address>
  </sect1info>

  <title>Texinfo-6.8</title>

  <indexterm zone="ch-tools-texinfo" significance="normal">
    <primary sortas="a-Texinfo">Texinfo</primary>
    <secondary>temporary</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para xml:base="../chapter08/texinfo.xml">The Texinfo package contains programs for reading, writing, and
    converting info pages.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.3 SBU</seg>
        <seg>109 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Texinfo</title>

    <para>First, fix an issue building the package with Glibc-2.34 or later:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -e 's/__attribute_nonnull__/__nonnull/' \
    -i gnulib/lib/malloc/dynarray-skeleton.c</userinput></screen>

    <para>Prepare Texinfo for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in <xref linkend="contents-texinfo" role="."/></para>

  </sect2>

</sect1>
  <sect1 id="ch-tools-util-linux" role="wrap">
  <?dbhtml filename="util-linux.html"?>

  <sect1info condition="script">
    <productname class="trade">util-linux</productname>
    <productnumber>2.37.2</productnumber>
    <address format="linespecific">https://www.kernel.org/pub/linux/utils/util-linux/v2.37/util-linux-2.37.2.tar.xz</address>
  </sect1info>

  <title>Util-linux-2.37.2</title>

  <indexterm zone="ch-tools-util-linux" significance="normal">
    <primary sortas="a-Util-linux">Util-linux</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Util-linux package contains miscellaneous utility programs.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.7 SBU</seg>
        <seg>128 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Util-linux</title>

    <para>The FHS recommends using the <filename class="directory" moreinfo="none">/var/lib/hwclock</filename> directory instead of the
    usual <filename class="directory" moreinfo="none">/etc</filename> directory as the
    location for the <filename moreinfo="none">adjtime</filename> file. Create this directory
    with:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -pv /var/lib/hwclock</userinput></screen>

    <para>Prepare Util-linux for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure ADJTIME_PATH=/var/lib/hwclock/adjtime    \
            --libdir=/usr/lib    \
            --docdir=/usr/share/doc/util-linux-2.37.2 \
            --disable-chfn-chsh  \
            --disable-login      \
            --disable-nologin    \
            --disable-su         \
            --disable-setpriv    \
            --disable-runuser    \
            --disable-pylibmount \
            --disable-static     \
            --without-python     \
            runstatedir=/run</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">ADJTIME_PATH=/var/lib/hwclock/adjtime</parameter></term>
        <listitem>
          <para>This sets the location of the file recording information about
          the hardware clock in accordance to the FHS. This is not stricly
          needed for this temporary tool, but it prevents creating a file
          at another location, which would not be overwritten or removed
          when building the final util-linux package.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--libdir=/usr/lib</parameter></term>
        <listitem>
          <para>This switch ensures the
          <filename class="extension" moreinfo="none">.so</filename> symlinks targeting
          the shared library file in the same directory
          (<filename class="directory" moreinfo="none">/usr/lib</filename>) directly.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-*</parameter></term>
        <listitem>
          <para>These switches prevent warnings about building components
          that require packages not in LFS or not installed yet.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--without-python</parameter></term>
        <listitem>
          <para>This switch disables using <application moreinfo="none">Python</application>.
          It avoids trying to build unneeded bindings.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">runstatedir=/run</parameter></term>
        <listitem>
          <para>This switch sets the location of the socket used by
          <command moreinfo="none">uuidd</command> and
          <filename class="libraryfile" moreinfo="none">libuuid</filename> correctly.</para>
        </listitem>
      </varlistentry>

     </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Details on this package are located in <xref linkend="contents-utillinux" role="."/></para>

  </sect2>

</sect1>
  
<!--
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="tcl.xml"/>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="expect.xml"/>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="dejagnu.xml"/>
-->

  <sect1 id="ch-tools-cleanup">
  <?dbhtml filename="cleanup.html"?>

  <title>Cleaning up and Saving the Temporary System</title>
  
  <sect2>
    <title>Cleaning</title>

    <para>First, remove the currently installed documentation to prevent them
    from ending up in the final system, and to save about 35 MB:</para>

<screen format="linespecific"><userinput moreinfo="none">rm -rf /usr/share/{info,man,doc}/*</userinput></screen>

    <para>Second, the libtool .la files are only useful when linking with static
    libraries. They are unneeded and potentially harmful when using dynamic
    shared libraries, specially when using non-autotools build systems.
    While still in chroot, remove those files now:</para>

<screen format="linespecific"><userinput moreinfo="none">find /usr/{lib,libexec} -name \*.la -delete</userinput></screen>

    <para>
      The current system size is now about 3 GB, however 
      the /tools directory is no longer needed. It uses about
      1 GB of disk space.  Delete it now:
    </para>

<screen format="linespecific"><userinput moreinfo="none">rm -rf /tools</userinput></screen>
  </sect2>

  <sect2>
    <title>Backup</title>

    <note><para>
      All the remaining steps in this section are optional. Nevertheless,
      as soon as you begin installing packages in <xref linkend="chapter-building-system"/>, the temporary files will be
      overwritten. So it may be a good idea to do a backup of the current
      system as described below. 
    </para></note>
  
    <para>
      The following steps are performed from outside the chroot
      environment. That means, you have to leave the chroot environment
      first before continuing. The reason for that is to
      get access to file system locations outside of the chroot
      environment to store/read the backup archive which should
      not be placed within the
      <filename class="directory" moreinfo="none">$LFS</filename> hierarchy for
      safety reasons.
    </para>

    <important>
      <para>All of the following instructions are executed by
        <systemitem class="username" moreinfo="none">root</systemitem>. Take extra
        care about the commands you're going to run as mistakes
        here can modify your host system. Be aware that the
        environment variable <envar>LFS</envar> 
        is set for user <systemitem class="username" moreinfo="none">lfs</systemitem> by default 
        but may <emphasis>not</emphasis> be set for 
        <systemitem class="username" moreinfo="none">root</systemitem>. Whenever 
        commands are to be executed by <systemitem class="username" moreinfo="none">root</systemitem>, 
        make sure you have set <envar>LFS</envar>.
        This has been discussed in <xref linkend="ch-partitioning-aboutlfs"/>.
      </para>
    </important>

    <para>
       Now, if you are making a backup, leave the chroot environment:
    </para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">exit</userinput></screen>

    <para>
      At this point the essential programs and libraries have been created
      and your current system is in a good state. Your system can now be
      backed up for later reuse. In case of fatal failures in the subsequent
      chapters, it often turns out that removing everything and starting over
      (more carefully) is the best option to recover. Unfortunately, all the
      temporary files will be removed, too. To avoid spending extra time to
      redo something which has been built successfully, prepare a backup.
    </para>

    <para>
      Make sure you have at least 1 GB free disk space (the source tarballs
      will be included in the backup archive) in the home directory of user 
      <systemitem class="username" moreinfo="none">root</systemitem>.
    </para>

    <para>Before we make a backup, unmount the virtual file systems:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">umount $LFS/dev{/pts,}
umount $LFS/{sys,proc,run}</userinput></screen>

    <para>
      Create the backup archive by running the following command:
    </para>

    <note>
       <para>
          Because the backup archive is compressed, it takes a relatively
          long time (over 10 minutes) even on a resonably fast system.
       </para>
       
       <para>
          Also, ensure the <envar>LFS</envar> environment variable is set 
          for the root user.
       </para>
    </note>

<screen role="nodump" revision="sysv" format="linespecific"><userinput moreinfo="none">cd $LFS 
tar -cJpf $HOME/lfs-temp-tools-11.0.tar.xz .</userinput></screen>



    <para>
      Replace <envar>$HOME</envar> by a directory of your choice if you
      do not want to have the backup stored in <systemitem class="username" moreinfo="none">root</systemitem>'s home directory.
    </para>
  </sect2>

  <sect2>
    <title>Restore</title>

    <para>
      In case some mistakes have been made and you need to start over, you can
      use this backup to restore the system and save some recovery time.
      Since the sources are located under 
      <filename class="directory" moreinfo="none">$LFS</filename>, they are included in the
      backup archive as well, so they do not need to be downloaded again. After
      checking that <envar>$LFS</envar> is set properly,
      restore the backup by executing the following commands:
    </para>

<!-- Make the following look different so users don't blindly run the
     restore when they don't need to. -->

    <warning><para>The following commands are extremly dangerous.  If
    you run <command moreinfo="none">rm -rf ./*</command> as the root user and you 
    do not change to the $LFS directory or the <envar>LFS</envar> 
    environment variable is not set for the root user, it will destroy 
    your entire host system.  YOU ARE WARNED.</para></warning>

<screen role="nodump" revision="sysv" format="linespecific"><computeroutput moreinfo="none">cd $LFS 
rm -rf ./* 
tar -xpf $HOME/lfs-temp-tools-11.0.tar.xz</computeroutput></screen>



    <para>
       Again, double check that the environment has been setup properly
       and continue building the rest of the system.
    </para>

    <important>
      <para>
         If you left the chroot environment to create a backup or restart
         building using a restore, remember to check that the virtual
         filesystems are still mounted (<command moreinfo="none">findmnt | grep
         $LFS</command>).  If they are not mounted, remount them now as
         described in <xref linkend="ch-tools-kernfs"/> and re-enter the chroot
         environment (see <xref linkend="ch-tools-chroot"/>) before continuing.
       </para>
    </important>
    
  </sect2>

</sect1>

</chapter>
</part>

<part id="part4">
<title>Building the LFS System</title>
<?dbhtml filename="part4.html"?>
<chapter id="chapter-building-system" xreflabel="Chapter&#xA0;8" xml:base="chapter08/chapter08.xml">
  <?dbhtml dir="chapter08"?>
  <?dbhtml filename="chapter08.html"?>

  <title>Installing Basic System Software</title>

  <sect1 id="ch-system-introduction">
  <?dbhtml filename="introduction.html"?>

  <title>Introduction</title>

  <para>In this chapter, we start constructing the LFS system in earnest.
  </para>

  <para>The installation of this software is straightforward. Although in many
  cases the installation instructions could be made shorter and more generic,
  we have opted to provide the full instructions for every package to minimize
  the possibilities for mistakes.  The key to learning what makes a Linux system
  work is to know what each package is used for and why you (or the system)
  may need it.</para>

  <para>We do not recommend using optimizations.  They can make
  a program run slightly faster, but they may also cause compilation
  difficulties and problems when running the program.  If a package refuses to
  compile when using optimization, try to compile it without optimization and
  see if that fixes the problem. Even if the package does compile when using
  optimization, there is the risk it may have been compiled incorrectly because
  of the complex interactions between the code and build tools.  Also note that
  the <option>-march</option> and <option>-mtune</option> options using values
  not specified in the book have not been tested. This may cause problems with
  the toolchain packages (Binutils, GCC and Glibc).  The small potential gains
  achieved in using compiler optimizations are often outweighed by the risks.
  First-time builders of LFS are encouraged to build without custom
  optimizations. The subsequent system will still run very fast and be stable
  at the same time.</para>

  <para>Before the installation instructions, each installation page provides
  information about the package, including a concise description of what it
  contains, approximately how long it will take to build, and how much disk
  space is required during this building process. Following the installation
  instructions, there is a list of programs and libraries (along with brief
  descriptions) that the package installs.</para>

  <note><para>The SBU values and required disk space includes test suite data
  for all applicable packages in <xref linkend="chapter-building-system"/>. SBU
  values have been calculated using a single CPU core (-j1) for all
  operations.</para></note>

  <sect2>
    <title>About libraries</title>

    <para>In general, the LFS editors discourage building and installing static
    libraries.  The original purpose for most static libraries has been made
    obsolete in a modern Linux system.  In addition, linking a static library
    into a program can be detrimental.  If an update to the library is needed
    to remove a security problem, all programs that use the static library will
    need to be relinked to the new library.  Since the use of static libraries
    is not always obvious, the relevant programs (and the procedures needed to
    do the linking) may not even be known.</para>

    <para>In the procedures in this chapter, we remove or disable installation of
    most static libraries. Usually this is done by passing a
    <option>--disable-static</option> option to <command moreinfo="none">configure</command>.
    In other cases, alternate means are needed. In a few cases, especially
    glibc and gcc, the use of static libraries remains essential to the general
    package building process. </para>

    <para>For a more complete discussion of libraries, see the discussion
    <ulink url="https://www.linuxfromscratch.org/blfs//view/11.0/introduction/libraries.html">
    Libraries: Static or shared?</ulink> in the BLFS book.</para>

  </sect2>

</sect1>
  <sect1 id="ch-system-pkgmgt">
  <?dbhtml filename="pkgmgt.html"?>

  <title>Package Management</title>

  <para>Package Management is an often requested addition to the LFS Book. A
  Package Manager allows tracking the installation of files making it easy to
  remove and upgrade packages. As well as the binary and library files, a
  package manager will handle the installation of configuration files.  Before
  you begin to wonder, NOâthis section will not talk about nor recommend
  any particular package manager. What it provides is a roundup of the more
  popular techniques and how they work. The perfect package manager for you may
  be among these techniques or may be a combination of two or more of these
  techniques. This section briefly mentions issues that may arise when upgrading
  packages.</para>

  <para>Some reasons why no package manager is mentioned in LFS or BLFS
  include:</para>

  <itemizedlist>
    <listitem>
      <para>Dealing with package management takes the focus away from the goals
      of these booksâteaching how a Linux system is built.</para>
    </listitem>

    <listitem>
      <para>There are multiple solutions for package management, each having
      its strengths and drawbacks.  Including one that satisfies all audiences
      is difficult.</para>
    </listitem>
  </itemizedlist>

  <para>There are some hints written on the topic of package management. Visit
  the <ulink url="https://www.linuxfromscratch.org/hints/downloads/files/">Hints Project</ulink> and see if one of them
  fits your need.</para>

  <sect2 id="pkgmgmt-upgrade-issues">
    <title>Upgrade Issues</title>

    <para>A Package Manager makes it easy to upgrade to newer versions when they
    are released. Generally the instructions in the LFS and BLFS books can be
    used to upgrade to the newer versions. Here are some points that you should
    be aware of when upgrading packages, especially on a running system.</para>

    <itemizedlist>
      <listitem>
        <para>If Linux kernel needs to be upgraded (for example, from
        5.10.17 to 5.10.18 or 5.11.1), nothing else need to be rebuilt.
        The system will keep working fine thanks to the well-defined border
        between kernel and userspace.  Specifically, Linux API headers
        need not to be (and should not be, see the next item) upgraded
        alongside the kernel.  You'll need to reboot your system to use the
        upgraded kernel.</para>
      </listitem>

      <listitem>
        <para>If Linux API headers or Glibc needs to be upgraded to a newer
        version, (e.g.  from glibc-2.31 to glibc-2.32), it is safer to
        rebuild LFS.  Though you <emphasis>may</emphasis> be able to rebuild
        all the packages in their dependency order, we do not recommend
        it.  </para>
      </listitem>

      <listitem> <para>If a package containing a shared library is updated, and
      if the name of the library changes, then any packages dynamically
      linked to the library need to be recompiled in order to link against the
      newer library.  (Note that there is no correlation between the package
      version and the name of the library.) For example, consider a package
      foo-1.2.3 that installs a shared library with name <filename class="libraryfile" moreinfo="none">libfoo.so.1</filename>. If you upgrade the package to
      a newer version foo-1.2.4 that installs a shared library with name
      <filename class="libraryfile" moreinfo="none">libfoo.so.2</filename>. In this case, any
      packages that are dynamically linked to <filename class="libraryfile" moreinfo="none">libfoo.so.1</filename> need to be recompiled to link
      against <filename class="libraryfile" moreinfo="none">libfoo.so.2</filename> in order to
      use the new library version. You should not remove the previous
      libraries unless all the dependent packages are recompiled.</para>
      </listitem>

      <listitem> <para>If a package containing a shared library is updated,
      and the name of library doesn't change, but the version number of the
      library <emphasis role="bold">file</emphasis> decreases (for example,
      the name of the library is kept named
      <filename class="libraryfile" moreinfo="none">libfoo.so.1</filename>,
      but the name of library file is changed from
      <filename class="libraryfile" moreinfo="none">libfoo.so.1.25</filename> to
      <filename class="libraryfile" moreinfo="none">libfoo.so.1.24</filename>),
      you should remove the library file from the previously installed version
      (<filename class="libraryfile" moreinfo="none">libfoo.so.1.25</filename> in the case).
      Or, a <command moreinfo="none">ldconfig</command> run (by yourself using a command
      line, or by the installation of some package) will reset the symlink
      <filename class="libraryfile" moreinfo="none">libfoo.so.1</filename> to point to
      the old library file because it seems having a <quote>newer</quote>
      version, as its version number is larger.  This situation may happen if
      you have to downgrade a package, or the package changes the versioning
      scheme of library files suddenly.</para> </listitem>

      <listitem> <para>If a package containing a shared library is updated,
      and the name of library doesn't change, but a severe issue
      (especially, a security vulnerability) is fixed, all running programs
      linked to the shared library should be restarted.  The following
      command, run as <systemitem class="username" moreinfo="none">root</systemitem> after
      updating, will list what is using the old versions of those libraries
      (replace <replaceable>libfoo</replaceable> with the name of the
      library):</para>

<screen format="linespecific"><userinput role="nodump" moreinfo="none">grep -l  -e '<replaceable>libfoo</replaceable>.*deleted' /proc/*/maps |
   tr -cd 0-9\\n | xargs -r ps u</userinput></screen>

      <para>
        If <application moreinfo="none">OpenSSH</application> is being used for accessing
        the system and it is linked to the updated library, you need to
        restart <command moreinfo="none">sshd</command> service, then logout, login again,
        and rerun that command to confirm nothing is still using the
        deleted libraries.
      </para></listitem>

      <listitem>
        <para>If a binary or a shared library is overwritten, the processes
        using the code or data in the binary or library may crash.  The
        correct way to update a binary or a shared library without causing
        the process to crash is to remove it first, then install the new
        version into position. The <command moreinfo="none">install</command> command
        provided by <application moreinfo="none">Coreutils</application> has already
        implemented this and most packages use it to install binaries and
        libraries.  This means that you won't be troubled by this issue most of the time.
        However, the install process of some packages (notably Mozilla JS
        in BLFS) just overwrites the file if it exists and causes a crash, so
        it's safer to save your work and close unneeded running processes
        before updating a package.</para>
      </listitem>
    </itemizedlist>

  </sect2>

  <sect2>
    <title>Package Management Techniques</title>

    <para>The following are some common package management techniques. Before
    making a decision on a package manager, do some research on the various
    techniques, particularly the drawbacks of the particular scheme.</para>

    <sect3>
      <title>It is All in My Head!</title>

      <para>Yes, this is a package management technique. Some folks do not find
      the need for a package manager because they know the packages intimately
      and know what files are installed by each package. Some users also do not
      need any package management because they plan on rebuilding the entire
      system when a package is changed.</para>

    </sect3>

    <sect3>
      <title>Install in Separate Directories</title>

      <para>This is a simplistic package management that does not need any extra
      package to manage the installations. Each package is installed in a
      separate directory. For example, package foo-1.1 is installed in
      <filename class="directory" moreinfo="none">/usr/pkg/foo-1.1</filename>
      and a symlink is made from <filename moreinfo="none">/usr/pkg/foo</filename> to
      <filename class="directory" moreinfo="none">/usr/pkg/foo-1.1</filename>. When installing
      a new version foo-1.2, it is installed in
      <filename class="directory" moreinfo="none">/usr/pkg/foo-1.2</filename> and the previous
      symlink is replaced by a symlink to the new version.</para>

      <para>Environment variables such as <envar>PATH</envar>,
      <envar>LD_LIBRARY_PATH</envar>, <envar>MANPATH</envar>,
      <envar>INFOPATH</envar> and <envar>CPPFLAGS</envar> need to be expanded to
      include <filename moreinfo="none">/usr/pkg/foo</filename>. For more than a few packages,
      this scheme becomes unmanageable.</para>

    </sect3>

    <sect3>
      <title>Symlink Style Package Management</title>

      <para>This is a variation of the previous package management technique.
      Each package is installed similar to the previous scheme. But instead of
      making the symlink, each file is symlinked into the
      <filename class="directory" moreinfo="none">/usr</filename> hierarchy. This removes the
      need to expand the environment variables. Though the symlinks can be
      created by the user to automate the creation, many package managers have
      been written using this approach. A few of the popular ones include Stow,
      Epkg, Graft, and Depot.</para>

      <para>The installation needs to be faked, so that the package thinks that
      it is installed in <filename class="directory" moreinfo="none">/usr</filename> though in
      reality it is installed in the
      <filename class="directory" moreinfo="none">/usr/pkg</filename> hierarchy. Installing in
      this manner is not usually a trivial task. For example, consider that you
      are installing a package libfoo-1.1. The following instructions may
      not install the package properly:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">./configure --prefix=/usr/pkg/libfoo/1.1
make
make install</userinput></screen>

      <para>The installation will work, but the dependent packages may not link
      to libfoo as you would expect. If you compile a package that links against
      libfoo, you may notice that it is linked to
      <filename class="libraryfile" moreinfo="none">/usr/pkg/libfoo/1.1/lib/libfoo.so.1</filename>
      instead of <filename class="libraryfile" moreinfo="none">/usr/lib/libfoo.so.1</filename>
      as you would expect. The correct approach is to use the
      <envar>DESTDIR</envar> strategy to fake installation of the package. This
      approach works as follows:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">./configure --prefix=/usr
make
make DESTDIR=/usr/pkg/libfoo/1.1 install</userinput></screen>

      <para>Most packages support this approach, but there are some which do not.
      For the non-compliant packages, you may either need to manually install the
      package, or you may find that it is easier to install some problematic
      packages into <filename class="directory" moreinfo="none">/opt</filename>.</para>

    </sect3>

    <sect3>
      <title>Timestamp Based</title>

      <para>In this technique, a file is timestamped before the installation of
      the package. After the installation, a simple use of the
      <command moreinfo="none">find</command> command with the appropriate options can generate
      a log of all the files installed after the timestamp file was created. A
      package manager written with this approach is install-log.</para>

      <para>Though this scheme has the advantage of being simple, it has two
      drawbacks. If, during installation, the files are installed with any
      timestamp other than the current time, those files will not be tracked by
      the package manager. Also, this scheme can only be used when one package
      is installed at a time. The logs are not reliable if two packages are
      being installed on two different consoles.</para>

    </sect3>

    <sect3>
      <title>Tracing Installation Scripts</title>

      <para>In this approach, the commands that the installation scripts perform
      are recorded.  There are two techniques that one can use:</para>

      <para>The <envar>LD_PRELOAD</envar> environment variable can be set to
      point to a library to be preloaded before installation.  During
      installation, this library tracks the packages that are being installed by
      attaching itself to various executables such as <command moreinfo="none">cp</command>,
      <command moreinfo="none">install</command>, <command moreinfo="none">mv</command> and tracking the system
      calls that modify the filesystem. For this approach to work, all the
      executables need to be dynamically linked without the suid or sgid bit.
      Preloading the library may cause some unwanted side-effects during
      installation. Therefore, it is advised that one performs some tests to
      ensure that the package manager does not break anything and logs all the
      appropriate files.</para>

      <para>The second technique is to use <command moreinfo="none">strace</command>, which
      logs all system calls made during the execution of the installation
      scripts.</para>
    </sect3>

    <sect3>
      <title>Creating Package Archives</title>

      <para>In this scheme, the package installation is faked into a separate
      tree as described in the Symlink style package management. After the
      installation, a package archive is created using the installed files.
      This archive is then used to install the package either on the local
      machine or can even be used to install the package on other machines.</para>

      <para>This approach is used by most of the package managers found in the
      commercial distributions. Examples of package managers that follow this
      approach are RPM (which, incidentally, is required by the <ulink url="http://refspecs.linuxfoundation.org/lsb.shtml">Linux
      Standard Base Specification</ulink>), pkg-utils, Debian's apt, and
      Gentoo's Portage system.  A hint describing how to adopt this style of
      package management for LFS systems is located at <ulink url="https://www.linuxfromscratch.org/hints/downloads/files/fakeroot.txt"/>.</para>

      <para>Creation of package files that include dependency information is
      complex and is beyond the scope of LFS.</para>

      <para>Slackware uses a <command moreinfo="none">tar</command> based system for package
      archives.  This system purposely does not handle package dependencies
      as more complex package managers do.  For details of Slackware package
      management, see <ulink url="http://www.slackbook.org/html/package-management.html"/>.</para>
    </sect3>

    <sect3>
      <title>User Based Management</title>

      <para>This scheme, unique to LFS, was devised by Matthias Benkmann, and is
      available from the <ulink url="https://www.linuxfromscratch.org/hints/downloads/files/">Hints Project</ulink>. In
      this scheme, each package is installed as a separate user into the
      standard locations. Files belonging to a package are easily identified by
      checking the user ID. The features and shortcomings of this approach are
      too complex to describe in this section. For the details please see the
      hint at <ulink url="https://www.linuxfromscratch.org/hints/downloads/files/more_control_and_pkg_man.txt"/>.</para>

    </sect3>

  </sect2>

  <sect2>
    <title>Deploying LFS on Multiple Systems</title>

    <para>One of the advantages of an LFS system is that there are no files that
    depend on the position of files on a disk system.  Cloning an LFS build to
    another computer with the same architecture as the base system is as
    simple as using <command moreinfo="none">tar</command> on the LFS partition that contains
    the root directory (about 250MB uncompressed for a base LFS build), copying
    that file via network transfer or CD-ROM to the new system and expanding
    it.  From that point, a few configuration files will have to be changed.
    Configuration files that may need to be updated include:
    <filename moreinfo="none">/etc/hosts</filename>,
    <filename moreinfo="none">/etc/fstab</filename>,
    <filename moreinfo="none">/etc/passwd</filename>,
    <filename moreinfo="none">/etc/group</filename>,
    
    <phrase revision="sysv">
      <filename moreinfo="none">/etc/shadow</filename>,
      <filename moreinfo="none">/etc/ld.so.conf</filename>,
      <filename moreinfo="none">/etc/sysconfig/rc.site</filename>,
      <filename moreinfo="none">/etc/sysconfig/network</filename>, and
      <filename moreinfo="none">/etc/sysconfig/ifconfig.eth0</filename>.
    </phrase>
    </para>

    <para>A custom kernel may need to be built for the new system depending on
    differences in system hardware and the original kernel
    configuration.</para>

    <note><para>There have been some reports of issues when copying between
    similar but not identical architectures. For instance, the instruction set
    for an Intel system is not identical with an AMD processor and later
    versions of some processors may have instructions that are unavailable in
    earlier versions.</para></note>

    <para>Finally the new system has to be made bootable via <xref linkend="ch-bootable-grub"/>.</para>

  </sect2>

</sect1>
  <sect1 id="ch-system-man-pages" role="wrap">
  <?dbhtml filename="man-pages.html"?>

  <sect1info condition="script">
    <productname class="trade">man-pages</productname>
    <productnumber>5.13</productnumber>
    <address format="linespecific">https://www.kernel.org/pub/linux/docs/man-pages/man-pages-5.13.tar.xz</address>
  </sect1info>

  <title>Man-pages-5.13</title>

  <indexterm zone="ch-system-man-pages" significance="normal">
    <primary sortas="a-Man-pages">Man-pages</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Man-pages package contains over 2,200 man pages.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>33 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Man-pages</title>

    <para>Install Man-pages by running:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make prefix=/usr install</userinput></screen>

  </sect2>

  <sect2 id="contents-manpages" role="content">
    <title>Contents of Man-pages</title>

    <segmentedlist>
      <segtitle>Installed files</segtitle>

      <seglistitem>
        <seg>various man pages</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="man-pages">
        <term><filename moreinfo="none">man pages</filename></term>
        <listitem>
          <para>Describe C programming language functions, important
          device files, and significant configuration files</para>
          <indexterm zone="ch-system-man-pages man-pages" significance="normal">
            <primary sortas="e-man-pages">man pages</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-iana-etc" role="wrap">
  <?dbhtml filename="iana-etc.html"?>

  <sect1info condition="script">
    <productname class="trade">iana-etc</productname>
    <productnumber>20210611</productnumber>
    <address format="linespecific">https://github.com/Mic92/iana-etc/releases/download/20210611/iana-etc-20210611.tar.gz</address>
  </sect1info>

  <title>Iana-Etc-20210611</title>

  <indexterm zone="ch-system-iana-etc" significance="normal">
    <primary sortas="a-Iana-Etc">Iana-Etc</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Iana-Etc package provides data for network services and
    protocols.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>4.7 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Iana-Etc</title>

    <para>For this package, we only need to copy the files into place:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">cp services protocols /etc</userinput></screen>

  </sect2>

  <sect2 id="contents-iana-etc" role="content">
    <title>Contents of Iana-Etc</title>

    <segmentedlist>
      <segtitle>Installed files</segtitle>

      <seglistitem>
        <seg>/etc/protocols and /etc/services</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="protocols">
        <term><filename moreinfo="none">/etc/protocols</filename></term>
        <listitem>
          <para>Describes the various DARPA Internet protocols that are
          available from the TCP/IP subsystem</para>
          <indexterm zone="ch-system-iana-etc" significance="normal">
            <primary sortas="e-/etc/protocols">/etc/protocols</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="services">
        <term><filename moreinfo="none">/etc/services</filename></term>
        <listitem>
          <para>Provides a mapping between friendly textual names for internet
          services, and their underlying assigned port numbers and protocol
          types</para>
          <indexterm zone="ch-system-iana-etc" significance="normal">
            <primary sortas="e-/etc/services">/etc/services</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-glibc" role="wrap">
  <?dbhtml filename="glibc.html"?>

  <sect1info condition="script">
    <productname class="trade">glibc</productname>
    <productnumber>2.34</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/glibc/glibc-2.34.tar.xz</address>
  </sect1info>

  <title>Glibc-2.34</title>

  <indexterm zone="ch-system-glibc" significance="normal">
    <primary sortas="a-Glibc">Glibc</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Glibc package contains the main C library. This library provides
    the basic routines for allocating memory, searching directories, opening and
    closing files, reading and writing files, string handling, pattern matching,
    arithmetic, and so on.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>21 SBU</seg>
        <seg>2.4 GB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Glibc</title>

    <para>First, fix a security problem identified upstream:</para>

    <screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -e '/NOTIFY_REMOVED)/s/)/ \&amp;\&amp; data.attr != NULL)/' \
    -i sysdeps/unix/sysv/linux/mq_notify.c</userinput></screen> 

    <para>Some of the Glibc programs use the non-FHS compliant
    <filename class="directory" moreinfo="none">/var/db</filename> directory to store
    their runtime data. Apply the following patch to make such programs
    store their runtime data in the FHS-compliant locations:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">patch -Np1 -i ../glibc-2.34-fhs-1.patch</userinput></screen>

    <para>The Glibc documentation recommends building Glibc 
    in a dedicated build directory:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Ensure that the <command moreinfo="none">ldconfig</command> and <command moreinfo="none">sln</command>
    utilites are installed into
    <filename class="directory" moreinfo="none">/usr/sbin</filename>:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">echo "rootsbindir=/usr/sbin" &gt; configparms</userinput></screen>

    <para>Prepare Glibc for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../configure --prefix=/usr                            \
             --disable-werror                         \
             --enable-kernel=3.2                      \
             --enable-stack-protector=strong          \
             --with-headers=/usr/include              \
             libc_cv_slibdir=/usr/lib</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-werror</parameter></term>
        <listitem>
          <para>This option disables the -Werror option passed to 
          GCC.  This is necessary for running the test suite.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-kernel=3.2</parameter></term>
        <listitem>
          <para>This option tells the build system that this glibc may
          be used with kernels as old as 3.2. This means generating
          workarounds in case a system call introduced in a later version
          cannot be used.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-stack-protector=strong</parameter></term>
        <listitem>
          <para>This option increases system security by adding 
          extra code to check for buffer overflows, such as stack
          smashing attacks.</para>
        </listitem>
      </varlistentry>
<!-- do we need this one? -->
      <varlistentry>
        <term><parameter moreinfo="none">--with-headers=/usr/include</parameter></term>
        <listitem>
          <para>This option tells the build system where to find the
          kernel API headers.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">libc_cv_slibdir=/usr/lib</parameter></term>
        <listitem>
          <para>This variable sets the correct library for all
          systems.  We do not want lib64 to be used.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <important>
      <para>In this section, the test suite for Glibc is considered critical.
      Do not skip it under any circumstance.</para>
    </important>

    <para>Generally a few tests do not pass. The test failures listed below
    are usually safe to ignore.</para>

<!-- Use remap="make" here to work around a jhalfs issue. -->
<!--<screen><userinput remap="make">case $(uname -m) in
  i?86)   ln -sfnv $PWD/elf/ld-linux.so.2        /lib ;;
  x86_64) ln -sfnv $PWD/elf/ld-linux-x86-64.so.2 /lib ;;
esac</userinput></screen>

    <note><para>The symbolic link above is needed to run the tests at this
    stage of building in the chroot environment.  It will be overwritten
    in the install phase below.</para></note>
-->
<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>You may see some test failures. The Glibc test suite is
    somewhat dependent on the host system. A few failures out of
    over 4200 tests can generally be ignored. This is a list of the 
    most common issues seen for recent versions of LFS:</para>

    <itemizedlist>

      <listitem>
        <para><emphasis>io/tst-lchmod</emphasis> 
        is known to fail in the LFS chroot environment.</para>
      </listitem>

      <listitem>
        <para><emphasis>misc/tst-ttyname</emphasis> 
        is known to fail in the LFS chroot environment.</para>
      </listitem>
<!--
      <listitem>
        <para>The <emphasis>nss/tst-nss-files-hosts-multi</emphasis>
        test may fail for reasons that have not been determined.</para>
      </listitem>

      <listitem>
        <para>The <emphasis>rt/tst-cputimer{1,2,3}</emphasis> tests depend on
        the host system kernel. Kernels 4.14.91&ndash;4.14.96,
        4.19.13&ndash;4.19.18, and 4.20.0&ndash;4.20.5 are known to 
        cause these tests to fail.
        </para>
      </listitem>

      <listitem>
        <para>The math tests sometimes fail when running on
        systems where the CPU is not a relatively new Intel or
        AMD processor.</para>
      </listitem>
-->
    </itemizedlist>

    <para>Though it is a harmless message, the install stage of Glibc will
    complain about the absence of <filename moreinfo="none">/etc/ld.so.conf</filename>.
    Prevent this warning with:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">touch /etc/ld.so.conf</userinput></screen>

    <para>Fix the generated Makefile to skip an unneeded sanity check
    that fails in the LFS partial environment:
    </para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">sed '/test-installation/s@$(PERL)@echo not running@' -i ../Makefile</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Fix hardcoded path to the executable loader in
    <command moreinfo="none">ldd</command> script:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">sed '/RTLDLIST=/s@/usr@@g' -i /usr/bin/ldd</userinput></screen>

    <para>Install the configuration file and runtime directory for
    <command moreinfo="none">nscd</command>:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">cp -v ../nscd/nscd.conf /etc/nscd.conf
mkdir -pv /var/cache/nscd</userinput></screen>

    

    

    <para>Next, install the locales that can make the system respond in a
    different language.  None of the locales are required, but if some of them
    are missing, the test suites of future packages would skip important
    testcases.</para>

    <para>Individual locales can be installed using the
    <command moreinfo="none">localedef</command> program. E.g., the first
    <command moreinfo="none">localedef</command> command below combines the
    <filename moreinfo="none">/usr/share/i18n/locales/cs_CZ</filename>
    charset-independent locale definition with the
    <filename moreinfo="none">/usr/share/i18n/charmaps/UTF-8.gz</filename>
    charmap definition and appends the result to the
    <filename moreinfo="none">/usr/lib/locale/locale-archive</filename> file.
    The following instructions will install the minimum set of
    locales necessary for the optimal coverage of tests:</para>

<screen role="nodump" format="linespecific"><userinput remap="locale-test" moreinfo="none">mkdir -pv /usr/lib/locale
localedef -i POSIX -f UTF-8 C.UTF-8 2&gt; /dev/null || true
localedef -i cs_CZ -f UTF-8 cs_CZ.UTF-8
localedef -i de_DE -f ISO-8859-1 de_DE
localedef -i de_DE@euro -f ISO-8859-15 de_DE@euro
localedef -i de_DE -f UTF-8 de_DE.UTF-8
localedef -i el_GR -f ISO-8859-7 el_GR
localedef -i en_GB -f ISO-8859-1 en_GB
localedef -i en_GB -f UTF-8 en_GB.UTF-8
localedef -i en_HK -f ISO-8859-1 en_HK
localedef -i en_PH -f ISO-8859-1 en_PH
localedef -i en_US -f ISO-8859-1 en_US
localedef -i en_US -f UTF-8 en_US.UTF-8
localedef -i es_ES -f ISO-8859-15 es_ES@euro
localedef -i es_MX -f ISO-8859-1 es_MX
localedef -i fa_IR -f UTF-8 fa_IR
localedef -i fr_FR -f ISO-8859-1 fr_FR
localedef -i fr_FR@euro -f ISO-8859-15 fr_FR@euro
localedef -i fr_FR -f UTF-8 fr_FR.UTF-8
localedef -i is_IS -f ISO-8859-1 is_IS
localedef -i is_IS -f UTF-8 is_IS.UTF-8
localedef -i it_IT -f ISO-8859-1 it_IT
localedef -i it_IT -f ISO-8859-15 it_IT@euro
localedef -i it_IT -f UTF-8 it_IT.UTF-8
localedef -i ja_JP -f EUC-JP ja_JP
localedef -i ja_JP -f SHIFT_JIS ja_JP.SIJS 2&gt; /dev/null || true
localedef -i ja_JP -f UTF-8 ja_JP.UTF-8
localedef -i nl_NL@euro -f ISO-8859-15 nl_NL@euro
localedef -i ru_RU -f KOI8-R ru_RU.KOI8-R
localedef -i ru_RU -f UTF-8 ru_RU.UTF-8
localedef -i se_NO -f UTF-8 se_NO.UTF-8
localedef -i ta_IN -f UTF-8 ta_IN.UTF-8
localedef -i tr_TR -f UTF-8 tr_TR.UTF-8
localedef -i zh_CN -f GB18030 zh_CN.GB18030
localedef -i zh_HK -f BIG5-HKSCS zh_HK.BIG5-HKSCS
localedef -i zh_TW -f UTF-8 zh_TW.UTF-8</userinput></screen>

    <para>In addition, install the locale for your own country, language and
    character set.</para>

    <para>Alternatively, install all locales listed in the
    <filename moreinfo="none">glibc-2.34/localedata/SUPPORTED</filename> file
    (it includes every locale listed above and many more) at once with the
    following time-consuming command:</para>

<screen format="linespecific"><userinput remap="locale-full" moreinfo="none">make localedata/install-locales</userinput></screen>

    <para>Then use the <command moreinfo="none">localedef</command> command to create and
    install locales not listed in the
    <filename moreinfo="none">glibc-2.34/localedata/SUPPORTED</filename> file
    when you need them. For instance, the following two locales are
    needed for some tests later in this chapter:</para>
 
<screen role="nodump" format="linespecific"><userinput remap="locale-full" moreinfo="none">localedef -i POSIX -f UTF-8 C.UTF-8 2&gt; /dev/null || true
localedef -i ja_JP -f SHIFT_JIS ja_JP.SIJS 2&gt; /dev/null || true</userinput></screen>

    <note><para>Glibc now uses libidn2 when resolving internationalized 
    domain names.  This is a run time dependency.  If this capability
    is needed, the instructions for installing libidn2 are in the 
    <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libidn2.html">BLFS libidn2 page</ulink>.
    </para></note>

  </sect2>

  <sect2 id="conf-glibc" role="configuration">
    <title>Configuring Glibc</title>

    <indexterm zone="conf-glibc" significance="normal">
      <primary sortas="e-/etc/nsswitch.conf">/etc/nsswitch.conf</primary>
    </indexterm>

    <indexterm zone="conf-glibc" significance="normal">
      <primary sortas="e-/etc/localtime">/etc/localtime</primary>
    </indexterm>

  <sect3>
  <title>Adding nsswitch.conf</title>

    <para>The <filename moreinfo="none">/etc/nsswitch.conf</filename> file needs to be created
    because the Glibc defaults do not work well in a networked environment.
    </para>

    <para>Create a new file <filename moreinfo="none">/etc/nsswitch.conf</filename> by running the
    following:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/nsswitch.conf &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/nsswitch.conf

passwd: files
group: files
shadow: files

hosts: files dns
networks: files

protocols: files
services: files
ethers: files
rpc: files

# End /etc/nsswitch.conf</literal>
EOF</userinput></screen>

    </sect3>

    <sect3>
    <title>Adding time zone data</title>

    <para>Install and set up the time zone data with the following:</para>
<screen format="linespecific"><userinput moreinfo="none">tar -xf ../../tzdata2021a.tar.gz

ZONEINFO=/usr/share/zoneinfo
mkdir -pv $ZONEINFO/{posix,right}

for tz in etcetera southamerica northamerica europe africa antarctica  \
          asia australasia backward; do
    zic -L /dev/null   -d $ZONEINFO       ${tz}
    zic -L /dev/null   -d $ZONEINFO/posix ${tz}
    zic -L leapseconds -d $ZONEINFO/right ${tz}
done

cp -v zone.tab zone1970.tab iso3166.tab $ZONEINFO
zic -d $ZONEINFO -p America/New_York
unset ZONEINFO</userinput></screen>

    <variablelist>
      <title>The meaning of the zic commands:</title>

      <varlistentry>
        <term><parameter moreinfo="none">zic -L /dev/null ...</parameter></term>
        <listitem>
          <para>This creates posix time zones without any leap seconds.  It is
          conventional to put these in both
          <filename class="directory" moreinfo="none">zoneinfo</filename> and
          <filename class="directory" moreinfo="none">zoneinfo/posix</filename>. It is
          necessary to put the POSIX time zones in
          <filename class="directory" moreinfo="none">zoneinfo</filename>, otherwise various
          test-suites will report errors. On an embedded system, where space is
          tight and you do not intend to ever update the time zones, you could save
          1.9 MB by not using the <filename class="directory" moreinfo="none">posix</filename>
          directory, but some applications or test-suites might produce some
          failures.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><parameter moreinfo="none">zic -L leapseconds ...</parameter></term>
        <listitem>
          <para>This creates right time zones, including leap seconds. On an
          embedded system, where space is tight and you do not intend to
          ever update the time zones, or care about the correct time, you could
          save 1.9MB by omitting the <filename class="directory" moreinfo="none">right</filename>
          directory.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><parameter moreinfo="none">zic ... -p ...</parameter></term>
        <listitem>
          <para>This creates the <filename moreinfo="none">posixrules</filename> file. We use
          New York because POSIX requires the daylight savings time rules
          to be in accordance with US rules.</para>
        </listitem>
      </varlistentry>
    </variablelist>


    <para>One way to determine the local time zone is to run the following
    script:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">tzselect</userinput></screen>

    <para>After answering a few questions about the location, the script will
    output the name of the time zone (e.g.,
    <emphasis>America/Edmonton</emphasis>). There are also some other possible
    time zones listed in <filename class="directory" moreinfo="none">/usr/share/zoneinfo</filename> such as
    <emphasis>Canada/Eastern</emphasis> or <emphasis>EST5EDT</emphasis> that
    are not identified by the script but can be used.</para>

    <para>Then create the <filename moreinfo="none">/etc/localtime</filename> file by
    running:</para>

<screen format="linespecific"><userinput moreinfo="none">ln -sfv /usr/share/zoneinfo/<replaceable>&lt;xxx&gt;</replaceable> /etc/localtime</userinput></screen>

    <para>Replace <replaceable>&lt;xxx&gt;</replaceable> with the name of the
    time zone selected (e.g., Canada/Eastern).</para>

  </sect3>

  <sect3 id="conf-ld" role="configuration">
    <title>Configuring the Dynamic Loader</title>

    <indexterm zone="conf-ld" significance="normal">
      <primary sortas="e-/etc/ld.so.conf">/etc/ld.so.conf</primary>
    </indexterm>

    <para>By default, the dynamic loader (<filename class="libraryfile" moreinfo="none">/lib/ld-linux.so.2</filename>) searches through
    <filename class="directory" moreinfo="none">/lib</filename> and <filename class="directory" moreinfo="none">/usr/lib</filename> for dynamic libraries that are
    needed by programs as they are run. However, if there are libraries in
    directories other than <filename class="directory" moreinfo="none">/lib</filename> and
    <filename class="directory" moreinfo="none">/usr/lib</filename>, these need to be added
    to the <filename moreinfo="none">/etc/ld.so.conf</filename> file in order for the
    dynamic loader to find them. Two directories that are commonly known
    to contain additional libraries are <filename class="directory" moreinfo="none">/usr/local/lib</filename> and <filename class="directory" moreinfo="none">/opt/lib</filename>, so add those directories to the
    dynamic loader's search path.</para>

    <para>Create a new file <filename moreinfo="none">/etc/ld.so.conf</filename> by running the
    following:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/ld.so.conf &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/ld.so.conf
/usr/local/lib
/opt/lib
</literal>
EOF</userinput></screen>

  <para>If desired, the dynamic loader can also search a directory and
  include the contents of files found there.  Generally the files in
  this include directory are one line specifying the desired library path.
  To add this capability run the following commands:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">cat &gt;&gt; /etc/ld.so.conf &lt;&lt; "EOF"
<literal moreinfo="none"># Add an include directory
include /etc/ld.so.conf.d/*.conf
</literal>
EOF
mkdir -pv /etc/ld.so.conf.d</userinput></screen>

  </sect3>
  </sect2>

  <sect2 id="contents-glibc" role="content">
    <title>Contents of Glibc</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>catchsegv, gencat, getconf, getent, iconv, iconvconfig, ldconfig,
        ldd, lddlibc4, locale, localedef, makedb, mtrace, nscd, 
        pcprofiledump, pldd, sln, sotruss, sprof, tzselect, xtrace,
        zdump, and zic</seg>
        <seg>ld-linux-x86-64.so.2, ld-linux.so.2,
        libBrokenLocale.{a,so}, libSegFault.so, libanl.{a,so},
        libc.{a,so}, libc_nonshared.a,
        libcrypt.{a,so}, libdl.{a,so.2}, libg.a, libm.{a,so},
        libmcheck.a, libmemusage.so, libmvec.{a,so}, libnsl.so.1,
        libnss_compat.so, libnss_dns.so, libnss_files.so, libnss_hesiod.so,
        libpcprofile.so, libpthread.{a,so.0},
        libresolv.{a,so}, librt.{a,so.1},
        libthread_db.so, and libutil.{a,so.1}</seg>
        <seg>/usr/include/arpa, /usr/include/bits, /usr/include/gnu,
        /usr/include/net, /usr/include/netash, /usr/include/netatalk,
        /usr/include/netax25, /usr/include/neteconet, /usr/include/netinet,
        /usr/include/netipx, /usr/include/netiucv, /usr/include/netpacket,
        /usr/include/netrom, /usr/include/netrose, /usr/include/nfs,
        /usr/include/protocols, /usr/include/rpc,
        /usr/include/sys, /usr/lib/audit, /usr/lib/gconv, /usr/lib/locale,
        /usr/libexec/getconf, /usr/share/i18n, /usr/share/zoneinfo,
        /var/cache/nscd, and /var/lib/nss_db</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="catchsegv">
        <term><command moreinfo="none">catchsegv</command></term>
        <listitem>
          <para>Can be used to create a stack trace when a program
          terminates with a segmentation fault</para>
          <indexterm zone="ch-system-glibc catchsegv" significance="normal">
            <primary sortas="b-catchsegv">catchsegv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gencat">
        <term><command moreinfo="none">gencat</command></term>
        <listitem>
          <para>Generates message catalogues</para>
          <indexterm zone="ch-system-glibc gencat" significance="normal">
            <primary sortas="b-gencat">gencat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getconf">
        <term><command moreinfo="none">getconf</command></term>
        <listitem>
          <para>Displays the system configuration values for file system
          specific variables</para>
          <indexterm zone="ch-system-glibc getconf" significance="normal">
            <primary sortas="b-getconf">getconf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getent">
        <term><command moreinfo="none">getent</command></term>
        <listitem>
          <para>Gets entries from an administrative database</para>
          <indexterm zone="ch-system-glibc getent" significance="normal">
            <primary sortas="b-getent">getent</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iconv">
        <term><command moreinfo="none">iconv</command></term>
        <listitem>
          <para>Performs character set conversion</para>
          <indexterm zone="ch-system-glibc iconv" significance="normal">
            <primary sortas="b-iconv">iconv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iconvconfig">
        <term><command moreinfo="none">iconvconfig</command></term>
        <listitem>
          <para>Creates fastloading <command moreinfo="none">iconv</command> module configuration
          files</para>
          <indexterm zone="ch-system-glibc iconvconfig" significance="normal">
            <primary sortas="b-iconvconfig">iconvconfig</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ldconfig">
        <term><command moreinfo="none">ldconfig</command></term>
        <listitem>
          <para>Configures the dynamic linker runtime bindings</para>
          <indexterm zone="ch-system-glibc ldconfig" significance="normal">
            <primary sortas="b-ldconfig">ldconfig</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ldd">
        <term><command moreinfo="none">ldd</command></term>
        <listitem>
          <para>Reports which shared libraries are required
          by each given program or shared library</para>
          <indexterm zone="ch-system-glibc ldd" significance="normal">
            <primary sortas="b-ldd">ldd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lddlibc4">
        <term><command moreinfo="none">lddlibc4</command></term>
        <listitem>
          <para>Assists <command moreinfo="none">ldd</command> with object files</para>
          <indexterm zone="ch-system-glibc lddlibc4" significance="normal">
            <primary sortas="b-lddlibc4">lddlibc4</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="locale">
        <term><command moreinfo="none">locale</command></term>
        <listitem>
          <para>Prints various information about the current locale</para>
          <indexterm zone="ch-system-glibc locale" significance="normal">
            <primary sortas="b-locale">locale</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="localedef">
        <term><command moreinfo="none">localedef</command></term>
        <listitem>
          <para>Compiles locale specifications</para>
          <indexterm zone="ch-system-glibc localedef" significance="normal">
            <primary sortas="b-localedef">localedef</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="makedb">
        <term><command moreinfo="none">makedb</command></term>
        <listitem>
          <para>Creates a simple database from textual input</para>
          <indexterm zone="ch-system-glibc makedb" significance="normal">
            <primary sortas="b-makedb">makedb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mtrace">
        <term><command moreinfo="none">mtrace</command></term>
        <listitem>
          <para>Reads and interprets a memory trace file and displays a summary
          in human-readable format</para>
          <indexterm zone="ch-system-glibc mtrace" significance="normal">
            <primary sortas="b-mtrace">mtrace</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nscd">
        <term><command moreinfo="none">nscd</command></term>
        <listitem>
          <para>A daemon that provides a cache for the most common name
          service requests</para>
          <indexterm zone="ch-system-glibc nscd" significance="normal">
            <primary sortas="b-nscd">nscd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pcprofiledump">
        <term><command moreinfo="none">pcprofiledump</command></term>
        <listitem>
          <para>Dump information generated by PC profiling</para>
          <indexterm zone="ch-system-glibc pcprofiledump" significance="normal">
            <primary sortas="b-pcprofiledump">pcprofiledump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pldd">
        <term><command moreinfo="none">pldd</command></term>
        <listitem>
          <para>Lists dynamic shared objects used by running processes</para>
          <indexterm zone="ch-system-glibc pldd" significance="normal">
            <primary sortas="b-pldd">pldd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sln">
        <term><command moreinfo="none">sln</command></term>
        <listitem>
          <para>A statically linked <command moreinfo="none">ln</command> program</para>
          <indexterm zone="ch-system-glibc sln" significance="normal">
            <primary sortas="b-sln">sln</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sotruss">
        <term><command moreinfo="none">sotruss</command></term>
        <listitem>
          <para>Traces shared library procedure calls of a specified command</para>
          <indexterm zone="ch-system-glibc sotruss" significance="normal">
            <primary sortas="b-sotruss">sotruss</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sprof">
        <term><command moreinfo="none">sprof</command></term>
        <listitem>
          <para>Reads and displays shared object profiling data</para>
          <indexterm zone="ch-system-glibc sprof" significance="normal">
            <primary sortas="b-sprof">sprof</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tzselect">
        <term><command moreinfo="none">tzselect</command></term>
        <listitem>
          <para>Asks the user about the location of the system and reports
          the corresponding time zone description</para>
          <indexterm zone="ch-system-glibc tzselect" significance="normal">
            <primary sortas="b-tzselect">tzselect</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xtrace">
        <term><command moreinfo="none">xtrace</command></term>
        <listitem>
          <para>Traces the execution of a program by printing the currently
          executed function</para>
          <indexterm zone="ch-system-glibc xtrace" significance="normal">
            <primary sortas="b-xtrace">xtrace</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zdump">
        <term><command moreinfo="none">zdump</command></term>
        <listitem>
          <para>The time zone dumper</para>
          <indexterm zone="ch-system-glibc zdump" significance="normal">
            <primary sortas="b-zdump">zdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zic">
        <term><command moreinfo="none">zic</command></term>
        <listitem>
          <para>The time zone compiler</para>
          <indexterm zone="ch-system-glibc zic" significance="normal">
            <primary sortas="b-zic">zic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld.so">
        <term><filename class="libraryfile" moreinfo="none">ld-*.so</filename></term>
        <listitem>
          <para>The helper program for shared library executables</para>
          <indexterm zone="ch-system-glibc ld.so" significance="normal">
            <primary sortas="c-ld.so">ld-2.34.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libBrokenLocale">
        <term><filename class="libraryfile" moreinfo="none">libBrokenLocale</filename></term>
        <listitem>
          <para>Used internally by Glibc as a gross hack to get broken programs
          (e.g., some Motif applications) running. See comments in
          <filename moreinfo="none">glibc-2.34/locale/broken_cur_max.c</filename>
          for more information</para>
          <indexterm zone="ch-system-glibc libBrokenLocale" significance="normal">
            <primary sortas="c-libBrokenLocale">libBrokenLocale</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libSegFault">
        <term><filename class="libraryfile" moreinfo="none">libSegFault</filename></term>
        <listitem>
          <para>The segmentation fault signal handler, used by
          <command moreinfo="none">catchsegv</command></para>
          <indexterm zone="ch-system-glibc libSegFault" significance="normal">
            <primary sortas="c-libSegFault">libSegFault</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libanl">
        <term><filename class="libraryfile" moreinfo="none">libanl</filename></term>
        <listitem>
          <para>An asynchronous name lookup library</para>
          <indexterm zone="ch-system-glibc libanl" significance="normal">
            <primary sortas="c-libanl">libanl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libc">
        <term><filename class="libraryfile" moreinfo="none">libc</filename></term>
        <listitem>
          <para>The main C library</para>
          <indexterm zone="ch-system-glibc libc" significance="normal">
            <primary sortas="c-libc">libc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcrypt">
        <term><filename class="libraryfile" moreinfo="none">libcrypt</filename></term>
        <listitem>
          <para>The cryptography library</para>
          <indexterm zone="ch-system-glibc libcrypt" significance="normal">
            <primary sortas="c-libcrypt">libcrypt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libdl">
        <term><filename class="libraryfile" moreinfo="none">libdl</filename></term>
        <listitem>
          <para>Dummy library containing no functions. Previously was the
          dynamic linking interface library, whose functions are now in
          <filename class="libraryfile" moreinfo="none">libc</filename></para>
          <indexterm zone="ch-system-glibc libdl" significance="normal">
            <primary sortas="c-libdl">libdl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libg">
        <term><filename class="libraryfile" moreinfo="none">libg</filename></term>
        <listitem>
          <para>Dummy library containing no functions. Previously was a runtime
          library for <command moreinfo="none">g++</command></para>
          <indexterm zone="ch-system-glibc libg" significance="normal">
            <primary sortas="c-libg">libg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libm">
        <term><filename class="libraryfile" moreinfo="none">libm</filename></term>
        <listitem>
          <para>The mathematical library</para>
          <indexterm zone="ch-system-glibc libm" significance="normal">
            <primary sortas="c-libm">libm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmcheck">
        <term><filename class="libraryfile" moreinfo="none">libmcheck</filename></term>
        <listitem>
          <para>Turns on memory allocation checking when linked to</para>
          <indexterm zone="ch-system-glibc libmcheck" significance="normal">
            <primary sortas="c-libmcheck">libmcheck</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmemusage">
        <term><filename class="libraryfile" moreinfo="none">libmemusage</filename></term>
        <listitem>
          <para>Used by <command moreinfo="none">memusage</command> to help collect
          information about the memory usage of a program</para>
          <indexterm zone="ch-system-glibc libmemusage" significance="normal">
            <primary sortas="c-libmemusage">libmemusage</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnsl">
        <term><filename class="libraryfile" moreinfo="none">libnsl</filename></term>
        <listitem>
          <para>The network services library, now deprecated</para>
          <indexterm zone="ch-system-glibc libnsl" significance="normal">
            <primary sortas="c-libnsl">libnsl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnss">
        <term><filename class="libraryfile" moreinfo="none">libnss</filename></term>
        <listitem>
          <para>The Name Service Switch libraries, containing functions for
          resolving host names, user names, group names, aliases, services,
          protocols, etc.</para>
          <indexterm zone="ch-system-glibc libnss" significance="normal">
            <primary sortas="c-libnss">libnss</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpcprofile">
        <term><filename class="libraryfile" moreinfo="none">libpcprofile</filename></term>
        <listitem>
          <para>Can be preloaded to PC profile an executable</para>
          <indexterm zone="ch-system-glibc libpcprofile" significance="normal">
            <primary sortas="c-libpcprofile">libpcprofile</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpthread">
        <term><filename class="libraryfile" moreinfo="none">libpthread</filename></term>
        <listitem>
          <para>Dummy library containing no functions. Previously contained
          functions providing most of the interfaces specified
          by the POSIX.1b Realtime Extension, now the functions are in
          <filename class="libraryfile" moreinfo="none">libc</filename></para>
          <indexterm zone="ch-system-glibc libpthread" significance="normal">
            <primary sortas="c-libpthread">libpthread</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libresolv">
        <term><filename class="libraryfile" moreinfo="none">libresolv</filename></term>
        <listitem>
          <para>Contains functions for creating, sending, and interpreting
          packets to the Internet domain name servers</para>
          <indexterm zone="ch-system-glibc libresolv" significance="normal">
            <primary sortas="c-libresolv">libresolv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="librt">
        <term><filename class="libraryfile" moreinfo="none">librt</filename></term>
        <listitem>
          <para>Contains functions providing most of the interfaces specified
          by the POSIX.1b Realtime Extension</para>
          <indexterm zone="ch-system-glibc librt" significance="normal">
            <primary sortas="c-librt">librt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libthread_db">
        <term><filename class="libraryfile" moreinfo="none">libthread_db</filename></term>
        <listitem>
          <para>Contains functions useful for building debuggers for
          multi-threaded programs</para>
          <indexterm zone="ch-system-glibc libthread_db" significance="normal">
            <primary sortas="c-libthread_db">libthread_db</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libutil">
        <term><filename class="libraryfile" moreinfo="none">libutil</filename></term>
        <listitem>
          <para>Dummy library containing no functions. Previously contained
          code for <quote>standard</quote> functions used in
          many different Unix utilities. These functions are now in
          <filename class="libraryfile" moreinfo="none">libc</filename></para>
          
          <indexterm zone="ch-system-glibc libutil" significance="normal">
            <primary sortas="c-libutil">libutil</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-zlib" role="wrap">
  <?dbhtml filename="zlib.html"?>

  <sect1info condition="script">
    <productname class="trade">zlib</productname>
    <productnumber>1.2.11</productnumber>
    <address format="linespecific">https://zlib.net/zlib-1.2.11.tar.xz</address>
  </sect1info>

  <title>Zlib-1.2.11</title>

  <indexterm zone="ch-system-zlib" significance="normal">
    <primary sortas="a-Zlib">Zlib</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Zlib package contains compression and decompression routines used by
    some programs.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>5.0 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Zlib</title>

    <para>Prepare Zlib for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Remove a useless static library:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">rm -fv /usr/lib/libz.a</userinput></screen>

  </sect2>

  <sect2 id="contents-zlib" role="content">
    <title>Contents of Zlib</title>

    <segmentedlist>
      <segtitle>Installed libraries</segtitle>

      <seglistitem>
        <seg>libz.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libz">
        <term><filename class="libraryfile" moreinfo="none">libz</filename></term>
        <listitem>
          <para>Contains compression and decompression functions used by
          some programs</para>
          <indexterm zone="ch-system-zlib libz" significance="normal">
            <primary sortas="c-libz">libz</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-bzip2" role="wrap">
  <?dbhtml filename="bzip2.html"?>

  <sect1info condition="script">
    <productname class="trade">bzip2</productname>
    <productnumber>1.0.8</productnumber>
    <address format="linespecific">https://www.sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz</address>
  </sect1info>

  <title>Bzip2-1.0.8</title>

  <indexterm zone="ch-system-bzip2" significance="normal">
    <primary sortas="a-Bzip2">Bzip2</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Bzip2 package contains programs for compressing and decompressing
    files. Compressing text files with <command moreinfo="none">bzip2</command> yields a much
    better compression percentage than with the traditional
    <command moreinfo="none">gzip</command>.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>7.2 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Bzip2</title>

    <para>Apply a patch that will install the documentation for this package:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">patch -Np1 -i ../bzip2-1.0.8-install_docs-1.patch</userinput></screen>

   <para>The following command ensures installation of symbolic links are relative:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i 's@\(ln -s -f \)$(PREFIX)/bin/@\1@' Makefile</userinput></screen>

    <para>Ensure the man pages are installed into the correct location:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i "s@(PREFIX)/man@(PREFIX)/share/man@g" Makefile</userinput></screen>

    <para>Prepare Bzip2 for compilation with:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make -f Makefile-libbz2_so
make clean</userinput></screen>

    <variablelist>
      <title>The meaning of the make parameter:</title>

      <varlistentry>
        <term><parameter moreinfo="none">-f Makefile-libbz2_so</parameter></term>
        <listitem>
          <para>This will cause Bzip2 to be built using a different
          <filename moreinfo="none">Makefile</filename> file, in this case the
          <filename moreinfo="none">Makefile-libbz2_so</filename> file, which creates a dynamic
          <filename class="libraryfile" moreinfo="none">libbz2.so</filename> library and links
          the Bzip2 utilities against it.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile and test the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Install the programs:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make PREFIX=/usr install</userinput></screen>

    <para>Install the shared library:</para>
<screen format="linespecific"><userinput remap="install" moreinfo="none">cp -av libbz2.so.* /usr/lib
ln -sv libbz2.so.1.0.8 /usr/lib/libbz2.so</userinput></screen>

    <para>Install the shared <command moreinfo="none">bzip2</command> binary into the
    <filename class="directory" moreinfo="none">/usr/bin</filename> directory, and replace
    two copies of <command moreinfo="none">bzip2</command> with symlinks:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">cp -v bzip2-shared /usr/bin/bzip2
for i in /usr/bin/{bzcat,bunzip2}; do
  ln -sfv bzip2 $i
done</userinput></screen>

    <para>Remove a useless static library:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">rm -fv /usr/lib/libbz2.a</userinput></screen>

  </sect2>

  <sect2 id="contents-bzip2" role="content">
    <title>Contents of Bzip2</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>bunzip2 (link to bzip2), bzcat (link to bzip2), bzcmp (link to
        bzdiff), bzdiff, bzegrep (link to bzgrep), bzfgrep (link to bzgrep),
        bzgrep, bzip2, bzip2recover, bzless (link to bzmore), and bzmore</seg>
        <seg>libbz2.so</seg>
        <seg>/usr/share/doc/bzip2-1.0.8</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="bunzip2">
        <term><command moreinfo="none">bunzip2</command></term>
        <listitem>
          <para>Decompresses bzipped files</para>
          <indexterm zone="ch-system-bzip2 bunzip2" significance="normal">
            <primary sortas="b-bunzip2">bunzip2</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bzcat">
        <term><command moreinfo="none">bzcat</command></term>
        <listitem>
          <para>Decompresses to standard output</para>
          <indexterm zone="ch-system-bzip2 bzcat" significance="normal">
            <primary sortas="b-bzcat">bzcat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bzcmp">
        <term><command moreinfo="none">bzcmp</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">cmp</command> on bzipped files</para>
          <indexterm zone="ch-system-bzip2 bzcmp" significance="normal">
            <primary sortas="b-bzcmp">bzcmp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bzdiff">
        <term><command moreinfo="none">bzdiff</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">diff</command> on bzipped files</para>
          <indexterm zone="ch-system-bzip2 bzdiff" significance="normal">
            <primary sortas="b-bzdiff">bzdiff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bzegrep">
        <term><command moreinfo="none">bzegrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">egrep</command> on bzipped files</para>
          <indexterm zone="ch-system-bzip2 bzegrep" significance="normal">
            <primary sortas="b-bzegrep">bzegrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bzfgrep">
        <term><command moreinfo="none">bzfgrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">fgrep</command> on bzipped files</para>
          <indexterm zone="ch-system-bzip2 bzfgrep" significance="normal">
            <primary sortas="b-bzfgrep">bzfgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bzgrep">
        <term><command moreinfo="none">bzgrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">grep</command> on bzipped files</para>
          <indexterm zone="ch-system-bzip2 bzgrep" significance="normal">
            <primary sortas="b-bzgrep">bzgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bzip2">
        <term><command moreinfo="none">bzip2</command></term>
        <listitem>
          <para>Compresses files using the Burrows-Wheeler block sorting text
          compression algorithm with Huffman coding; the compression rate is
          better than that achieved by more conventional compressors using
          <quote>Lempel-Ziv</quote> algorithms, like <command moreinfo="none">gzip</command></para>
          <indexterm zone="ch-system-bzip2 bzip2" significance="normal">
            <primary sortas="b-bzip2">bzip2</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bzip2recover">
        <term><command moreinfo="none">bzip2recover</command></term>
        <listitem>
          <para>Tries to recover data from damaged bzipped files</para>
          <indexterm zone="ch-system-bzip2 bzip2recover" significance="normal">
            <primary sortas="b-bzip2recover">bzip2recover</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bzless">
        <term><command moreinfo="none">bzless</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">less</command> on bzipped files</para>
          <indexterm zone="ch-system-bzip2 bzless" significance="normal">
            <primary sortas="b-bzless">bzless</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bzmore">
        <term><command moreinfo="none">bzmore</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">more</command> on bzipped files</para>
          <indexterm zone="ch-system-bzip2 bzmore" significance="normal">
            <primary sortas="b-bzmore">bzmore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libbz2">
        <term><filename class="libraryfile" moreinfo="none">libbz2</filename></term>
        <listitem>
          <para>The library implementing lossless, block-sorting data
          compression, using the Burrows-Wheeler algorithm</para>
          <indexterm zone="ch-system-bzip2 libbz2" significance="normal">
            <primary sortas="c-libbz2">libbz2</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-xz" role="wrap">
  <?dbhtml filename="xz.html"?>

  <sect1info condition="script">
    <productname class="trade">xz</productname>
    <productnumber>5.2.5</productnumber>
    <address format="linespecific">https://tukaani.org/xz/xz-5.2.5.tar.xz</address>
  </sect1info>

  <title>Xz-5.2.5</title>

  <indexterm zone="ch-system-xz" significance="normal">
    <primary sortas="a-xz">Xz</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Xz package contains programs for compressing and decompressing
    files. It provides capabilities for the lzma and the newer xz compression
    formats.  Compressing text files with <command moreinfo="none">xz</command> yields a better
    compression percentage than with the traditional <command moreinfo="none">gzip</command> or
    <command moreinfo="none">bzip2</command> commands.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>15 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Xz</title>

    <para>Prepare Xz for compilation with:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr    \
            --disable-static \
            --docdir=/usr/share/doc/xz-5.2.5</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-xz" role="content">
    <title>Contents of Xz</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>
          lzcat (link to xz), 
          lzcmp (link to xzdiff), 
          lzdiff (link to xzdiff), 
          lzegrep (link to xzgrep), 
          lzfgrep (link to xzgrep),
          lzgrep (link to xzgrep), 
          lzless (link to xzless), 
          lzma (link to xz),
          lzmadec, 
          lzmainfo, 
          lzmore (link to xzmore),
          unlzma (link to xz), 
          unxz (link to xz), 
          xz, 
          xzcat (link to xz),
          xzcmp (link to xzdiff), 
          xzdec, 
          xzdiff, 
          xzegrep (link to xzgrep),
          xzfgrep (link to xzgrep), 
          xzgrep, 
          xzless, and 
          xzmore</seg>
        <seg>
          liblzma.so
        </seg>
        <seg>
          /usr/include/lzma and 
          /usr/share/doc/xz-5.2.5
         </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="lzcat">
        <term><command moreinfo="none">lzcat</command></term>
        <listitem>
          <para>Decompresses to standard output</para>
          <indexterm zone="ch-system-xz lzcat" significance="normal">
            <primary sortas="b-lzcat">lzcat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lzcmp">
        <term><command moreinfo="none">lzcmp</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">cmp</command> on LZMA compressed files</para>
          <indexterm zone="ch-system-xz lzcmp" significance="normal">
            <primary sortas="b-lzcmp">lzcmp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lzdiff">
        <term><command moreinfo="none">lzdiff</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">diff</command> on LZMA compressed files</para>
          <indexterm zone="ch-system-xz lzdiff" significance="normal">
            <primary sortas="b-lzdiff">lzdiff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lzegrep">
        <term><command moreinfo="none">lzegrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">egrep</command> on LZMA compressed files</para>
          <indexterm zone="ch-system-xz lzegrep" significance="normal">
            <primary sortas="b-lzegrep">lzegrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lzfgrep">
        <term><command moreinfo="none">lzfgrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">fgrep</command> on LZMA compressed files</para>
          <indexterm zone="ch-system-xz lzfgrep" significance="normal">
            <primary sortas="b-lzfgrep">lzfgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lzgrep">
        <term><command moreinfo="none">lzgrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">grep</command> on LZMA compressed files</para>
          <indexterm zone="ch-system-xz lzgrep" significance="normal">
            <primary sortas="b-lzgrep">lzgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lzless">
        <term><command moreinfo="none">lzless</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">less</command> on LZMA compressed files</para>
          <indexterm zone="ch-system-xz lzless" significance="normal">
            <primary sortas="b-lzless">lzless</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lzma">
        <term><command moreinfo="none">lzma</command></term>
        <listitem>
          <para>Compresses or decompresses files using the LZMA format</para>
          <indexterm zone="ch-system-xz lzma" significance="normal">
            <primary sortas="b-lzma">lzma</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lzmadec">
        <term><command moreinfo="none">lzmadec</command></term>
        <listitem>
          <para>A small and fast decoder for LZMA compressed files</para>
          <indexterm zone="ch-system-xz lzmadec" significance="normal">
            <primary sortas="b-lzmadec">lzmadec</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lzmainfo">
        <term><command moreinfo="none">lzmainfo</command></term>
        <listitem>
          <para>Shows information stored in the LZMA compressed file header</para>
          <indexterm zone="ch-system-xz lzmainfo" significance="normal">
            <primary sortas="b-lzmainfo">lzmainfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lzmore">
        <term><command moreinfo="none">lzmore</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">more</command> on LZMA compressed files</para>
          <indexterm zone="ch-system-xz lzmore" significance="normal">
            <primary sortas="b-lzmamore">lzmore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="unlzma">
        <term><command moreinfo="none">unlzma</command></term>
        <listitem>
          <para>Decompresses files using the LZMA format</para>
          <indexterm zone="ch-system-xz unlzma" significance="normal">
            <primary sortas="b-unlzma">unlzma</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="unxz">
        <term><command moreinfo="none">unxz</command></term>
        <listitem>
          <para>Decompresses files using the XZ format</para>
          <indexterm zone="ch-system-xz unxz" significance="normal">
            <primary sortas="b-unxz">unxz</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xz">
        <term><command moreinfo="none">xz</command></term>
        <listitem>
          <para>Compresses or decompresses files using the XZ format</para>
          <indexterm zone="ch-system-xz xz" significance="normal">
            <primary sortas="b-xz">xz</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xzcat">
        <term><command moreinfo="none">xzcat</command></term>
        <listitem>
          <para>Decompresses to standard output</para>
          <indexterm zone="ch-system-xz xzcat" significance="normal">
            <primary sortas="b-xzcat">xzcat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xzcmp">
        <term><command moreinfo="none">xzcmp</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">cmp</command> on XZ compressed files</para>
          <indexterm zone="ch-system-xz xzcmp" significance="normal">
            <primary sortas="b-xzcmp">xzcmp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xzdec">
        <term><command moreinfo="none">xzdec</command></term>
        <listitem>
          <para>A small and fast decoder for XZ compressed files</para>
          <indexterm zone="ch-system-xz xzdec" significance="normal">
            <primary sortas="b-xzdec">xzdec</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xzdiff">
        <term><command moreinfo="none">xzdiff</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">diff</command> on XZ compressed files</para>
          <indexterm zone="ch-system-xz xzdiff" significance="normal">
            <primary sortas="b-xzdiff">xzdiff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xzegrep">
        <term><command moreinfo="none">xzegrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">egrep</command> on XZ compressed files</para>
          <indexterm zone="ch-system-xz xzegrep" significance="normal">
            <primary sortas="b-xzegrep">xzegrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xzfgrep">
        <term><command moreinfo="none">xzfgrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">fgrep</command> on XZ compressed files</para>
          <indexterm zone="ch-system-xz xzfgrep" significance="normal">
            <primary sortas="b-xzfgrep">xzfgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xzgrep">
        <term><command moreinfo="none">xzgrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">grep</command> on XZ compressed files</para>
          <indexterm zone="ch-system-xz xzgrep" significance="normal">
            <primary sortas="b-xzgrep">xzgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xzless">
        <term><command moreinfo="none">xzless</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">less</command> on XZ compressed files</para>
          <indexterm zone="ch-system-xz xzless" significance="normal">
            <primary sortas="b-xzless">xzless</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xzmore">
        <term><command moreinfo="none">xzmore</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">more</command> on XZ compressed files</para>
          <indexterm zone="ch-system-xz xzmore" significance="normal">
            <primary sortas="b-xzmore">xzmore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liblzma">
        <term><filename class="libraryfile" moreinfo="none">liblzma</filename></term>
        <listitem>
          <para>The library implementing lossless, block-sorting data
          compression, using the Lempel-Ziv-Markov chain algorithm</para>
          <indexterm zone="ch-system-xz liblzma" significance="normal">
            <primary sortas="c-liblzma">liblzma</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-zstd" role="wrap">
  <?dbhtml filename="zstd.html"?>

  <sect1info condition="script">
    <productname class="trade">zstd</productname>
    <productnumber>1.5.0</productnumber>
    <address format="linespecific">https://github.com/facebook/zstd/releases/download/v1.5.0/zstd-1.5.0.tar.gz</address>
  </sect1info>

  <title>Zstd-1.5.0</title>

  <indexterm zone="ch-system-zstd" significance="normal">
    <primary sortas="a-zstd">zstd</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Zstandard is a real-time compression algorithm, providing high
    compression ratios. It offers a very wide range of compression / speed
    trade-offs, while being backed by a very fast decoder.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.4 SBU</seg>
        <seg>60 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Zstd</title>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <note>
       <para>In the test output there are several places that
       indicate 'failed'. These are expected and only 'FAIL' is an actual
       test failure. There should be no test failures.</para>
    </note>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make prefix=/usr install</userinput></screen>

    <para>Remove the static library:</para>
<screen format="linespecific"><userinput remap="install" moreinfo="none">rm -v /usr/lib/libzstd.a</userinput></screen>

  </sect2>

  <sect2 id="contents-zstd" role="content">
    <title>Contents of Zstd</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>

      <seglistitem>
        <seg>zstd, 
             zstdcat (link to zstd), 
             zstdgrep, 
             zstdless, 
             zstdmt (link to zstd), and
             unzstd (link to zstd)
        </seg>

        <seg>libzstd.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="zstd">
        <term><command moreinfo="none">zstd</command></term>
        <listitem>
          <para>Compresses or decompresses files using the ZSTD format</para>
          <indexterm zone="ch-system-zstd zstd" significance="normal">
            <primary sortas="b-zstd">zstd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zstdgrep">
        <term><command moreinfo="none">zstdgrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">grep</command> on ZSTD compressed files</para>
          <indexterm zone="ch-system-zstd zstdgrep" significance="normal">
            <primary sortas="b-zstdgrep">zstdgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zstdless">
        <term><command moreinfo="none">zstdless</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">less</command> on ZSTD compressed files</para>
          <indexterm zone="ch-system-zstd zstdless" significance="normal">
            <primary sortas="b-zstdless">zstdless</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libzstd">
        <term><filename class="libraryfile" moreinfo="none">libzstd</filename></term>
        <listitem>
          <para>The library implementing lossless data
          compression, using the ZSTD algorithm</para>
          <indexterm zone="ch-system-zstd libzstd" significance="normal">
            <primary sortas="c-libzstd">libzstd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-file" role="wrap">
  <?dbhtml filename="file.html"?>

  <sect1info condition="script">
    <productname class="trade">file</productname>
    <productnumber>5.40</productnumber>
    <address format="linespecific">https://astron.com/pub/file/file-5.40.tar.gz</address>
  </sect1info>

  <title>File-5.40</title>

  <indexterm zone="ch-system-file" significance="normal">
    <primary sortas="a-File">File</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The File package contains a utility for determining the type of a given
    file or files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>15 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of File</title>

    <para>Prepare File for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>


  <sect2 id="contents-file" role="content">
    <title>Contents of File</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>

      <seglistitem>
        <seg>file</seg>
        <seg>libmagic.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="file">
        <term><command moreinfo="none">file</command></term>
        <listitem>
          <para>Tries to classify each given file; it does this by performing
          several testsâfile system tests, magic number tests, and language
          tests</para>
          <indexterm zone="ch-system-file file" significance="normal">
            <primary sortas="b-file">file</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmagic">
        <term><filename class="libraryfile" moreinfo="none">libmagic</filename></term>
        <listitem>
          <para>Contains routines for magic number recognition, used by the
          <command moreinfo="none">file</command> program</para>
          <indexterm zone="ch-system-file libmagic" significance="normal">
            <primary sortas="c-libmagic">libmagic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-readline" role="wrap">
  <?dbhtml filename="readline.html"?>

  <sect1info condition="script">
    <productname class="trade">readline</productname>
    <productnumber>8.1</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/readline/readline-8.1.tar.gz</address>
  </sect1info>

  <title>Readline-8.1</title>

  <indexterm zone="ch-system-readline" significance="normal">
    <primary sortas="a-Readline">Readline</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Readline package is a set of libraries that offers command-line
    editing and history capabilities.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>15 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Readline</title>

    <para>Reinstalling Readline will cause the old libraries to be moved to
    &lt;libraryname&gt;.old. While this is normally not a problem, in some cases
    it can trigger a linking bug in <command moreinfo="none">ldconfig</command>. This can be
    avoided by issuing the following two seds:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i '/MV.*old/d' Makefile.in
sed -i '/{OLDSUFF}/c:' support/shlib-install</userinput></screen>

    <para>Prepare Readline for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr    \
            --disable-static \
            --with-curses    \
            --docdir=/usr/share/doc/readline-8.1</userinput></screen>

     <variablelist>
      <title>The meaning of the configure option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--with-curses</parameter></term>
        <listitem>
          <para>This option tells Readline that it can find the termcap
	       library functions in the curses library, rather than a separate
	       termcap library. It allows generating a correct
	       <filename moreinfo="none">readline.pc</filename> file.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make SHLIB_LIBS="-lncursesw"</userinput></screen>

    <variablelist>
      <title>The meaning of the make option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">SHLIB_LIBS="-lncursesw"</parameter></term>
        <listitem>
          <para>This option forces Readline to link against the
          <filename class="libraryfile" moreinfo="none">libncursesw</filename> library.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>This package does not come with a test suite.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make SHLIB_LIBS="-lncursesw" install</userinput></screen>

    <para>If desired, install the documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">install -v -m644 doc/*.{ps,pdf,html,dvi} /usr/share/doc/readline-8.1</userinput></screen>

  </sect2>

  <sect2 id="contents-readline" role="content">
    <title>Contents of Readline</title>

    <segmentedlist>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>libhistory.so and libreadline.so</seg>
        <seg>/usr/include/readline and
        /usr/share/doc/readline-8.1</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libhistory">
        <term><filename class="libraryfile" moreinfo="none">libhistory</filename></term>
        <listitem>
          <para>Provides a consistent user interface for recalling lines
          of history</para>
          <indexterm zone="ch-system-readline libhistory" significance="normal">
            <primary sortas="c-libhistory">libhistory</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libreadline">
        <term><filename class="libraryfile" moreinfo="none">libreadline</filename></term>
        <listitem>
          <para>Provides a set of commands for manipulating text entered in an
          interactive session of a program</para>
          <indexterm zone="ch-system-readline libreadline" significance="normal">
            <primary sortas="c-libreadline">libreadline</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-m4" role="wrap">
  <?dbhtml filename="m4.html"?>

  <sect1info condition="script">
    <productname class="trade">m4</productname>
    <productnumber>1.4.19</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/m4/m4-1.4.19.tar.xz</address>
  </sect1info>

  <title>M4-1.4.19</title>

  <indexterm zone="ch-system-m4" significance="normal">
    <primary sortas="a-M4">M4</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The M4 package contains a macro processor.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.7 SBU</seg>
        <seg>48 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of M4</title>
<!--
    <para>First, make some fixes required by glibc-2.28 and later:</para>

<screen><userinput remap="pre">sed -i 's/IO_ftrylockfile/IO_EOF_SEEN/' lib/*.c
echo "#define _IO_IN_BACKUP 0x100" >> lib/stdio-impl.h</userinput></screen>
-->
    <para>Prepare M4 for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-m4" role="content">
    <title>Contents of M4</title>

    <segmentedlist>
      <segtitle>Installed program</segtitle>

      <seglistitem>
        <seg>m4</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="m4">
         <!-- Don't remove the extra space, it prevet a FOP warning. -->
        <term><command moreinfo="none">m4 </command></term>
        <listitem>
          <para>Copies the given files while expanding the macros that they
          contain. These macros are either built-in or user-defined and can
          take any number of arguments. Besides performing macro expansion,
          <command moreinfo="none">m4</command> has built-in functions for including named
          files, running Unix commands, performing integer arithmetic,
          manipulating text, recursion, etc. The <command moreinfo="none">m4</command> program
          can be used either as a front-end to a compiler or as a macro processor
          in its own right</para>
          <indexterm zone="ch-system-m4 m4" significance="normal">
            <primary sortas="b-m4">m4</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-bc" role="wrap">
  <?dbhtml filename="bc.html"?>

  <sect1info condition="script">
    <productname class="trade">bc</productname>
    <productnumber>5.0.0</productnumber>
    <address format="linespecific">https://github.com/gavinhoward/bc/releases/download/5.0.0/bc-5.0.0.tar.xz</address>
  </sect1info>

  <title>Bc-5.0.0</title>

  <indexterm zone="ch-system-bc" significance="normal">
    <primary sortas="a-Bc">Bc</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Bc package contains an arbitrary precision numeric processing 
    language.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>6.7 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Bc</title>

    <para>Prepare Bc for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">CC=gcc ./configure --prefix=/usr -G -O3</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">CC=gcc</parameter></term>
        <listitem>
          <para>This parameter specifies the compiler to use.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">-O3</parameter></term>
        <listitem>
          <para>Specify the optimization to use.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">-G</parameter></term>
        <listitem>
          <para>Omit  parts of the test suite that won't work
          without a GNU bc present.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test bc, run:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make test</userinput></screen>


    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-bc" role="content">
    <title>Contents of Bc</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>bc and dc</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="bc">
        <term><command moreinfo="none">bc</command></term>
        <listitem>
          <para>A command line calculator</para>
          <indexterm zone="ch-system-bc bc" significance="normal">
            <primary sortas="b-bc">bc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dc">
        <term><command moreinfo="none">dc</command></term>
        <listitem>
          <para>A reverse-polish command line calculator</para>
          <indexterm zone="ch-system-bc dc" significance="normal">
            <primary sortas="b-dc">dc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-flex" role="wrap">
  <?dbhtml filename="flex.html"?>

  <sect1info condition="script">
    <productname class="trade">flex</productname>
    <productnumber>2.6.4</productnumber>
    <address format="linespecific">https://github.com/westes/flex/releases/download/v2.6.4/flex-2.6.4.tar.gz</address>
  </sect1info>

  <title>Flex-2.6.4</title>

  <indexterm zone="ch-system-flex" significance="normal">
    <primary sortas="a-Flex">Flex</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Flex package contains a utility for generating programs that
    recognize patterns in text.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.4 SBU</seg>
        <seg>32 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Flex</title>

<!--
    <para>First, fix a problem introduced with glibc-2.26:</para>

<screen><userinput remap="pre">sed -i "/math.h/a #include &lt;malloc.h&gt;" src/flexdef.h</userinput></screen>

    <para>The build procedure assumes the <application>help2man</application>
    program is available to create a man page from the executable - -help option.
    This is not present, so we use an environment variable to skip this process.
    Now, prepare Flex for compilation:</para> -->

    <para>Prepare Flex for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr \
            --docdir=/usr/share/doc/flex-2.6.4 \
            --disable-static</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results (about 0.5 SBU), issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>A few programs do not know about <command moreinfo="none">flex</command> yet and
    try to run its predecessor, <command moreinfo="none">lex</command>. To support those
    programs, create a symbolic link named <filename moreinfo="none">lex</filename> that
    runs <filename moreinfo="none">flex</filename> in <command moreinfo="none">lex</command> emulation
    mode:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">ln -sv flex /usr/bin/lex</userinput></screen>

  </sect2>

  <sect2 id="contents-flex" role="content">
    <title>Contents of Flex</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>flex, flex++ (link to flex), and lex (link to flex)</seg>
        <seg>libfl.so</seg>
        <seg>/usr/share/doc/flex-2.6.4</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="flex">
        <term><command moreinfo="none">flex</command></term>
        <listitem>
          <para>A tool for generating programs that recognize patterns in text;
          it allows for the versatility to specify the rules for pattern-finding,
          eradicating the need to develop a specialized program</para>
          <indexterm zone="ch-system-flex flex" significance="normal">
            <primary sortas="b-flex">flex</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="flexpp">
        <term><command moreinfo="none">flex++</command></term>
        <listitem>
          <para>An extension of flex, is used for generating C++ code
          and classes. It is a symbolic link to <command moreinfo="none">flex</command></para>
          <indexterm zone="ch-system-flex flexpp" significance="normal">
            <primary sortas="b-flex++">flex++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lex">
        <term><command moreinfo="none">lex</command></term>
        <listitem>
          <para>A symbolic link that runs <command moreinfo="none">flex</command> in
          <command moreinfo="none">lex</command> emulation mode</para>
          <indexterm zone="ch-system-flex lex" significance="normal">
            <primary sortas="b-lex">lex</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libfl">
        <term><filename class="libraryfile" moreinfo="none">libfl</filename></term>
        <listitem>
          <para>The <filename class="libraryfile" moreinfo="none">flex</filename> library</para>
          <indexterm zone="ch-system-flex libfl" significance="normal">
            <primary sortas="c-libfl">libfl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

  <sect1 id="ch-system-tcl" role="wrap">
  <?dbhtml filename="tcl.html"?>

  <sect1info condition="script">
    <productname class="trade">tcl</productname>
    <productnumber>8.6.11</productnumber>
    <address format="linespecific">https://downloads.sourceforge.net/tcl/tcl8.6.11-src.tar.gz</address>
  </sect1info>

  <title>Tcl-8.6.11</title>

  <indexterm zone="ch-system-tcl" significance="normal">
    <primary sortas="a-Tcl">Tcl</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The <application moreinfo="none">Tcl</application> package contains the Tool Command Language,
    a robust general-purpose scripting language. The <application moreinfo="none">Expect</application> package
    is written in the <application moreinfo="none">Tcl</application> language.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>3.7 SBU</seg>
        <seg>80 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Tcl</title>

    <para>This package and the next two (Expect and DejaGNU) are
    installed to support running the test suites for binutils and GCC and other
    packages.  Installing three packages for testing purposes may seem
    excessive, but it is very reassuring, if not essential, to know that the
    most important tools are working properly.</para>

<!--    <para>Note that the Tcl package used here is a minimal version needed
    to run the LFS tests.  For the full package, see the  
    <ulink url='&blfs-book;general/tcl.html'>BLFS Tcl procedures</ulink>.</para>-->

    <para>First, unpack the documentation by issuing the following command:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">tar -xf ../tcl8.6.11-html.tar.gz --strip-components=1</userinput></screen>

    <para>Prepare Tcl for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">SRCDIR=$(pwd)
cd unix
./configure --prefix=/usr           \
            --mandir=/usr/share/man \
            $([ "$(uname -m)" = x86_64 ] &amp;&amp; echo --enable-64bit)</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">$([ "$(uname -m)" = x86_64 ] &amp;&amp; echo --enable-64bit)</parameter></term>
        <listitem>
          <para>The construct <parameter moreinfo="none">$(&lt;shell command&gt;)</parameter>
          is replaced by the output of the shell command.  Here this output is
          empty if running on a 32 bit machine, and is
          <parameter moreinfo="none">--enable-64bit</parameter> if running on a 64 bit machine.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Build the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make

sed -e "s|$SRCDIR/unix|/usr/lib|" \
    -e "s|$SRCDIR|/usr/include|"  \
    -i tclConfig.sh

sed -e "s|$SRCDIR/unix/pkgs/tdbc1.1.2|/usr/lib/tdbc1.1.2|" \
    -e "s|$SRCDIR/pkgs/tdbc1.1.2/generic|/usr/include|"    \
    -e "s|$SRCDIR/pkgs/tdbc1.1.2/library|/usr/lib/tcl8.6|" \
    -e "s|$SRCDIR/pkgs/tdbc1.1.2|/usr/include|"            \
    -i pkgs/tdbc1.1.2/tdbcConfig.sh

sed -e "s|$SRCDIR/unix/pkgs/itcl4.2.1|/usr/lib/itcl4.2.1|" \
    -e "s|$SRCDIR/pkgs/itcl4.2.1/generic|/usr/include|"    \
    -e "s|$SRCDIR/pkgs/itcl4.2.1|/usr/include|"            \
    -i pkgs/itcl4.2.1/itclConfig.sh

unset SRCDIR</userinput></screen>

    <para>The various <quote>sed</quote> instructions after the
    <quote>make</quote> command removes references to the build directory from
    the configuration files and replaces them with the install directory.
    This is not mandatory for the remainder of LFS, but may be needed in case a
    package built later uses Tcl.</para>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make test</userinput></screen>
<!--
   <note>
      <para>
         In the test results there are several places associated with clock.test
         that indicate a failure, but the summary at the end indicates no
         failures. clock.test passes on a complete LFS system.
      </para>
    </note>
-->
    <para>One test, unixInit-1.2, is known to fail.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Make the installed library writable so debugging symbols can
    be removed later:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">chmod -v u+w /usr/lib/libtcl8.6.so</userinput></screen>

    <para>Install Tcl's headers. The next package, Expect, requires them.</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install-private-headers</userinput></screen>

    <para>Now make a necessary symbolic link:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">ln -sfv tclsh8.6 /usr/bin/tclsh</userinput></screen>

    <para>Finally, rename a man page that conflicts with a Perl man page:</para>

    <screen format="linespecific"><userinput remap="install" moreinfo="none">mv /usr/share/man/man3/{Thread,Tcl_Thread}.3</userinput></screen>

  </sect2>

  <sect2 id="contents-tcl" role="content">
    <title>Contents of Tcl</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>

      <seglistitem>
        <seg>
          tclsh (link to tclsh8.6) and 
          tclsh8.6
        </seg>
        <seg>
          libtcl8.6.so and 
          libtclstub8.6.a
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="tclsh8.6">
        <term><command moreinfo="none">tclsh8.6</command></term>
        <listitem>
          <para>The Tcl command shell</para>
          <indexterm zone="ch-system-tcl tclsh8.6" significance="normal">
            <primary sortas="b-tclsh8.6">tclsh8.6</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tclsh">
        <term><command moreinfo="none">tclsh</command></term>
        <listitem>
          <para>A link to tclsh8.6</para>
          <indexterm zone="ch-system-tcl tclsh" significance="normal">
            <primary sortas="b-tclsh">tclsh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtcl8.6.so">
        <term><filename class="libraryfile" moreinfo="none">libtcl8.6.so</filename></term>
        <listitem>
          <para>The Tcl library</para>
          <indexterm zone="ch-system-tcl libtcl8.6.so" significance="normal">
            <primary sortas="c-libtcl8.6.so">libtcl8.6.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtclstub8.6.a">
        <term><filename class="libraryfile" moreinfo="none">libtclstub8.6.a</filename></term>
        <listitem>
          <para>The Tcl Stub library</para>
          <indexterm zone="ch-system-tcl libtclstub8.6.a" significance="normal">
            <primary sortas="c-libtclstub8.6.a">libtclstub8.6.a</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-expect" role="wrap">
  <?dbhtml filename="expect.html"?>

  <sect1info condition="script">
    <productname class="trade">expect</productname>
    <productnumber>5.45.4</productnumber>
    <address format="linespecific">https://prdownloads.sourceforge.net/expect/expect5.45.4.tar.gz</address>
  </sect1info>

  <title>Expect-5.45.4</title>

  <indexterm zone="ch-system-expect" significance="normal">
    <primary sortas="a-Expect">Expect</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The <application moreinfo="none">Expect</application> package contains tools for
    automating, via scripted dialogues, interactive applications such as
    <command moreinfo="none">telnet</command>, <command moreinfo="none">ftp</command>,
    <command moreinfo="none">passwd</command>, <command moreinfo="none">fsck</command>,
    <command moreinfo="none">rlogin</command>, and <command moreinfo="none">tip</command>.
    <application moreinfo="none">Expect</application> is also useful for testing these same
    applications as well as easing all sorts of tasks that are prohibitively
    difficult with anything else. The <application moreinfo="none">DejaGnu</application>
    framework is written in <application moreinfo="none">Expect</application>.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>3.9 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Expect</title>

    <para>Prepare Expect for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr           \
            --with-tcl=/usr/lib     \
            --enable-shared         \
            --mandir=/usr/share/man \
            --with-tclinclude=/usr/include</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--with-tcl=/usr/lib</parameter></term>
        <listitem>
          <para>This parameter is needed to tell 
          <command moreinfo="none">configure</command> where the
          <command moreinfo="none">tclConfig.sh</command> script is located.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--with-tclinclude=/usr/include</parameter></term>
        <listitem>
          <para>This explicitly tells Expect where to find Tcl's internal
          headers.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Build the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make test</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
ln -svf expect5.45.4/libexpect5.45.4.so /usr/lib</userinput></screen>

  </sect2>

  <sect2 id="contents-expect" role="content">
    <title>Contents of Expect</title>

    <segmentedlist>
      <segtitle>Installed program</segtitle>
      <segtitle>Installed library</segtitle>

      <seglistitem>
        <seg>expect</seg>
        <seg>libexpect-5.45.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="expect">
        <term><command moreinfo="none">expect</command></term>
        <listitem>
          <para>Communicates with other interactive programs according
          to a script</para>
          <indexterm zone="ch-system-expect expect" significance="normal">
            <primary sortas="b-expect">expect</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libexpect">
        <term><filename class="libraryfile" moreinfo="none">libexpect-5.45.so</filename></term>
        <listitem>
          <para>Contains functions that allow Expect to be used as a Tcl
          extension or to be used directly from C or C++ (without Tcl)</para>
          <indexterm zone="ch-system-expect libexpect" significance="normal">
            <primary sortas="c-libexpect-5.45">libexpect-5.45</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-dejagnu" role="wrap">
  <?dbhtml filename="dejagnu.html"?>

  <sect1info condition="script">
    <productname class="trade">dejagnu</productname>
    <productnumber>1.6.3</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/dejagnu/dejagnu-1.6.3.tar.gz</address>
  </sect1info>

  <title>DejaGNU-1.6.3</title>

  <indexterm zone="ch-system-dejagnu" significance="normal">
    <primary sortas="a-DejaGNU">DejaGNU</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The <application moreinfo="none">DejaGnu</application> package contains a framework for running test
      suites on GNU tools. It is written in <command moreinfo="none">expect</command>, which itself
      uses <application moreinfo="none">Tcl</application> (Tool Command Language).</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>6.9 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of DejaGNU</title>

    <para>The upstream recommends building DejaGNU in a dedicated build
    directory:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare DejaGNU for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../configure --prefix=/usr
makeinfo --html --no-split -o doc/dejagnu.html ../doc/dejagnu.texi
makeinfo --plaintext       -o doc/dejagnu.txt  ../doc/dejagnu.texi</userinput></screen>

    <para>Build and install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
install -v -dm755  /usr/share/doc/dejagnu-1.6.3
install -v -m644   doc/dejagnu.{html,txt} /usr/share/doc/dejagnu-1.6.3</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

  </sect2>


  <sect2 id="contents-dejagnu" role="content">
    <title>Contents of DejaGNU</title>

    <segmentedlist>
      <segtitle>Installed program</segtitle>

      <seglistitem>
        <seg>runtest</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="runtest">
        <term><command moreinfo="none">runtest</command></term>
        <listitem>
          <para>A wrapper script that locates the proper
          <command moreinfo="none">expect</command> shell and then runs DejaGNU</para>
          <indexterm zone="ch-system-dejagnu runtest" significance="normal">
            <primary sortas="b-runtest">runtest</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

  <sect1 id="ch-system-binutils" role="wrap">
  <?dbhtml filename="binutils.html"?>

  <sect1info condition="script">
    <productname class="trade">binutils</productname>
    <productnumber>2.37</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/binutils/binutils-2.37.tar.xz</address>
  </sect1info>

  <title>Binutils-2.37</title>

  <indexterm zone="ch-system-binutils" significance="normal">
    <primary sortas="a-Binutils">Binutils</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Binutils package contains a linker, an assembler, and other
    tools for handling object files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>6.3 SBU</seg>
        <seg>4.5 GB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Binutils</title>

    <para>Verify that the PTYs are working properly inside the chroot
    environment by performing a simple test:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">expect -c "spawn ls"</userinput></screen>

    <para>This command should output the following:</para>

<screen format="linespecific"><computeroutput moreinfo="none">spawn ls</computeroutput></screen>

    <para>If, instead, the output includes the message below, then the environment
    is not set up for proper PTY operation.  This issue needs to be resolved before
    running the test suites for Binutils and GCC:</para>

<screen format="linespecific"><computeroutput moreinfo="none">The system has no more ptys.
Ask your system administrator to create more.</computeroutput></screen>

    <para>Upstream has made a patch to fix a problem building some
    packages.  Apply that now:</para>

 <screen format="linespecific"><userinput remap="pre" moreinfo="none">patch -Np1 -i ../binutils-2.37-upstream_fix-1.patch</userinput></screen>

    <para>An error in the building system causes the shipped man pages to
    be empty.  Workaround the issue and remove the shipped man pages, so the
    man pages will be regenerated correctly:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i '63d' etc/texi2pod.pl
find -name \*.1 -delete</userinput></screen>
<!--
    <para>Now remove one test that prevents the tests from running
    to completion:</para>

<screen><userinput remap="pre">sed -i '/@\tincremental_copy/d' gold/testsuite/Makefile.in</userinput></screen>
-->
    <para>The Binutils documentation recommends building Binutils 
    in a dedicated build directory:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare Binutils for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../configure --prefix=/usr       \
             --enable-gold       \
             --enable-ld=default \
             --enable-plugins    \
             --enable-shared     \
             --disable-werror    \
             --enable-64-bit-bfd \
             --with-system-zlib</userinput></screen>
    <variablelist>
      <title>The meaning of the configure parameters:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-gold</parameter></term>
        <listitem>
          <para>Build the gold linker and install it as ld.gold (along side the
          default linker).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-ld=default</parameter></term>
        <listitem>
          <para>Build the original bfd linker and install it as both ld (the
          default linker) and ld.bfd.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-plugins</parameter></term>
        <listitem>
          <para>Enables plugin support for the linker.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-64-bit-bfd</parameter></term>
        <listitem>
           <para>Enables 64-bit support (on hosts with narrower word sizes).
           May not be needed on 64-bit systems, but does no harm.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--with-system-zlib</parameter></term>
        <listitem>
          <para>Use the installed zlib library rather than building the
          included version.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make tooldir=/usr</userinput></screen>

    <variablelist>
      <title>The meaning of the make parameter:</title>

      <varlistentry>
        <term><parameter moreinfo="none">tooldir=/usr</parameter></term>
        <listitem>
          <para>Normally, the tooldir (the directory where the executables will
          ultimately be located) is set to <filename class="directory" moreinfo="none">$(exec_prefix)/$(target_alias)</filename>. For
          example, x86_64 machines would expand that to <filename class="directory" moreinfo="none">/usr/x86_64-pc-linux-gnu</filename>. Because this is
          a custom system, this target-specific directory in <filename class="directory" moreinfo="none">/usr</filename> is not required. <filename class="directory" moreinfo="none">$(exec_prefix)/$(target_alias)</filename> would be
          used if the system was used to cross-compile (for example, compiling a
          package on an Intel machine that generates code that can be executed
          on PowerPC machines).</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <important>
      <para>The test suite for Binutils in this section is considered critical.
      Do not skip it under any circumstances.</para>
    </important>

    <para>Test the results:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make -k check</userinput></screen>

    <para>Four tests related to zlib are known to fail.</para>
<!--
    <para>Seven gold tests are known to fail with gcc-11.1.0</para>

    <para>Four ld tests named <quote>Run property ...</quote> are known to
    fail.</para>
 -->
    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make tooldir=/usr install -j1</userinput></screen>

    <para>Remove useless static libraries:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">rm -fv /usr/lib/lib{bfd,ctf,ctf-nobfd,opcodes}.a</userinput></screen>

  </sect2>

  <sect2 id="contents-binutils" role="content">
    <title>Contents of Binutils</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>addr2line, ar, as, c++filt, dwp, elfedit, gprof, ld, ld.bfd, ld.gold, nm,
        objcopy, objdump, ranlib, readelf, size, strings, and strip</seg>
        <seg>libbfd.so, libctf.so, libctf-nobfd.so, and libopcodes.so</seg>
        <seg>/usr/lib/ldscripts</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="addr2line">
        <term><command moreinfo="none">addr2line</command></term>
        <listitem>
          <para>Translates program addresses to file names and line numbers;
          given an address and the name of an executable, it uses the debugging
          information in the executable to determine which source file and line
          number are associated with the address</para>
          <indexterm zone="ch-system-binutils addr2line" significance="normal">
            <primary sortas="b-addr2line">addr2line</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ar">
        <term><command moreinfo="none">ar</command></term>
        <listitem>
          <para>Creates, modifies, and extracts from archives</para>
          <indexterm zone="ch-system-binutils ar" significance="normal">
            <primary sortas="b-ar">ar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="as">
        <term><command moreinfo="none">as</command></term>
        <listitem>
          <para>An assembler that assembles the output of <command moreinfo="none">gcc</command>
          into object files</para>
          <indexterm zone="ch-system-binutils as" significance="normal">
            <primary sortas="b-as">as</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="c-filt">
        <term><command moreinfo="none">c++filt</command></term>
        <listitem>
          <para>Used by the linker to de-mangle C++ and Java symbols and to keep
          overloaded functions from clashing</para>
          <indexterm zone="ch-system-binutils c-filt" significance="normal">
            <primary sortas="b-c++filt">c++filt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dwp">
        <term><command moreinfo="none">dwp</command></term>
        <listitem>
          <para>The DWARF packaging utility</para>
          <indexterm zone="ch-system-binutils dwp" significance="normal">
            <primary sortas="dwp">dwp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="elfedit">
        <term><command moreinfo="none">elfedit</command></term>
        <listitem>
          <para>Updates the ELF header of ELF files</para>
          <indexterm zone="ch-system-binutils elfedit" significance="normal">
            <primary sortas="b-elfedit">elfedit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gprof">
        <term><command moreinfo="none">gprof</command></term>
        <listitem>
          <para>Displays call graph profile data</para>
          <indexterm zone="ch-system-binutils gprof" significance="normal">
            <primary sortas="b-gprof">gprof</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld">
        <term><command moreinfo="none">ld</command></term>
        <listitem>
          <para>A linker that combines a number of object and archive files
          into a single file, relocating their data and tying up symbol
          references</para>
          <indexterm zone="ch-system-binutils ld" significance="normal">
            <primary sortas="b-ld">ld</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld.gold">
        <term><command moreinfo="none">ld.gold</command></term>
        <listitem>
          <para>A cut down version of ld that only supports the 
          elf object file format</para>
          <indexterm zone="ch-system-binutils ld.gold" significance="normal">
            <primary sortas="b-ld.gold">ld.gold</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld.bfd">
        <term><command moreinfo="none">ld.bfd</command></term>
        <listitem>
          <para>Hard link to <command moreinfo="none">ld</command></para>
          <indexterm zone="ch-system-binutils ld.bfd" significance="normal">
            <primary sortas="b-ld.bfd">ld.bfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nm">
        <term><command moreinfo="none">nm</command></term>
        <listitem>
          <para>Lists the symbols occurring in a given object file</para>
          <indexterm zone="ch-system-binutils nm" significance="normal">
            <primary sortas="b-nm">nm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="objcopy">
        <term><command moreinfo="none">objcopy</command></term>
        <listitem>
          <para>Translates one type of object file into another</para>
          <indexterm zone="ch-system-binutils objcopy" significance="normal">
            <primary sortas="b-objcopy">objcopy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="objdump">
        <term><command moreinfo="none">objdump</command></term>
        <listitem>
          <para>Displays information about the given object file, with options
          controlling the particular information to display; the information
          shown is useful to programmers who are working on the compilation
          tools</para>
          <indexterm zone="ch-system-binutils objdump" significance="normal">
            <primary sortas="b-objdump">objdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ranlib">
        <term><command moreinfo="none">ranlib</command></term>
        <listitem>
          <para>Generates an index of the contents of an archive and stores it
          in the archive; the index lists all of the symbols defined by archive
          members that are relocatable object files</para>
          <indexterm zone="ch-system-binutils ranlib" significance="normal">
            <primary sortas="b-ranlib">ranlib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="readelf">
        <term><command moreinfo="none">readelf</command></term>
        <listitem>
          <para>Displays information about ELF type binaries</para>
          <indexterm zone="ch-system-binutils readelf" significance="normal">
            <primary sortas="b-readelf">readelf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="size">
        <term><command moreinfo="none">size</command></term>
        <listitem>
          <para>Lists the section sizes and the total size for the given
          object files</para>
          <indexterm zone="ch-system-binutils size" significance="normal">
            <primary sortas="b-size">size</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="strings">
        <term><command moreinfo="none">strings</command></term>
        <listitem>
          <para>Outputs, for each given file, the sequences of printable
          characters that are of at least the specified length (defaulting to
          four); for object files, it prints, by default, only the strings from
          the initializing and loading sections while for other types of files, it
          scans the entire file</para>
          <indexterm zone="ch-system-binutils strings" significance="normal">
            <primary sortas="b-strings">strings</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="strip">
        <term><command moreinfo="none">strip</command></term>
        <listitem>
          <para>Discards symbols from object files</para>
          <indexterm zone="ch-system-binutils strip" significance="normal">
            <primary sortas="b-strip">strip</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libbfd">
        <term><filename class="libraryfile" moreinfo="none">libbfd</filename></term>
        <listitem>
          <para>The Binary File Descriptor library</para>
          <indexterm zone="ch-system-binutils libbfd" significance="normal">
            <primary sortas="c-libbfd">libbfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libctf">
        <term><filename class="libraryfile" moreinfo="none">libctf</filename></term>
        <listitem>
          <para>The Compat ANSI-C Type Format debugging support library</para>
          <indexterm zone="ch-system-binutils libctf" significance="normal">
            <primary sortas="c-libctf">libctf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libctf-nobfd">
        <term><filename class="libraryfile" moreinfo="none">libctf-nobfd</filename></term>
        <listitem>
          <para>A libctf variant which does not use libbfd functionality</para>
          <indexterm zone="ch-system-binutils libctf-nobfd" significance="normal">
            <primary sortas="c-libctf-nobfd">libctf-nobfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libopcodes">
        <term><filename class="libraryfile" moreinfo="none">libopcodes</filename></term>
        <listitem>
          <para>A library for dealing with opcodesâthe <quote>readable
          text</quote> versions of instructions for the processor;
          it is used for building utilities like
          <command moreinfo="none">objdump</command></para>
          <indexterm zone="ch-system-binutils libopcodes" significance="normal">
            <primary sortas="c-libopcodes">libopcodes</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-gmp" role="wrap">
  <?dbhtml filename="gmp.html"?>

  <sect1info condition="script">
    <productname class="trade">gmp</productname>
    <productnumber>6.2.1</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz</address>
  </sect1info>

  <title>GMP-6.2.1</title>

  <indexterm zone="ch-system-gmp" significance="normal">
    <primary sortas="a-GMP">GMP</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The GMP package contains math libraries. These have useful functions
    for arbitrary precision arithmetic.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.0 SBU</seg>
        <seg>52 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of GMP</title>

    <note>
      <para>If you are building for 32-bit x86, but you have a CPU which is
      capable of running 64-bit code <emphasis>and</emphasis> you have specified
      <envar>CFLAGS</envar> in the environment, the configure script will
      attempt to configure for 64-bits and fail.
      Avoid this by invoking the configure command below with
<screen role="nodump" format="linespecific"><userinput moreinfo="none"><parameter moreinfo="none">ABI=32</parameter> ./configure ...</userinput></screen></para>
    </note>

    <note>
      <para>The default settings of GMP produce libraries optimized for
      the host processor.  If libraries suitable for processors less
      capable than the host's CPU are desired, generic libraries can be 
      created by running the following:

<screen role="nodump" format="linespecific"><userinput moreinfo="none">cp -v configfsf.guess config.guess
cp -v configfsf.sub   config.sub</userinput></screen></para>
    </note>

    <para>Prepare GMP for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr    \
            --enable-cxx     \
            --disable-static \
            --docdir=/usr/share/doc/gmp-6.2.1</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-cxx</parameter></term>
        <listitem>
          <para>This parameter enables C++ support</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--docdir=/usr/share/doc/gmp-6.2.1</parameter></term>
        <listitem>
          <para>This variable specifies the correct place for the
          documentation.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package and generate the HTML documentation:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make
make html</userinput></screen>

    <important>
      <para>The test suite for GMP in this section is considered critical.
      Do not skip it under any circumstances.</para>
    </important>

    <para>Test the results:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check 2&gt;&amp;1 | tee gmp-check-log</userinput></screen>
 
    <caution><para>The code in gmp is highly optimized for the processor where
    it is built. Occasionally, the code that detects the processor misidentifies
    the system capabilities and there will be errors in the tests or other
    applications using the gmp libraries with the message "Illegal
    instruction".  In this case, gmp should be reconfigured with the option
    --build=x86_64-pc-linux-gnu and rebuilt.</para></caution>

    <para>Ensure that all 197 tests in the test suite passed.
    Check the results by issuing the following command:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">awk '/# PASS:/{total+=$3} ; END{print total}' gmp-check-log</userinput></screen>

    <para>Install the package and its documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
make install-html</userinput></screen>

  </sect2>

  <sect2 id="contents-gmp" role="content">
    <title>Contents of GMP</title>

    <segmentedlist>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>libgmp.so and libgmpxx.so</seg>
        <seg>/usr/share/doc/gmp-6.2.1</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libgmp">
        <term><filename class="libraryfile" moreinfo="none">libgmp</filename></term>
        <listitem>
          <para>Contains precision math functions</para>
          <indexterm zone="ch-system-gmp libgmp" significance="normal">
            <primary sortas="c-libgmp">libgmp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgmpxx">
        <term><filename class="libraryfile" moreinfo="none">libgmpxx</filename></term>
        <listitem>
          <para>Contains C++ precision math functions</para>
          <indexterm zone="ch-system-gmp libgmpxx" significance="normal">
            <primary sortas="c-libgmpxx">libgmpxx</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-mpfr" role="wrap">
  <?dbhtml filename="mpfr.html"?>

  <sect1info condition="script">
    <productname class="trade">mpfr</productname>
    <productnumber>4.1.0</productnumber>
    <address format="linespecific">https://www.mpfr.org/mpfr-4.1.0/mpfr-4.1.0.tar.xz</address>
  </sect1info>

  <title>MPFR-4.1.0</title>

  <indexterm zone="ch-system-mpfr" significance="normal">
    <primary sortas="a-MPFR">MPFR</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The MPFR package contains functions for multiple precision
    math.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.8 SBU</seg>
        <seg>38 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of MPFR</title>

    <para>Prepare MPFR for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr        \
            --disable-static     \
            --enable-thread-safe \
            --docdir=/usr/share/doc/mpfr-4.1.0</userinput></screen>

    <para>Compile the package and generate the HTML documentation:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make
make html</userinput></screen>

    <important>
      <para>The test suite for MPFR in this section is considered critical.
      Do not skip it under any circumstances.</para>
    </important>

    <para>Test the results and ensure that all tests passed:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package and its documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
make install-html</userinput></screen>

  </sect2>


  <sect2 id="contents-mpfr" role="content">
    <title>Contents of MPFR</title>

    <segmentedlist>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>libmpfr.so</seg>
        <seg>/usr/share/doc/mpfr-4.1.0</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libmpfr">
        <term><filename class="libraryfile" moreinfo="none">libmpfr</filename></term>
        <listitem>
          <para>Contains multiple-precision math functions</para>
          <indexterm zone="ch-system-mpfr libmpfr" significance="normal">
            <primary sortas="c-libmpfr">libmpfr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-mpc" role="wrap">
  <?dbhtml filename="mpc.html"?>

  <sect1info condition="script">
    <productname class="trade">mpc</productname>
    <productnumber>1.2.1</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/mpc/mpc-1.2.1.tar.gz</address>
  </sect1info>

  <title>MPC-1.2.1</title>

  <indexterm zone="ch-system-mpc" significance="normal">
    <primary sortas="a-MPC">MPC</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The MPC package contains a library for the arithmetic of complex
    numbers with arbitrarily high precision and correct rounding of the
    result.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.3 SBU</seg>
        <seg>21 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of MPC</title>

    <para>Prepare MPC for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr    \
            --disable-static \
            --docdir=/usr/share/doc/mpc-1.2.1</userinput></screen>

    <para>Compile the package and generate the HTML documentation:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make
make html</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package and its documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
make install-html</userinput></screen>

  </sect2>


  <sect2 id="contents-mpc" role="content">
    <title>Contents of MPC</title>

    <segmentedlist>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directory</segtitle>

      <seglistitem>
        <seg>libmpc.so</seg>
        <seg>/usr/share/doc/mpc-1.2.1</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libmpc">
        <term><filename class="libraryfile" moreinfo="none">libmpc</filename></term>
        <listitem>
          <para>Contains complex math functions</para>
          <indexterm zone="ch-system-mpc libmpc" significance="normal">
            <primary sortas="c-libmpc">libmpc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-attr" role="wrap">
  <?dbhtml filename="attr.html"?>

  <sect1info condition="script">
    <productname class="trade">attr</productname>
    <productnumber>2.5.1</productnumber>
    <address format="linespecific">https://download.savannah.gnu.org/releases/attr/attr-2.5.1.tar.gz</address>
  </sect1info>

  <title>Attr-2.5.1</title>

  <indexterm zone="ch-system-attr" significance="normal">
    <primary sortas="a-Attr">Attr</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The attr package contains utilities to administer the extended
    attributes on filesystem objects.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>4.1 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Attr</title>

    <para>Prepare Attr for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr     \
            --disable-static  \
            --sysconfdir=/etc \
            --docdir=/usr/share/doc/attr-2.5.1</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>The tests need to be run on a filesystem that supports extended
    attributes such as the ext2, ext3, or ext4 filesystems. 
    To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-attr" role="content">
    <title>Contents of Attr</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>attr, getfattr, and setfattr</seg>
        <seg>libattr.so</seg>
        <seg>/usr/include/attr and /usr/share/doc/attr-2.5.1</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="attr">
        <term><command moreinfo="none">attr</command></term>
        <listitem>
          <para>Extends attributes on filesystem objects</para>
          <indexterm zone="ch-system-attr attr" significance="normal">
            <primary sortas="b-attr">attr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getfattr">
        <term><command moreinfo="none">getfattr</command></term>
        <listitem>
          <para>Gets the extended attributes of filesystem objects</para>
          <indexterm zone="ch-system-attr getfattr" significance="normal">
            <primary sortas="b-getfattr">getfattr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setfattr">
        <term><command moreinfo="none">setfattr</command></term>
        <listitem>
          <para>Sets the extended attributes of filesystem objects</para>
          <indexterm zone="ch-system-attr setfattr" significance="normal">
            <primary sortas="b-setfattr">setfattr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libattr">
        <term><filename class="libraryfile" moreinfo="none">libattr</filename></term>
        <listitem>
          <para>Contains the library functions for manipulating extended attributes</para>
          <indexterm zone="ch-system-attr libattr" significance="normal">
            <primary sortas="c-libattr">libattr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-acl" role="wrap">
  <?dbhtml filename="acl.html"?>

  <sect1info condition="script">
    <productname class="trade">acl</productname>
    <productnumber>2.3.1</productnumber>
    <address format="linespecific">https://download.savannah.gnu.org/releases/acl/acl-2.3.1.tar.xz</address>
  </sect1info>

  <title>Acl-2.3.1</title>

  <indexterm zone="ch-system-acl" significance="normal">
    <primary sortas="a-Acl">Acl</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Acl package contains utilities to administer Access Control Lists,
    which are used to define more fine-grained discretionary access rights for
    files and directories.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>6.1 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Acl</title>

    <para>Prepare Acl for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr         \
            --disable-static      \
            --docdir=/usr/share/doc/acl-2.3.1</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>The Acl tests need to be run on a filesystem that supports access
    controls after <application moreinfo="none">Coreutils</application> has been built with the
    Acl libraries.  If desired, return to this package and run <command moreinfo="none">make
    check</command> after <application moreinfo="none">Coreutils</application> has been built
    later in this chapter.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-acl" role="content">
    <title>Contents of Acl</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>chacl, getfacl, and setfacl</seg>
        <seg>libacl.so</seg>
        <seg>/usr/include/acl and /usr/share/doc/acl-2.3.1</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="chacl">
        <term><command moreinfo="none">chacl</command></term>
        <listitem>
          <para>Changes the access control list of a file
          or directory</para>
          <indexterm zone="ch-system-acl chacl" significance="normal">
            <primary sortas="b-chacl">chacl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getfacl">
        <term><command moreinfo="none">getfacl</command></term>
        <listitem>
          <para>Gets file access control lists</para>
          <indexterm zone="ch-system-acl getfacl" significance="normal">
            <primary sortas="b-getfacl">getfacl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setfacl">
        <term><command moreinfo="none">setfacl</command></term>
        <listitem>
          <para>Sets file access control lists</para>
          <indexterm zone="ch-system-acl setfacl" significance="normal">
            <primary sortas="b-setfacl">setfacl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libacl">
        <term><filename class="libraryfile" moreinfo="none">libacl</filename></term>
        <listitem>
          <para>Contains the  library functions for manipulating Access Control Lists</para>
          <indexterm zone="ch-system-acl libacl" significance="normal">
            <primary sortas="c-libacl">libacl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-libcap" role="wrap">
  <?dbhtml filename="libcap.html"?>

  <sect1info condition="script">
    <productname class="trade">libcap</productname>
    <productnumber>2.53</productnumber>
    <address format="linespecific">https://www.kernel.org/pub/linux/libs/security/linux-privs/libcap2/libcap-2.53.tar.xz</address>
  </sect1info>

  <title>Libcap-2.53</title>

  <indexterm zone="ch-system-libcap" significance="normal">
    <primary sortas="a-Libcap">Libcap</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Libcap package implements the user-space interfaces to the POSIX
    1003.1e capabilities available in Linux kernels. These capabilities are a
    partitioning of the all powerful root privilege into a set of distinct
    privileges.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>3.2 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Libcap</title>

    <para>Prevent static libraries from being installed:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i '/install -m.*STA/d' libcap/Makefile</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make prefix=/usr lib=lib</userinput></screen>

    <variablelist>
      <title>The meaning of the make option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">lib=lib</parameter></term>
        <listitem>
          <para>This parameter sets the library directory to
          <filename moreinfo="none">/usr/lib</filename> rather than
          <filename moreinfo="none">/usr/lib64</filename> on x86_64. It has no effect on
          x86.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make test</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make prefix=/usr lib=lib install</userinput></screen>

    <para>Adjust the permission of the shared libraries:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">chmod -v 755 /usr/lib/lib{cap,psx}.so.2.53</userinput></screen>

  </sect2>

  <sect2 id="contents-libcap" role="content">
    <title>Contents of Libcap</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>

      <seglistitem>
        <seg>capsh, getcap, getpcaps, and setcap</seg>
        <seg>libcap.so and libpsx.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="capsh">
        <term><command moreinfo="none">capsh</command></term>
        <listitem>
          <para>A shell wrapper to explore and constrain capability support</para>
          <indexterm zone="ch-system-libcap capsh" significance="normal">
            <primary sortas="b-capsh">capsh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getcap">
        <term><command moreinfo="none">getcap</command></term>
        <listitem>
          <para>Examines file capabilities</para>
          <indexterm zone="ch-system-libcap getcap" significance="normal">
            <primary sortas="b-getcap">getcap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getpcaps">
        <term><command moreinfo="none">getpcaps</command></term>
        <listitem>
          <para>Displays the capabilities on the queried process(es)</para>
          <indexterm zone="ch-system-libcap getpcaps" significance="normal">
            <primary sortas="b-getpcaps">getpcaps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setcap">
        <term><command moreinfo="none">setcap</command></term>
        <listitem>
          <para>Sets file capabilities</para>
          <indexterm zone="ch-system-libcap setcap" significance="normal">
            <primary sortas="b-setcap">setcap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcap">
        <term><filename class="libraryfile" moreinfo="none">libcap</filename></term>
        <listitem>
          <para>Contains the library functions for manipulating POSIX 1003.1e
          capabilities</para>
          <indexterm zone="ch-system-libcap libcap" significance="normal">
            <primary sortas="c-libcap">libcap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpsx">
        <term><filename class="libraryfile" moreinfo="none">libpsx</filename></term>
        <listitem>
          <para>Contains functions to support POSIX semantics for syscalls
          associated with the pthread library</para>
          <indexterm zone="ch-system-libcap libpsx" significance="normal">
            <primary sortas="c-libpsx">libpsx</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-shadow" role="wrap">
  <?dbhtml filename="shadow.html"?>

  <sect1info condition="script">
    <productname class="trade">shadow</productname>
    <productnumber>4.9</productnumber>
    <address format="linespecific">https://github.com/shadow-maint/shadow/releases/download/v4.9/shadow-4.9.tar.xz</address>
  </sect1info>

  <title>Shadow-4.9</title>

  <indexterm zone="ch-system-shadow" significance="normal">
    <primary sortas="a-Shadow">Shadow</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Shadow package contains programs for handling passwords in a secure
    way.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>45 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Shadow</title>

    <note>
      <para>If you would like to enforce the use of strong passwords, refer to
      <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/cracklib.html"/> for installing
      CrackLib prior to building Shadow. Then add
      <parameter moreinfo="none">--with-libcrack</parameter> to the <command moreinfo="none">configure</command>
      command below.</para>
    </note>

    <para>Disable the installation of the <command moreinfo="none">groups</command> program
    and its man pages, as Coreutils provides a better version. Also,
    prevent the installation of manual pages that were already installed in
    <xref linkend="ch-system-man-pages"/>:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i 's/groups$(EXEEXT) //' src/Makefile.in
find man -name Makefile.in -exec sed -i 's/groups\.1 / /'   {} \;
find man -name Makefile.in -exec sed -i 's/getspnam\.3 / /' {} \;
find man -name Makefile.in -exec sed -i 's/passwd\.5 / /'   {} \;</userinput></screen>

    <para id="shadow-login_defs">Instead of using the default
    <emphasis>crypt</emphasis> method, use the more secure
    <emphasis>SHA-512</emphasis> method of password encryption, which also
    allows passwords longer than 8 characters. It is also necessary to change
    the obsolete <filename class="directory" moreinfo="none">/var/spool/mail</filename> location
    for user mailboxes that Shadow uses by default to the <filename class="directory" moreinfo="none">/var/mail</filename> location used currently. And,
    get rid of <filename class="directory" moreinfo="none">/bin</filename> and
    <filename class="directory" moreinfo="none">/sbin</filename> from <envar>PATH</envar>,
    since they are simply symlinks to their counterpart in
    <filename class="directory" moreinfo="none">/usr</filename>.</para>

    <note>
      <para>If <filename class="directory" moreinfo="none">/bin</filename> and/or
      <filename class="directory" moreinfo="none">/sbin</filename> are preferred to be
      left over in <envar>PATH</envar> for some reason, modify
      <envar>PATH</envar> in <filename moreinfo="none">.bashrc</filename> after LFS is
      built.</para>
    </note>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -e 's:#ENCRYPT_METHOD DES:ENCRYPT_METHOD SHA512:' \
    -e 's:/var/spool/mail:/var/mail:'                 \
    -e '/PATH=/{s@/sbin:@@;s@/bin:@@}'                \
    -i etc/login.defs</userinput></screen>

    <note>
      <para>If you chose to build Shadow with Cracklib support, run the following:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">sed -i 's:DICTPATH.*:DICTPATH\t/lib/cracklib/pw_dict:' etc/login.defs</userinput></screen>
    </note>
<!--
    <para>Make a minor change to make the first group number generated
    by useradd 1000:</para>

<screen><userinput remap="pre">sed -i 's/1000/999/' etc/useradd</userinput></screen>
-->
    <para>Fix a simple programming error by modifying a file with following command:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -e "224s/rounds/min_rounds/" -i libmisc/salt.c</userinput></screen>

    <para>Prepare Shadow for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">touch /usr/bin/passwd
./configure --sysconfdir=/etc \
            --with-group-name-max-length=32</userinput></screen>

    <variablelist>
      <title>The meaning of the configure option:</title>

      <varlistentry>
        <term><command moreinfo="none">touch /usr/bin/passwd</command></term>
        <listitem>
          <para>The file <filename moreinfo="none">/usr/bin/passwd</filename> needs
          to exist because its location is harcoded in some programs, and
          the default location if it does not exist is not right.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><parameter moreinfo="none">--with-group-name-max-length=32</parameter></term>
        <listitem>
          <para>The maximum user name is 32 characters.  Make the maximum
          group name the same.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

    <screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>This package does not come with a test suite.</para>

    <para>Install the package:</para>

    <screen format="linespecific"><userinput remap="install" moreinfo="none">make exec_prefix=/usr install
make -C man install-man
mkdir -p /etc/default
useradd -D --gid 999</userinput></screen>

  </sect2>

  <sect2 id="conf-shadow" role="configuration">
    <title>Configuring Shadow</title>

    <indexterm zone="conf-shadow" significance="normal">
      <primary sortas="a-Shadow">Shadow</primary>
      <secondary>configuring</secondary>
    </indexterm>

    <para>This package contains utilities to add, modify, and delete users and
    groups; set and change their passwords; and perform other administrative
    tasks. For a full explanation of what <emphasis>password shadowing</emphasis>
    means, see the <filename moreinfo="none">doc/HOWTO</filename> file within the unpacked
    source tree. If using Shadow support, keep in mind that programs which need
    to verify passwords (display managers, FTP programs, pop3 daemons, etc.)
    must be Shadow-compliant. That is, they need to be able to work with
    shadowed passwords.</para>

    <para>To enable shadowed passwords, run the following command:</para>

<screen format="linespecific"><userinput moreinfo="none">pwconv</userinput></screen>

    <para>To enable shadowed group passwords, run:</para>

<screen format="linespecific"><userinput moreinfo="none">grpconv</userinput></screen>

    <para>Shadow's stock configuration for the <command moreinfo="none">useradd</command>
    utility has a few caveats that need some explanation. First, the default
    action for the <command moreinfo="none">useradd</command> utility is to create the user and
    a group of the same name as the user. By default the user ID (UID) and
    group ID (GID) numbers will begin with 1000. This means if you don't pass
    parameters to <command moreinfo="none">useradd</command>, each user will be a member of a
    unique group on the system. If this behavior is undesirable, you'll need
    to pass the <parameter moreinfo="none">-g</parameter> parameter to
    <command moreinfo="none">useradd</command>. The default parameters are stored in the
    <filename moreinfo="none">/etc/default/useradd</filename> file. You may need to modify two
    parameters in this file to suit your particular needs.</para>

    <variablelist>
      <title><filename moreinfo="none">/etc/default/useradd</filename> Parameter Explanations</title>

      <varlistentry>
        <term><parameter moreinfo="none">GROUP=1000</parameter></term>
        <listitem>
          <para>This parameter sets the beginning of the group numbers used in
          the /etc/group file. You can modify it to anything you desire. Note
          that <command moreinfo="none">useradd</command> will never reuse a UID or GID. If the
          number identified in this parameter is used, it will use the next
          available number after this. Note also that if you don't have a group
          1000 on your system the first time you use <command moreinfo="none">useradd</command>
          without the <parameter moreinfo="none">-g</parameter> parameter, you'll get a message
          displayed on the terminal that says:
          <computeroutput moreinfo="none">useradd: unknown GID 1000</computeroutput>. You may
          disregard this message and group number 1000 will be used.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><parameter moreinfo="none">CREATE_MAIL_SPOOL=yes</parameter></term>
        <listitem>
          <para>This parameter causes <command moreinfo="none">useradd</command> to create a
          mailbox file for the newly created user. <command moreinfo="none">useradd</command>
          will make the group ownership of this file to the
          <systemitem class="groupname" moreinfo="none">mail</systemitem> group with 0660
          permissions. If you would prefer that these mailbox files are not
          created by <command moreinfo="none">useradd</command>, issue the following
          command:</para>

<screen format="linespecific"><userinput moreinfo="none">sed -i 's/yes/no/' /etc/default/useradd</userinput></screen>
        </listitem>
      </varlistentry>

    </variablelist>


  </sect2>

  <sect2 role="configuration">
    <title>Setting the root password</title>

    <para>Choose a password for user <emphasis>root</emphasis> and set it
    by running:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">passwd root</userinput></screen>

  </sect2>

  <sect2 id="contents-shadow" role="content">
    <title>Contents of Shadow</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>chage, chfn, chgpasswd, chpasswd, chsh, expiry, faillog, gpasswd,
        groupadd, groupdel, groupmems, groupmod, grpck, grpconv, grpunconv,
        lastlog, login, logoutd, newgidmap, newgrp, newuidmap, newusers,
        nologin, passwd, pwck, pwconv, pwunconv, sg (link to newgrp), su,
        useradd, userdel, usermod, vigr (link to vipw), and vipw</seg>
        <seg>/etc/default</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="chage">
        <term><command moreinfo="none">chage</command></term>
        <listitem>
          <para>Used to change the maximum number of days between obligatory
          password changes</para>
          <indexterm zone="ch-system-shadow chage" significance="normal">
            <primary sortas="b-chage">chage</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chfn">
        <term><command moreinfo="none">chfn</command></term>
        <listitem>
          <para>Used to change a user's full name and other information</para>
          <indexterm zone="ch-system-shadow chfn" significance="normal">
            <primary sortas="b-chfn">chfn</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chgpasswd">
        <term><command moreinfo="none">chgpasswd</command></term>
        <listitem>
          <para>Used to update group passwords in batch mode</para>
          <indexterm zone="ch-system-shadow chgpasswd" significance="normal">
            <primary sortas="b-chgpasswd">chgpasswd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chpasswd">
        <term><command moreinfo="none">chpasswd</command></term>
        <listitem>
          <para>Used to update user passwords in batch mode</para>
          <indexterm zone="ch-system-shadow chpasswd" significance="normal">
            <primary sortas="b-chpasswd">chpasswd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chsh">
        <term><command moreinfo="none">chsh</command></term>
        <listitem>
          <para>Used to change a user's default login shell</para>
          <indexterm zone="ch-system-shadow chsh" significance="normal">
            <primary sortas="b-chsh">chsh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="expiry">
        <term><command moreinfo="none">expiry</command></term>
        <listitem>
          <para>Checks and enforces the current password expiration policy</para>
          <indexterm zone="ch-system-shadow expiry" significance="normal">
            <primary sortas="b-expiry">expiry</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="faillog">
        <term><command moreinfo="none">faillog</command></term>
        <listitem>
          <para>Is used to examine the log of login failures, to set a maximum
          number of failures before an account is blocked, or to reset the
          failure count</para>
          <indexterm zone="ch-system-shadow faillog" significance="normal">
            <primary sortas="b-faillog">faillog</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gpasswd">
        <term><command moreinfo="none">gpasswd</command></term>
        <listitem>
          <para>Is used to add and delete members and administrators to
          groups</para>
          <indexterm zone="ch-system-shadow gpasswd" significance="normal">
            <primary sortas="b-gpasswd">gpasswd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="groupadd">
        <term><command moreinfo="none">groupadd</command></term>
        <listitem>
          <para>Creates a group with the given name</para>
          <indexterm zone="ch-system-shadow groupadd" significance="normal">
            <primary sortas="b-groupadd">groupadd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="groupdel">
        <term><command moreinfo="none">groupdel</command></term>
        <listitem>
          <para>Deletes the group with the given name</para>
          <indexterm zone="ch-system-shadow groupdel" significance="normal">
            <primary sortas="b-groupdel">groupdel</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="groupmems">
        <term><command moreinfo="none">groupmems</command></term>
        <listitem>
          <para>Allows a user to administer his/her own group membership list
          without the requirement of super user privileges.</para>
          <indexterm zone="ch-system-shadow groupmems" significance="normal">
            <primary sortas="b-groupmems">groupmems</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="groupmod">
        <term><command moreinfo="none">groupmod</command></term>
        <listitem>
          <para>Is used to modify the given group's name or GID</para>
          <indexterm zone="ch-system-shadow groupmod" significance="normal">
            <primary sortas="b-groupmod">groupmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grpck">
        <term><command moreinfo="none">grpck</command></term>
        <listitem>
          <para>Verifies the integrity of the group files
          <filename moreinfo="none">/etc/group</filename> and
          <filename moreinfo="none">/etc/gshadow</filename></para>
          <indexterm zone="ch-system-shadow grpck" significance="normal">
            <primary sortas="b-grpck">grpck</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grpconv">
        <term><command moreinfo="none">grpconv</command></term>
        <listitem>
          <para>Creates or updates the shadow group file from the normal
          group file</para>
          <indexterm zone="ch-system-shadow grpconv" significance="normal">
            <primary sortas="b-grpconv">grpconv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grpunconv">
        <term><command moreinfo="none">grpunconv</command></term>
        <listitem>
          <para>Updates <filename moreinfo="none">/etc/group</filename> from
          <filename moreinfo="none">/etc/gshadow</filename> and then deletes the latter</para>
          <indexterm zone="ch-system-shadow grpunconv" significance="normal">
            <primary sortas="b-grpunconv">grpunconv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lastlog">
        <term><command moreinfo="none">lastlog</command></term>
        <listitem>
          <para>Reports the most recent login of all users or of a
          given user</para>
          <indexterm zone="ch-system-shadow lastlog" significance="normal">
            <primary sortas="b-lastlog">lastlog</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="login">
        <term><command moreinfo="none">login</command></term>
        <listitem>
          <para>Is used by the system to let users sign on</para>
          <indexterm zone="ch-system-shadow login" significance="normal">
            <primary sortas="b-login">login</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="logoutd">
        <term><command moreinfo="none">logoutd</command></term>
        <listitem>
          <para>Is a daemon used to enforce restrictions on log-on time
          and ports</para>
          <indexterm zone="ch-system-shadow logoutd" significance="normal">
            <primary sortas="b-logoutd">logoutd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="newgidmap">
        <term><command moreinfo="none">newgidmap</command></term>
        <listitem>
          <para>Is used to set the gid mapping of a user namespace</para>
          <indexterm zone="ch-system-shadow newgidmap" significance="normal">
            <primary sortas="b-newgidmap">newgidmap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="newgrp">
        <term><command moreinfo="none">newgrp</command></term>
        <listitem>
          <para>Is used to change the current GID during a login session</para>
          <indexterm zone="ch-system-shadow newgrp" significance="normal">
            <primary sortas="b-newgrp">newgrp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="newuidmap">
        <term><command moreinfo="none">newuidmap</command></term>
        <listitem>
          <para>Is used to set the uid mapping of a user namespace</para>
          <indexterm zone="ch-system-shadow newuidmap" significance="normal">
            <primary sortas="b-newuidmap">newuidmap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="newusers">
        <term><command moreinfo="none">newusers</command></term>
        <listitem>
          <para>Is used to create or update an entire series of user
          accounts</para>
          <indexterm zone="ch-system-shadow newusers" significance="normal">
            <primary sortas="b-newusers">newusers</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nologin">
        <term><command moreinfo="none">nologin</command></term>
        <listitem>
          <para>Displays a message that an account is not available; it is designed
          to be used as the default shell for accounts that have been
          disabled</para>
          <indexterm zone="ch-system-shadow nologin" significance="normal">
            <primary sortas="b-nologin">nologin</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="passwd">
        <term><command moreinfo="none">passwd</command></term>
        <listitem>
          <para>Is used to change the password for a user or group account</para>
          <indexterm zone="ch-system-shadow passwd" significance="normal">
            <primary sortas="b-passwd">passwd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pwck">
        <term><command moreinfo="none">pwck</command></term>
        <listitem>
          <para>Verifies the integrity of the password files
          <filename moreinfo="none">/etc/passwd</filename> and
          <filename moreinfo="none">/etc/shadow</filename></para>
          <indexterm zone="ch-system-shadow pwck" significance="normal">
            <primary sortas="b-pwck">pwck</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pwconv">
        <term><command moreinfo="none">pwconv</command></term>
        <listitem>
          <para>Creates or updates the shadow password file from the normal
          password file</para>
          <indexterm zone="ch-system-shadow pwconv" significance="normal">
            <primary sortas="b-pwconv">pwconv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pwunconv">
        <term><command moreinfo="none">pwunconv</command></term>
        <listitem>
          <para>Updates <filename moreinfo="none">/etc/passwd</filename> from
          <filename moreinfo="none">/etc/shadow</filename> and then deletes the latter</para>
          <indexterm zone="ch-system-shadow pwunconv" significance="normal">
            <primary sortas="b-pwunconv">pwunconv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sg">
        <term><command moreinfo="none">sg</command></term>
        <listitem>
          <para>Executes a given command while the user's GID
          is set to that of the given group</para>
          <indexterm zone="ch-system-shadow sg" significance="normal">
            <primary sortas="b-sg">sg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="su">
        <term><command moreinfo="none">su</command></term>
        <listitem>
          <para>Runs a shell with substitute user and group IDs</para>
          <indexterm zone="ch-system-shadow su" significance="normal">
            <primary sortas="b-su">su</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="useradd">
        <term><command moreinfo="none">useradd</command></term>
        <listitem>
          <para>Creates a new user with the given name, or updates the default
          new-user information</para>
          <indexterm zone="ch-system-shadow useradd" significance="normal">
            <primary sortas="b-useradd">useradd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="userdel">
        <term><command moreinfo="none">userdel</command></term>
        <listitem>
          <para>Deletes the given user account</para>
          <indexterm zone="ch-system-shadow userdel" significance="normal">
            <primary sortas="b-userdel">userdel</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="usermod">
        <term><command moreinfo="none">usermod</command></term>
        <listitem>
          <para>Is used to modify the given user's login name, User
          Identification (UID), shell, initial group, home directory, etc.</para>
          <indexterm zone="ch-system-shadow usermod" significance="normal">
            <primary sortas="b-usermod">usermod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vigr">
        <term><command moreinfo="none">vigr</command></term>
        <listitem>
          <para>Edits the <filename moreinfo="none">/etc/group</filename> or
          <filename moreinfo="none">/etc/gshadow</filename> files</para>
          <indexterm zone="ch-system-shadow vigr" significance="normal">
            <primary sortas="b-vigr">vigr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vipw">
        <term><command moreinfo="none">vipw</command></term>
        <listitem>
          <para>Edits the <filename moreinfo="none">/etc/passwd</filename> or
          <filename moreinfo="none">/etc/shadow</filename> files</para>
          <indexterm zone="ch-system-shadow vipw" significance="normal">
            <primary sortas="b-vipw">vipw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-gcc" role="wrap">
  <?dbhtml filename="gcc.html"?>

  <sect1info condition="script">
    <productname class="trade">gcc</productname>
    <productnumber>11.2.0</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gcc/gcc-11.2.0/gcc-11.2.0.tar.xz</address>
  </sect1info>

  <title>GCC-11.2.0</title>

  <indexterm zone="ch-system-gcc" significance="normal">
    <primary sortas="a-GCC">GCC</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The GCC package contains the GNU compiler collection, which includes
    the C and C++ compilers.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>164 SBU (with tests)</seg>
        <seg>4.3 GB </seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of GCC</title>

    <para>At first, fix an issue breaking
    <filename class="libraryfile" moreinfo="none">libasan.a</filename> building this package
    with Glibc-2.34:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -e '/static.*SIGSTKSZ/d' \
    -e 's/return kAltStackSize/return SIGSTKSZ * 4/' \
    -i libsanitizer/sanitizer_common/sanitizer_posix_libcdep.cpp</userinput></screen>

    <para>If building on x86_64, change the default directory name for 64-bit
    libraries to <quote>lib</quote>:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
  ;;
esac</userinput></screen>

    <para>The GCC documentation recommends building GCC in a dedicated build directory:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare GCC for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../configure --prefix=/usr            \
             LD=ld                    \
             --enable-languages=c,c++ \
             --disable-multilib       \
             --disable-bootstrap      \
             --with-system-zlib</userinput></screen>

    <para>Note that for other programming languages there are some prerequisites that
    are not yet available. See the
    <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/gcc.html">BLFS Book GCC page</ulink>
    for instructions on how to build all of GCC's supported languages.</para>

    <variablelist>
      <title>The meaning of the new configure parameters:</title>

      <varlistentry>
        <term><parameter moreinfo="none">LD=ld</parameter></term>
        <listitem>
          <para>This parameter makes the configure script use the ld installed
          by the binutils built earlier in this chapter, rather than
          the cross-built version which would otherwise be used.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--with-system-zlib</parameter></term>
        <listitem>
          <para>This switch tells GCC to link to the system installed copy of
          the zlib library, rather than its own internal copy.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <important>
      <para>In this section, the test suite for GCC is considered
      critical. Do not skip it under any circumstance.</para>
    </important>

   <para>One set of tests in the GCC test suite is known to exhaust the default
   stack, so increase the stack size prior to running the tests:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">ulimit -s 32768</userinput></screen>

    <para>Test the results as a non-privileged user, but do not stop at errors:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">chown -Rv tester . 
su tester -c "PATH=$PATH make -k check"</userinput></screen>

    <para>To receive a summary of the test suite results, run:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">../contrib/test_summary</userinput></screen>

    <para>For only the summaries, pipe the output through
    <userinput moreinfo="none">grep -A7 Summ</userinput>.</para>

    <para>Results can be compared with those located at <ulink url="https://www.linuxfromscratch.org/lfs/build-logs/11.0/"/> and
    <ulink url="https://gcc.gnu.org/ml/gcc-testresults/"/>.</para>

    <!-- https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101081 -->
    <para>Eight tests related to analyzer are known to fail.</para>

    <!-- https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101751 -->
    <para>One test named <filename moreinfo="none">asan_test.C</filename> is known to
    fail.</para>

    <!-- https://gcc.gnu.org/bugzilla/show_bug.cgi?id=100117 -->
    <para>In libstdc++, one test named <filename moreinfo="none">49745.cc</filename> is
    known to fail because the header dependencies in glibc have
    changed.</para>

    <para>In libstdc++, one numpunct test and six tests related to get_time are
    known to fail.  These are all because the locale definitions in glibc have
    changed but libstdc++ does not currently support those changes.</para>

    <para>A few unexpected failures cannot always be avoided. The GCC developers
    are usually aware of these issues, but have not resolved them yet.
    Unless the test results are vastly different from those at the above URL,
    it is safe to continue.</para>

    <!--note><para>
      On some combinations of kernel configuration and AMD processors
      there may be more than 1100 failures in the gcc.target/i386/mpx
      tests (which are designed to test the MPX option on recent
      Intel processors). These can safely be ignored on AMD
      processors. These tests will also fail on Intel processors if MPX support
      is not enabled in the kernel even though it is present on the CPU.
    </para></note-->

    <!-- PR 91085, will be fixed in GCC 12. -->
    <para>Install the package and remove an unneeded directory:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
rm -rf /usr/lib/gcc/$(gcc -dumpmachine)/11.2.0/include-fixed/bits/</userinput></screen>

    <para>The GCC build directory is owned by <systemitem class="username" moreinfo="none">
    tester</systemitem> now and the ownership of the installed header
    directory (and its content) will be incorrect.  Change the ownership to
    <systemitem class="username" moreinfo="none">root</systemitem> user and group:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">chown -v -R root:root \
    /usr/lib/gcc/*linux-gnu/11.2.0/include{,-fixed}</userinput></screen>

    <para>Create a symlink required by the <ulink url="https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch03s09.html">FHS</ulink>
    for "historical" reasons.</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">ln -svr /usr/bin/cpp /usr/lib</userinput></screen>
  <!-- already done earlier
    <para>Many packages use the name <command>cc</command> to call the C
    compiler. To satisfy those packages, create a symlink:</para>

<screen><userinput remap="install">ln -sv gcc /usr/bin/cc</userinput></screen>
  -->
    <para>Add a compatibility symlink to enable building programs with
    Link Time Optimization (LTO):</para> 

<screen format="linespecific"><userinput remap="install" moreinfo="none">ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/11.2.0/liblto_plugin.so \
        /usr/lib/bfd-plugins/</userinput></screen>

    <para>Now that our final toolchain is in place, it is important to again ensure
    that compiling and linking will work as expected. We do this by performing
    some sanity checks:</para>

    <screen os="a" format="linespecific"><userinput moreinfo="none">echo 'int main(){}' &gt; dummy.c
cc dummy.c -v -Wl,--verbose &amp;&gt; dummy.log
readelf -l a.out | grep ': /lib'</userinput></screen>

    <para os="b">There should be no errors,
  and the output of the last command will be (allowing for
  platform-specific differences in the dynamic linker name):</para>

    <screen os="c" format="linespecific"><computeroutput moreinfo="none">[Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]</computeroutput></screen>

    <para os="d">Now make sure that we're setup to use the correct start files:</para>

    <screen os="e" format="linespecific"><userinput moreinfo="none">grep -o '/usr/lib.*/crt[1in].*succeeded' dummy.log</userinput></screen>

    <para os="f">The output of the last command should be:</para>

<screen format="linespecific"><computeroutput moreinfo="none">/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../lib/crt1.o succeeded
/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../lib/crti.o succeeded
/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../lib/crtn.o succeeded</computeroutput></screen>

  <para>Depending on your machine architecture, the above may differ slightly.
  The difference will be the name of the directory
  after <filename class="directory" moreinfo="none">/usr/lib/gcc</filename>. The important
  thing to look for here is that <command moreinfo="none">gcc</command> has found all three
  <filename moreinfo="none">crt*.o</filename> files under the
  <filename class="directory" moreinfo="none">/usr/lib</filename> directory.</para>

    <para os="g">Verify that the compiler is searching for the correct header
  files:</para>

<screen format="linespecific"><userinput moreinfo="none">grep -B4 '^ /usr/include' dummy.log</userinput></screen>

    <para os="h">This command should return the following output:</para>

<screen format="linespecific"><computeroutput moreinfo="none">#include &lt;...&gt; search starts here:
 /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/include
 /usr/local/include
 /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/include-fixed
 /usr/include</computeroutput></screen>

   <para>Again, the directory named after your target triplet may be
   different than the above, depending on your system architecture.</para>

    <para os="i">Next, verify that the new linker is being used with the correct search paths:</para>

    <screen os="j" format="linespecific"><userinput moreinfo="none">grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g'</userinput></screen>

    <para os="k">References to paths that have components with '-linux-gnu' should
  be ignored, but otherwise the output of the last command should be:</para>

<screen format="linespecific"><computeroutput moreinfo="none">SEARCH_DIR("/usr/x86_64-pc-linux-gnu/lib64")
SEARCH_DIR("/usr/local/lib64")
SEARCH_DIR("/lib64")
SEARCH_DIR("/usr/lib64")
SEARCH_DIR("/usr/x86_64-pc-linux-gnu/lib")
SEARCH_DIR("/usr/local/lib")
SEARCH_DIR("/lib")
SEARCH_DIR("/usr/lib");</computeroutput></screen>

   <para>A 32-bit system may see a few different directories. For example, here
   is the output from an i686 machine:</para>

<screen format="linespecific"><computeroutput moreinfo="none">SEARCH_DIR("/usr/i686-pc-linux-gnu/lib32")
SEARCH_DIR("/usr/local/lib32")
SEARCH_DIR("/lib32")
SEARCH_DIR("/usr/lib32")
SEARCH_DIR("/usr/i686-pc-linux-gnu/lib")
SEARCH_DIR("/usr/local/lib")
SEARCH_DIR("/lib")
SEARCH_DIR("/usr/lib");</computeroutput></screen>

    <para os="l">Next make sure that we're using the correct libc:</para>

    <screen os="m" format="linespecific"><userinput moreinfo="none">grep "/lib.*/libc.so.6 " dummy.log</userinput></screen>

    <para os="n">The output of the last command should be:</para>

    <screen os="o" format="linespecific"><computeroutput moreinfo="none">attempt to open /usr/lib/libc.so.6 succeeded</computeroutput></screen>

    <para os="p">Make sure GCC is using the correct dynamic linker:</para>

    <screen os="q" format="linespecific"><userinput moreinfo="none">grep found dummy.log</userinput></screen>

    <para os="r">The output of the last command should be (allowing for
  platform-specific differences in dynamic linker name):</para>

    <screen os="s" format="linespecific"><computeroutput moreinfo="none">found ld-linux-x86-64.so.2 at /usr/lib/ld-linux-x86-64.so.2</computeroutput></screen>

    <para os="t">If the output does not appear as shown above or is not received
  at all, then something is seriously wrong. Investigate and retrace the
  steps to find out where the problem is and correct it. <!--The most likely
  reason is that something went wrong with the specs file adjustment.--> Any
  issues will need to be resolved before continuing with the process.</para>

    <para os="u">Once everything is working correctly, clean up the test files:</para>

    <screen os="v" format="linespecific"><userinput moreinfo="none">rm -v dummy.c a.out dummy.log</userinput></screen>

    <para>Finally, move a misplaced file:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">mkdir -pv /usr/share/gdb/auto-load/usr/lib
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib</userinput></screen>

  </sect2>

  <sect2 id="contents-gcc" role="content">
    <title>Contents of GCC</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>c++, cc (link to gcc), cpp, g++, gcc,
        gcc-ar, gcc-nm, gcc-ranlib, gcov, gcov-dump, and gcov-tool</seg>

        <seg>libasan.{a,so}, libatomic.{a,so}, libcc1.so, libgcc.a, libgcc_eh.a,
        libgcc_s.so, libgcov.a, libgomp.{a,so}, libitm.{a,so},
        liblsan.{a,so}, liblto_plugin.so,
        libquadmath.{a,so}, libssp.{a,so}, libssp_nonshared.a,
        libstdc++.{a,so}, libstdc++fs.a, libsupc++.a, libtsan.{a,so},
        and libubsan.{a,so}</seg>

        <seg>/usr/include/c++, /usr/lib/gcc, /usr/libexec/gcc, and 
        /usr/share/gcc-11.2.0</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="c">
        <term><command moreinfo="none">c++</command></term>
        <listitem>
          <para>The C++ compiler</para>
          <indexterm zone="ch-system-gcc c" significance="normal">
            <primary sortas="b-c++">c++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cc">
        <term><command moreinfo="none">cc</command></term>
        <listitem>
          <para>The C compiler</para>
          <indexterm zone="ch-system-gcc cc" significance="normal">
            <primary sortas="b-cc">cc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cpp">
        <term><command moreinfo="none">cpp</command></term>
        <listitem>
          <para>The C preprocessor; it is used by the compiler to expand the
          #include, #define, and similar statements in the source files</para>
          <indexterm zone="ch-system-gcc cpp" significance="normal">
            <primary sortas="b-cpp">cpp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="g">
        <term><command moreinfo="none">g++</command></term>
        <listitem>
          <para>The C++ compiler</para>
          <indexterm zone="ch-system-gcc g" significance="normal">
            <primary sortas="b-g++">g++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc">
        <term><command moreinfo="none">gcc</command></term>
        <listitem>
          <para>The C compiler</para>
          <indexterm zone="ch-system-gcc gcc" significance="normal">
            <primary sortas="b-gcc">gcc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-ar">
        <term><command moreinfo="none">gcc-ar</command></term>
        <listitem>
          <para>A wrapper around <command moreinfo="none">ar</command> that adds a
          plugin to the command line. This program is only used
          to add "link time optimization" and is not useful with the
          default build options</para>
          <indexterm zone="ch-system-gcc gcc-ar" significance="normal">
            <primary sortas="b-gcc-ar">gc-ar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-nm">
        <term><command moreinfo="none">gcc-nm</command></term>
        <listitem>
          <para>A wrapper around <command moreinfo="none">nm</command> that adds a
          plugin to the command line. This program is only used
          to add "link time optimization" and is not useful with the
          default build options</para>
          <indexterm zone="ch-system-gcc gcc-nm" significance="normal">
            <primary sortas="b-gcc-nm">gc-nm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-ranlib">
        <term><command moreinfo="none">gcc-ranlib</command></term>
        <listitem>
          <para>A wrapper around <command moreinfo="none">ranlib</command> that adds a
          plugin to the command line. This program is only used
          to add "link time optimization" and is not useful with the
          default build options</para>
          <indexterm zone="ch-system-gcc gcc-ranlib" significance="normal">
            <primary sortas="b-gcc-ranlib">gc-ranlib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov">
        <term><command moreinfo="none">gcov</command></term>
        <listitem>
          <para>A coverage testing tool; it is used to analyze programs to
          determine where optimizations will have the most effect</para>
          <indexterm zone="ch-system-gcc gcov" significance="normal">
            <primary sortas="b-gcov">gcov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov-dump">
        <term><command moreinfo="none">gcov-dump</command></term>
        <listitem>
          <para>Offline gcda and gcno profile dump tool</para>
          <indexterm zone="ch-system-gcc gcov-dump" significance="normal">
            <primary sortas="b-gcov-dump">gcov-dump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov-tool">
        <term><command moreinfo="none">gcov-tool</command></term>
        <listitem>
          <para>Offline gcda profile processing tool</para>
          <indexterm zone="ch-system-gcc gcov-tool" significance="normal">
            <primary sortas="b-gcov-tool">gcov-tool</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libasan">
        <term><filename class="libraryfile" moreinfo="none">libasan</filename></term>
        <listitem>
          <para>The Address Sanitizer runtime library</para>
          <indexterm zone="ch-system-gcc libasan" significance="normal">
            <primary sortas="b-libasan">libasan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libatomic">
        <term><filename class="libraryfile" moreinfo="none">libatomic</filename></term>
        <listitem>
          <para>GCC atomic built-in runtime library</para>
          <indexterm zone="ch-system-gcc libatomic" significance="normal">
            <primary sortas="b-libatomic">libatomic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcc1">
        <term><filename class="libraryfile" moreinfo="none">libcc1</filename></term>
        <listitem>
          <para>The C preprocessing library</para>
          <indexterm zone="ch-system-gcc libcc1" significance="normal">
            <primary sortas="b-libcc1">libcc1</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgcc">
        <term><filename class="libraryfile" moreinfo="none">libgcc</filename></term>
        <listitem>
          <para>Contains run-time support for <command moreinfo="none">gcc</command></para>
          <indexterm zone="ch-system-gcc libgcc" significance="normal">
            <primary sortas="c-libgcc">libgcc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgcov">
        <term><filename class="libraryfile" moreinfo="none">libgcov</filename></term>
        <listitem>
          <para>This library is linked in to a program when GCC is instructed
          to enable profiling</para>
          <indexterm zone="ch-system-gcc libgcov" significance="normal">
            <primary sortas="c-libgcov">libgcov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgomp">
        <term><filename class="libraryfile" moreinfo="none">libgomp</filename></term>
        <listitem>
          <para>GNU implementation of the OpenMP API for multi-platform
          shared-memory parallel programming in C/C++ and Fortran</para>
          <indexterm zone="ch-system-gcc libgomp" significance="normal">
            <primary sortas="c-libgomp">libgomp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liblsan">
        <term><filename class="libraryfile" moreinfo="none">liblsan</filename></term>
        <listitem>
          <para>The Leak Sanitizer runtime library</para>
          <indexterm zone="ch-system-gcc liblsan" significance="normal">
            <primary sortas="c-liblsan">liblsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liblto_plugin">
        <term><filename class="libraryfile" moreinfo="none">liblto_plugin</filename></term>
        <listitem>
          <para>GCC's Link Time Optimization (LTO) plugin allows GCC to perform
          optimizations across compilation units</para>
          <indexterm zone="ch-system-gcc liblto_plugin" significance="normal">
            <primary sortas="c-liblto_plugin">liblto_plugin</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libquadmath">
        <term><filename class="libraryfile" moreinfo="none">libquadmath</filename></term>
        <listitem>
          <para>GCC Quad Precision Math Library API</para>
          <indexterm zone="ch-system-gcc libquadmath" significance="normal">
            <primary sortas="c-libquadmath">libquadmath</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libssp">
        <term><filename class="libraryfile" moreinfo="none">libssp</filename></term>
        <listitem>
          <para>Contains routines supporting GCC's stack-smashing protection
          functionality</para>
          <indexterm zone="ch-system-gcc libssp" significance="normal">
            <primary sortas="c-libssp">libssp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libstdc">
        <term><filename class="libraryfile" moreinfo="none">libstdc++</filename></term>
        <listitem>
          <para>The standard C++ library</para>
          <indexterm zone="ch-system-gcc libstdc" significance="normal">
            <primary sortas="c-libstdc++">libstdc++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libstdcfs">
        <term><filename class="libraryfile" moreinfo="none">libstdc++fs</filename></term>
        <listitem>
          <para>ISO/IEC TS 18822:2015 Filesystem library</para>
          <indexterm zone="ch-system-gcc libstdcfs" significance="normal">
            <primary sortas="c-libstdc++fs">libstdc++fs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libsupc">
        <term><filename class="libraryfile" moreinfo="none">libsupc++</filename></term>
        <listitem>
          <para>Provides supporting routines for the C++ programming
          language</para>
          <indexterm zone="ch-system-gcc libsupc" significance="normal">
            <primary sortas="c-libsupc++">libsupc++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtsan">
        <term><filename class="libraryfile" moreinfo="none">libtsan</filename></term>
        <listitem>
          <para>The Thread Sanitizer runtime library</para>
          <indexterm zone="ch-system-gcc libtsan" significance="normal">
            <primary sortas="c-libtsan">libtsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libubsan">
        <term><filename class="libraryfile" moreinfo="none">libubsan</filename></term>
        <listitem>
          <para>The Undefined Behavior Sanitizer runtime library</para>
          <indexterm zone="ch-system-gcc libubsan" significance="normal">
            <primary sortas="c-libubsan">libubsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-pkgconfig" role="wrap">
  <?dbhtml filename="pkg-config.html"?>

  <sect1info condition="script">
    <productname class="trade">pkg-config</productname>
    <productnumber>0.29.2</productnumber>
    <address format="linespecific">https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz</address>
  </sect1info>

  <title>Pkg-config-0.29.2</title>

  <indexterm zone="ch-system-pkgconfig" significance="normal">
    <primary sortas="a-pkgconfig">Pkgconfig</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The pkg-config package contains a tool for passing the include path
    and/or library paths to build tools during the configure and make phases
    of package installations.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.3 SBU</seg>
        <seg>29 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Pkg-config</title>

    <para>Prepare Pkg-config for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr              \
            --with-internal-glib       \
            --disable-host-tool        \
            --docdir=/usr/share/doc/pkg-config-0.29.2</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--with-internal-glib</parameter></term>
        <listitem>
          <para>This will allow pkg-config to use its internal version of
          Glib because an external version is not available in LFS.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-host-tool</parameter></term>
        <listitem>
          <para>This option disables the creation of an undesired hard link
          to the pkg-config program.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-pkgconfig" role="content">
    <title>Contents of Pkg-config</title>

    <segmentedlist>
      <segtitle>Installed program</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>pkg-config</seg>
        <seg>/usr/share/doc/pkg-config-0.29.2</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="pkgconfig">
         <!-- Don't remove the extra space, it prevents a FOP warning. -->
        <term><command moreinfo="none">pkg-config </command></term>
        <listitem>
          <para>Returns meta information for the specified library or package
          </para>
          <indexterm zone="ch-system-pkgconfig pkgconfig" significance="normal">
            <primary sortas="b-pkgconfig">pkg-config</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-ncurses" role="wrap">
  <?dbhtml filename="ncurses.html"?>

  <sect1info condition="script">
    <productname class="trade">ncurses</productname>
    <productnumber>6.2</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/ncurses/ncurses-6.2.tar.gz</address>
  </sect1info>

  <title>Ncurses-6.2</title>

  <indexterm zone="ch-system-ncurses" significance="normal">
    <primary sortas="a-Ncurses">Ncurses</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Ncurses package contains libraries for terminal-independent
    handling of character screens.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.4 SBU</seg>
        <seg>34 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Ncurses</title>

    <para>Prepare Ncurses for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr           \
            --mandir=/usr/share/man \
            --with-shared           \
            --without-debug         \
            --without-normal        \
            --enable-pc-files       \
            --enable-widec</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-widec</parameter></term>
        <listitem>
          <para>This switch causes wide-character libraries (e.g., <filename class="libraryfile" moreinfo="none">libncursesw.so.6.2</filename>)
          to be built instead of normal ones (e.g., <filename class="libraryfile" moreinfo="none">libncurses.so.6.2</filename>).
          These wide-character libraries are usable in both multibyte and
          traditional 8-bit locales, while normal libraries work properly
          only in 8-bit locales. Wide-character and normal libraries are
          source-compatible, but not binary-compatible.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-pc-files</parameter></term>
        <listitem>
          <para>This switch generates and installs .pc files for pkg-config.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--without-normal</parameter></term>
        <listitem>
          <para>This switch disables building and installing most static libraries.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>This package has a test suite, but it can only be run after the
    package has been installed.  The tests reside in the
    <filename class="directory" moreinfo="none">test/</filename> directory.  See the
    <filename moreinfo="none">README</filename> file in that directory for further details.
    </para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Many applications still expect the linker to be able to find
    non-wide-character Ncurses libraries. Trick such applications into linking with
    wide-character libraries by means of symlinks and linker scripts:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">for lib in ncurses form panel menu ; do
    rm -vf                    /usr/lib/lib${lib}.so
    echo "INPUT(-l${lib}w)" &gt; /usr/lib/lib${lib}.so
    ln -sfv ${lib}w.pc        /usr/lib/pkgconfig/${lib}.pc
done</userinput></screen>

    <para>Finally, make sure that old applications that look for
    <filename class="libraryfile" moreinfo="none">-lcurses</filename> at build time are still
    buildable:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">rm -vf                     /usr/lib/libcursesw.so
echo "INPUT(-lncursesw)" &gt; /usr/lib/libcursesw.so
ln -sfv libncurses.so      /usr/lib/libcurses.so</userinput></screen>

    <para>Remove a static library that is not handled by configure:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">rm -fv /usr/lib/libncurses++w.a</userinput></screen>

    <para>If desired, install the Ncurses documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">mkdir -v       /usr/share/doc/ncurses-6.2
cp -v -R doc/* /usr/share/doc/ncurses-6.2</userinput></screen>

    <note>

      <para>The instructions above don't create non-wide-character Ncurses
      libraries since no package installed by compiling from sources would link
      against them at runtime. However, the only known binary-only
      applications that link against non-wide-character Ncurses libraries 
      require version 5.  If you must have such libraries because of some binary-only
      application or to be compliant with LSB, build the package again with the
      following commands:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">make distclean
./configure --prefix=/usr    \
            --with-shared    \
            --without-normal \
            --without-debug  \
            --without-cxx-binding \
            --with-abi-version=5 
make sources libs
cp -av lib/lib*.so.5* /usr/lib</userinput></screen>
    </note>

  </sect2>

  <sect2 id="contents-ncurses" role="content">
    <title>Contents of Ncurses</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>
           captoinfo (link to tic), 
           clear, 
           infocmp, 
           infotocap (link to tic),
           ncursesw6-config, 
           reset (link to tset), 
           tabs, 
           tic, 
           toe, 
           tput, and 
           tset
        </seg>
        <seg>
           libcursesw.so (symlink and linker script to libncursesw.so),
           libformw.so, 
           libmenuw.so, 
           libncursesw.so,
           libpanelw.so, and their non-wide-character counterparts without "w"
              in the library names.</seg>
        <seg>
           /usr/share/tabset, 
           /usr/share/terminfo, and
           /usr/share/doc/ncurses-6.2
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="captoinfo">
        <term><command moreinfo="none">captoinfo</command></term>
        <listitem>
          <para>Converts a termcap description into a terminfo description</para>
          <indexterm zone="ch-system-ncurses captoinfo" significance="normal">
            <primary sortas="b-captoinfo">captoinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clear">
        <term><command moreinfo="none">clear</command></term>
        <listitem>
          <para>Clears the screen, if possible</para>
          <indexterm zone="ch-system-ncurses clear" significance="normal">
            <primary sortas="b-clear">clear</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="infocmp">
        <term><command moreinfo="none">infocmp</command></term>
        <listitem>
          <para>Compares or prints out terminfo descriptions</para>
          <indexterm zone="ch-system-ncurses infocmp" significance="normal">
            <primary sortas="b-infocmp">infocmp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="infotocap">
        <term><command moreinfo="none">infotocap</command></term>
        <listitem>
          <para>Converts a terminfo description into a termcap description</para>
          <indexterm zone="ch-system-ncurses infotocap" significance="normal">
            <primary sortas="b-infotocap">infotocap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ncursesw6-config">
        <term><command moreinfo="none">ncursesw6-config</command></term>
        <listitem>
          <para>Provides configuration information for ncurses</para>
          <indexterm zone="ch-system-ncurses ncursesw6-config" significance="normal">
            <primary sortas="b-ncursesw6-config">ncursesw6-config</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="reset">
        <term><command moreinfo="none">reset</command></term>
        <listitem>
          <para>Reinitializes a terminal to its default values</para>
          <indexterm zone="ch-system-ncurses reset" significance="normal">
            <primary sortas="b-reset">reset</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tabs">
        <term><command moreinfo="none">tabs</command></term>
        <listitem>
          <para>Clears and sets tab stops on a terminal</para>
          <indexterm zone="ch-system-ncurses tabs" significance="normal">
            <primary sortas="b-tabs">tabs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tic">
        <term><command moreinfo="none">tic</command></term>
        <listitem>
          <para>The terminfo entry-description compiler that translates a
          terminfo file from source format into the binary format needed for the
          ncurses library routines [A terminfo file contains information on the
          capabilities of a certain terminal.]</para>
          <indexterm zone="ch-system-ncurses tic" significance="normal">
            <primary sortas="b-tic">tic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="toe">
        <term><command moreinfo="none">toe</command></term>
        <listitem>
          <para>Lists all available terminal types, giving the primary name and
          description for each</para>
          <indexterm zone="ch-system-ncurses toe" significance="normal">
            <primary sortas="b-toe">toe</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tput">
        <term><command moreinfo="none">tput</command></term>
        <listitem>
          <para>Makes the values of terminal-dependent capabilities available to
          the shell; it can also be used to reset or initialize a terminal or
          report its long name</para>
          <indexterm zone="ch-system-ncurses tput" significance="normal">
            <primary sortas="b-tput">tput</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tset">
        <term><command moreinfo="none">tset</command></term>
        <listitem>
          <para>Can be used to initialize terminals</para>
          <indexterm zone="ch-system-ncurses tset" significance="normal">
            <primary sortas="b-tset">tset</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcursesw">
        <term><filename class="libraryfile" moreinfo="none">libcursesw</filename></term>
        <listitem>
          <para>A link to <filename moreinfo="none">libncursesw</filename></para>
          <indexterm zone="ch-system-ncurses libcursesw" significance="normal">
            <primary sortas="c-libcursesw">libcursesw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libncursesw">
        <term><filename class="libraryfile" moreinfo="none">libncursesw</filename></term>
        <listitem>
          <para>Contains functions to display text in many complex ways on a
          terminal screen; a good example of the use of these functions is the
          menu displayed during the kernel's <command moreinfo="none">make
          menuconfig</command></para>
          <indexterm zone="ch-system-ncurses libncursesw" significance="normal">
            <primary sortas="c-libncursesw">libncursesw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libformw">
        <term><filename class="libraryfile" moreinfo="none">libformw</filename></term>
        <listitem>
          <para>Contains functions to implement forms</para>
          <indexterm zone="ch-system-ncurses libformw" significance="normal">
            <primary sortas="c-libformw">libformw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmenuw">
        <term><filename class="libraryfile" moreinfo="none">libmenuw</filename></term>
        <listitem>
          <para>Contains functions to implement menus</para>
          <indexterm zone="ch-system-ncurses libmenuw" significance="normal">
            <primary sortas="c-libmenuw">libmenuw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpanelw">
        <term><filename class="libraryfile" moreinfo="none">libpanelw</filename></term>
        <listitem>
          <para>Contains functions to implement panels</para>
          <indexterm zone="ch-system-ncurses libpanelw" significance="normal">
            <primary sortas="c-libpanelw">libpanelw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-sed" role="wrap">
  <?dbhtml filename="sed.html"?>

  <sect1info condition="script">
    <productname class="trade">sed</productname>
    <productnumber>4.8</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/sed/sed-4.8.tar.xz</address>
  </sect1info>

  <title>Sed-4.8</title>

  <indexterm zone="ch-system-sed" significance="normal">
    <primary sortas="a-Sed">Sed</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Sed package contains a stream editor.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.5 SBU</seg>
        <seg>30 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Sed</title>

    <para>Prepare Sed for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package and generate the HTML documentation:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make
make html</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">chown -Rv tester .
su tester -c "PATH=$PATH make check"</userinput></screen>

    <para>Install the package and its documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
install -d -m755           /usr/share/doc/sed-4.8
install -m644 doc/sed.html /usr/share/doc/sed-4.8</userinput></screen>

  </sect2>

  <sect2 id="contents-sed" role="content">
    <title>Contents of Sed</title>

    <segmentedlist>
      <segtitle>Installed program</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>sed</seg>
        <seg>/usr/share/doc/sed-4.8</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="sed">
        <term><command moreinfo="none">sed</command></term>
        <listitem>
          <para>Filters and transforms text files in a single pass</para>
          <indexterm zone="ch-system-sed sed" significance="normal">
            <primary sortas="b-sed">sed</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-psmisc" role="wrap">
  <?dbhtml filename="psmisc.html"?>

  <sect1info condition="script">
    <productname class="trade">psmisc</productname>
    <productnumber>23.4</productnumber>
    <address format="linespecific">https://sourceforge.net/projects/psmisc/files/psmisc/psmisc-23.4.tar.xz</address>
  </sect1info>

  <title>Psmisc-23.4</title>

  <indexterm zone="ch-system-psmisc" significance="normal">
    <primary sortas="a-Psmisc">Psmisc</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Psmisc package contains programs for displaying information about
    running processes.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>5.6 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Psmisc</title>

    <para>Prepare Psmisc for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>This package does not come with a test suite.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-psmisc" role="content">
    <title>Contents of Psmisc</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>fuser, killall, peekfd, prtstat, pslog, pstree, and pstree.x11 (link to pstree)</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="fuser">
        <term><command moreinfo="none">fuser</command></term>
        <listitem>
          <para>Reports the Process IDs (PIDs) of processes that use the given
          files or file systems</para>
          <indexterm zone="ch-system-psmisc fuser" significance="normal">
            <primary sortas="b-fuser">fuser</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="killall">
        <term><command moreinfo="none">killall</command></term>
        <listitem>
          <para>Kills processes by name; it sends a signal to all processes
          running any of the given commands</para>
          <indexterm zone="ch-system-psmisc killall" significance="normal">
            <primary sortas="b-killall">killall</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="peekfd">
        <term><command moreinfo="none">peekfd</command></term>
        <listitem>
          <para>Peek at file descriptors of a running process, given its
          PID</para>
          <indexterm zone="ch-system-psmisc peekfd" significance="normal">
            <primary sortas="b-peekfd">peekfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="prtstat">
        <term><command moreinfo="none">prtstat</command></term>
        <listitem>
          <para>Prints information about a process</para>
          <indexterm zone="ch-system-psmisc prtstat" significance="normal">
            <primary sortas="b-prtstat">prtstat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pslog">
        <term><command moreinfo="none">pslog</command></term>
        <listitem>
          <para>Reports current logs path of a process</para>
          <indexterm zone="ch-system-psmisc pslog" significance="normal">
            <primary sortas="b-pslog">pslog</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pstree">
        <term><command moreinfo="none">pstree</command></term>
        <listitem>
          <para>Displays running processes as a tree</para>
          <indexterm zone="ch-system-psmisc pstree" significance="normal">
            <primary sortas="b-pstree">pstree</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pstree.x11">
        <term><command moreinfo="none">pstree.x11</command></term>
        <listitem>
          <para>Same as <command moreinfo="none">pstree</command>, except that it waits for
          confirmation before exiting</para>
          <indexterm zone="ch-system-psmisc pstree.x11" significance="normal">
            <primary sortas="b-pstree.x11">pstree.x11</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-gettext" role="wrap">
  <?dbhtml filename="gettext.html"?>

  <sect1info condition="script">
    <productname class="trade">gettext</productname>
    <productnumber>0.21</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gettext/gettext-0.21.tar.xz</address>
  </sect1info>

  <title>Gettext-0.21</title>

  <indexterm zone="ch-system-gettext" significance="normal">
    <primary sortas="a-Gettext">Gettext</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Gettext package contains utilities for internationalization and
    localization. These allow programs to be compiled with NLS (Native Language
    Support), enabling them to output messages in the user's native
    language.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>2.9 SBU</seg>
        <seg>231 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Gettext</title>

    <para>Prepare Gettext for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr    \
            --disable-static \
            --docdir=/usr/share/doc/gettext-0.21</userinput></screen>

    <para>Compile the package:</para>

<!--<screen><userinput remap="make">make BISON_LOCALEDIR=/usr/share/locale</userinput></screen>-->
<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>
<!--
   <variablelist>
      <title>The meaning of the make parameter:</title>

      <varlistentry>
        <term><parameter>BISON_LOCALEDIR=/usr/share/locale</parameter></term>
        <listitem>
          <para>Since bison is not yet installed in /usr, configure hardcodes
          the directory containing translations for the bison program (the
	  "locale" directory) as /tools/share/locale. Passing this variable
           to make allows overriding the choice made by configure.</para>
        </listitem>
      </varlistentry>

    </variablelist>
-->
    <para>To test the results (this takes a long time, around 3 SBUs),
    issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
chmod -v 0755 /usr/lib/preloadable_libintl.so</userinput></screen>

  </sect2>

  <sect2 id="contents-gettext" role="content">
    <title>Contents of Gettext</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>autopoint, envsubst, gettext, gettext.sh,
        gettextize, msgattrib, msgcat, msgcmp, msgcomm, msgconv, msgen,
        msgexec, msgfilter, msgfmt, msggrep, msginit, msgmerge, msgunfmt, msguniq,
        ngettext, recode-sr-latin, and xgettext</seg>
        <seg>libasprintf.so, libgettextlib.so, libgettextpo.so,
        libgettextsrc.so, libtextstyle.so, and preloadable_libintl.so</seg>
        <seg>/usr/lib/gettext, /usr/share/doc/gettext-0.21,
        /usr/share/gettext, and /usr/share/gettext-0.19.8</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="autopoint">
        <term><command moreinfo="none">autopoint</command></term>
        <listitem>
          <para>Copies standard Gettext infrastructure files into a source
          package</para>
          <indexterm zone="ch-system-gettext autopoint" significance="normal">
            <primary sortas="b-autopoint">autopoint</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="envsubst">
        <term><command moreinfo="none">envsubst</command></term>
        <listitem>
          <para>Substitutes environment variables in shell format strings</para>
          <indexterm zone="ch-system-gettext envsubst" significance="normal">
            <primary sortas="b-envsubst">envsubst</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gettext">
        <term><command moreinfo="none">gettext</command></term>
        <listitem>
          <para>Translates a natural language message into the user's language
          by looking up the translation in a message catalog</para>
          <indexterm zone="ch-system-gettext gettext" significance="normal">
            <primary sortas="b-gettext">gettext</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gettext.sh">
        <term><command moreinfo="none">gettext.sh</command></term>
        <listitem>
          <para>Primarily serves as a shell function library for gettext</para>
          <indexterm zone="ch-system-gettext gettext.sh" significance="normal">
            <primary sortas="b-gettext.sh">gettext.sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gettextize">
        <term><command moreinfo="none">gettextize</command></term>
        <listitem>
          <para>Copies all standard Gettext files into the given top-level
          directory of a package to begin internationalizing it</para>
          <indexterm zone="ch-system-gettext gettextize" significance="normal">
            <primary sortas="b-gettextize">gettextize</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgattrib">
        <term><command moreinfo="none">msgattrib</command></term>
        <listitem>
          <para>Filters the messages of a translation catalog according to their
          attributes and manipulates the attributes</para>
          <indexterm zone="ch-system-gettext msgattrib" significance="normal">
            <primary sortas="b-msgattrib">msgattrib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgcat">
        <term><command moreinfo="none">msgcat</command></term>
        <listitem>
          <para>Concatenates and merges the given
          <filename class="extension" moreinfo="none">.po</filename> files</para>
          <indexterm zone="ch-system-gettext msgcat" significance="normal">
            <primary sortas="b-msgcat">msgcat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgcmp">
        <term><command moreinfo="none">msgcmp</command></term>
        <listitem>
          <para>Compares two <filename class="extension" moreinfo="none">.po</filename>
          files to check that both contain the same set of msgid strings</para>
          <indexterm zone="ch-system-gettext msgcmp" significance="normal">
            <primary sortas="b-msgcmp">msgcmp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgcomm">
        <term><command moreinfo="none">msgcomm</command></term>
        <listitem>
          <para>Finds the messages that are common to the given
          <filename class="extension" moreinfo="none">.po</filename> files</para>
          <indexterm zone="ch-system-gettext msgcomm" significance="normal">
            <primary sortas="b-msgcomm">msgcomm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgconv">
        <term><command moreinfo="none">msgconv</command></term>
        <listitem>
          <para>Converts a translation catalog to a different character
          encoding</para>
          <indexterm zone="ch-system-gettext msgconv" significance="normal">
            <primary sortas="b-msgconv">msgconv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgen">
        <term><command moreinfo="none">msgen</command></term>
        <listitem>
          <para>Creates an English translation catalog</para>
          <indexterm zone="ch-system-gettext msgen" significance="normal">
            <primary sortas="b-msgen">msgen</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgexec">
        <term><command moreinfo="none">msgexec</command></term>
        <listitem>
          <para>Applies a command to all translations of a translation
          catalog</para>
          <indexterm zone="ch-system-gettext msgexec" significance="normal">
            <primary sortas="b-msgexec">msgexec</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgfilter">
        <term><command moreinfo="none">msgfilter</command></term>
        <listitem>
          <para>Applies a filter to all translations of a translation
          catalog</para>
          <indexterm zone="ch-system-gettext msgfilter" significance="normal">
            <primary sortas="b-msgfilter">msgfilter</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgfmt">
        <term><command moreinfo="none">msgfmt</command></term>
        <listitem>
          <para>Generates a binary message catalog from a translation
          catalog</para>
          <indexterm zone="ch-system-gettext msgfmt" significance="normal">
            <primary sortas="b-msgfmt">msgfmt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msggrep">
        <term><command moreinfo="none">msggrep</command></term>
        <listitem>
          <para>Extracts all messages of a translation catalog that match a
          given pattern or belong to some given source files</para>
          <indexterm zone="ch-system-gettext msggrep" significance="normal">
            <primary sortas="b-msggrep">msggrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msginit">
        <term><command moreinfo="none">msginit</command></term>
        <listitem>
          <para>Creates a new <filename class="extension" moreinfo="none">.po</filename> file,
          initializing the meta information with values from the user's
          environment</para>
          <indexterm zone="ch-system-gettext msginit" significance="normal">
            <primary sortas="b-msginit">msginit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgmerge">
        <term><command moreinfo="none">msgmerge</command></term>
        <listitem>
          <para>Combines two raw translations into a single file</para>
          <indexterm zone="ch-system-gettext msgmerge" significance="normal">
            <primary sortas="b-msgmerge">msgmerge</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msgunfmt">
        <term><command moreinfo="none">msgunfmt</command></term>
        <listitem>
          <para>Decompiles a binary message catalog into raw translation
          text</para>
          <indexterm zone="ch-system-gettext msgunfmt" significance="normal">
            <primary sortas="b-msgunfmt">msgunfmt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="msguniq">
        <term><command moreinfo="none">msguniq</command></term>
        <listitem>
          <para>Unifies duplicate translations in a translation catalog</para>
          <indexterm zone="ch-system-gettext msguniq" significance="normal">
            <primary sortas="b-msguniq">msguniq</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ngettext">
        <term><command moreinfo="none">ngettext</command></term>
        <listitem>
          <para>Displays native language translations of a textual message whose
          grammatical form depends on a number</para>
          <indexterm zone="ch-system-gettext ngettext" significance="normal">
            <primary sortas="b-ngettext">ngettext</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="recode-sr-latin">
        <term><command moreinfo="none">recode-sr-latin</command></term>
        <listitem>
          <para>Recodes Serbian text from Cyrillic to Latin script</para>
          <indexterm zone="ch-system-gettext recode-sr-latin" significance="normal">
            <primary sortas="b-recode-sr-latin">recode-sr-latin</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xgettext">
        <term><command moreinfo="none">xgettext</command></term>
        <listitem>
          <para>Extracts the translatable message lines from the given source
          files to make the first translation template</para>
          <indexterm zone="ch-system-gettext xgettext" significance="normal">
            <primary sortas="b-xgettext">xgettext</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libasprintf">
        <term><filename class="libraryfile" moreinfo="none">libasprintf</filename></term>
        <listitem>
          <para>defines the <emphasis>autosprintf</emphasis> class, which makes
          C formatted output routines usable in C++ programs, for use with the
          <emphasis>&lt;string&gt;</emphasis> strings and the
          <emphasis>&lt;iostream&gt;</emphasis> streams</para>
          <indexterm zone="ch-system-gettext libasprintf" significance="normal">
            <primary sortas="c-libasprintf">libasprintf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgettextlib">
        <term><filename class="libraryfile" moreinfo="none">libgettextlib</filename></term>
        <listitem>
          <para>a private library containing common routines used by the
          various Gettext programs; these are not intended for general use</para>
          <indexterm zone="ch-system-gettext libgettextlib" significance="normal">
            <primary sortas="c-libgettextlib">libgettextlib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgettextpo">
        <term><filename class="libraryfile" moreinfo="none">libgettextpo</filename></term>
        <listitem>
          <para>Used to write specialized programs that process
          <filename class="extension" moreinfo="none">.po</filename> files; this library is
          used when the standard applications shipped with Gettext (such as
          <command moreinfo="none">msgcomm</command>, <command moreinfo="none">msgcmp</command>,
          <command moreinfo="none">msgattrib</command>, and <command moreinfo="none">msgen</command>) will
          not suffice</para>
          <indexterm zone="ch-system-gettext libgettextpo" significance="normal">
            <primary sortas="c-libgettextpo">libgettextpo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgettextsrc">
        <term><filename class="libraryfile" moreinfo="none">libgettextsrc</filename></term>
        <listitem>
          <para>A private library containing common routines used by the
          various Gettext programs; these are not intended for general use</para>
          <indexterm zone="ch-system-gettext libgettextsrc" significance="normal">
            <primary sortas="c-libgettextsrc">libgettextsrc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtextstyle">
        <term><filename class="libraryfile" moreinfo="none">libtextstyle</filename></term>
        <listitem>
          <para>Text styling library</para>
          <indexterm zone="ch-system-gettext libtextstyle" significance="normal">
            <primary sortas="c-libtextstyle">libtextstyle</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="preloadable_libintl">
        <term><filename class="libraryfile" moreinfo="none">preloadable_libintl</filename></term>
        <listitem>
          <para>A library, intended to be used by LD_PRELOAD that assists
          <filename class="libraryfile" moreinfo="none">libintl</filename> in logging
          untranslated messages</para>
          <indexterm zone="ch-system-gettext preloadable_libintl" significance="normal">
            <primary sortas="c-preloadable_libintl">preloadable_libintl</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-bison" role="wrap">
  <?dbhtml filename="bison.html"?>

  <sect1info condition="script">
    <productname class="trade">bison</productname>
    <productnumber>3.7.6</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/bison/bison-3.7.6.tar.xz</address>
  </sect1info>

  <title>Bison-3.7.6</title>

  <indexterm zone="ch-system-bison" significance="normal">
    <primary sortas="a-Bison">Bison</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Bison package contains a parser generator.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>6.3 SBU</seg>
        <seg>53 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Bison</title>

    <para>Prepare Bison for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr --docdir=/usr/share/doc/bison-3.7.6</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results (about 5.5 SBU), issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-bison" role="content">
    <title>Contents of Bison</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>bison and yacc</seg>
        <seg>liby.a</seg>
        <seg>/usr/share/bison</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="bison">
        <term><command moreinfo="none">bison</command></term>
        <listitem>
          <para>Generates, from a series of rules, a program for analyzing the
          structure of text files; Bison is a replacement for Yacc (Yet Another
          Compiler Compiler)</para>
          <indexterm zone="ch-system-bison bison" significance="normal">
            <primary sortas="b-bison">bison</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="yacc">
        <term><command moreinfo="none">yacc</command></term>
        <listitem>
          <para>A wrapper for <command moreinfo="none">bison</command>, meant for programs that
          still call <command moreinfo="none">yacc</command> instead of <command moreinfo="none">bison</command>;
          it calls <command moreinfo="none">bison</command> with the <parameter moreinfo="none">-y</parameter>
          option</para>
          <indexterm zone="ch-system-bison yacc" significance="normal">
            <primary sortas="b-yacc">yacc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liby">
        <term><filename class="libraryfile" moreinfo="none">liby</filename></term>
        <listitem>
          <para>The Yacc library containing implementations of Yacc-compatible
          <function moreinfo="none">yyerror</function> and <function moreinfo="none">main</function> functions;
          this library is normally not very useful, but POSIX requires it</para>
          <indexterm zone="ch-system-bison liby" significance="normal">
            <primary sortas="c-liby">liby</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-grep" role="wrap">
  <?dbhtml filename="grep.html"?>

  <sect1info condition="script">
    <productname class="trade">grep</productname>
    <productnumber>3.7</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/grep/grep-3.7.tar.xz</address>
  </sect1info>

  <title>Grep-3.7</title>

  <indexterm zone="ch-system-grep" significance="normal">
    <primary sortas="a-Grep">Grep</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Grep package contains programs for searching through the contents of files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.8 SBU</seg>
        <seg>36 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Grep</title>

    <para>Prepare Grep for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-grep" role="content">
    <title>Contents of Grep</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>egrep, fgrep, and grep</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="egrep">
        <term><command moreinfo="none">egrep</command></term>
        <listitem>
          <para>Prints lines matching an extended regular expression</para>
          <indexterm zone="ch-system-grep egrep" significance="normal">
            <primary sortas="b-egrep">egrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fgrep">
        <term><command moreinfo="none">fgrep</command></term>
        <listitem>
          <para>Prints lines matching a list of fixed strings</para>
          <indexterm zone="ch-system-grep fgrep" significance="normal">
            <primary sortas="b-fgrep">fgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grep">
        <term><command moreinfo="none">grep</command></term>
        <listitem>
          <para>Prints lines matching a basic regular expression</para>
          <indexterm zone="ch-system-grep grep" significance="normal">
            <primary sortas="b-grep">grep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-bash" role="wrap">
  <?dbhtml filename="bash.html"?>

  <sect1info condition="script">
    <productname class="trade">bash</productname>
    <productnumber>5.1.8</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/bash/bash-5.1.8.tar.gz</address>
  </sect1info>

  <title>Bash-5.1.8</title>

  <indexterm zone="ch-system-bash" significance="normal">
    <primary sortas="a-Bash">Bash</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Bash package contains the Bourne-Again SHell.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.6 SBU</seg>
        <seg>50 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Bash</title>

    <para>Prepare Bash for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr                      \
            --docdir=/usr/share/doc/bash-5.1.8 \
            --without-bash-malloc              \
            --with-installed-readline</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--with-installed-readline</parameter></term>
        <listitem>
          <para>This option tells Bash to use the <filename class="libraryfile" moreinfo="none">readline</filename> library that is already
          installed on the system rather than using its own readline
          version.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Skip down to <quote>Install the
    package</quote> if not running the test suite.</para>

    <para>To prepare the tests, ensure that the <systemitem class="username" moreinfo="none">tester</systemitem> user can write to the sources tree:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">chown -Rv tester .</userinput></screen>

    <para>The testsuite of the package is designed to be run as a non-root
    user that owns the terminal connected to standard input.  To satisfy the
    requirement, spawn a new pseudo terminal using
    <application moreinfo="none">Expect</application> and run the tests as the <systemitem class="username" moreinfo="none">tester</systemitem> user:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">su -s /usr/bin/expect tester &lt;&lt; EOF
set timeout -1
spawn make tests
expect eof
lassign [wait] _ _ _ value
exit $value
EOF</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Run the newly compiled <command moreinfo="none">bash</command> program (replacing the one that is
    currently being executed):</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">exec /bin/bash --login +h</userinput></screen>

    <note>
      <para>The parameters used make the <command moreinfo="none">bash</command>
      process an interactive login shell and continues to disable hashing so
      that new programs are found as they become available.</para>
    </note>

  </sect2>

  <sect2 id="contents-bash" role="content">
    <title>Contents of Bash</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>bash, bashbug, and sh (link to bash)</seg>
        <seg>/usr/include/bash, /usr/lib/bash, and
        /usr/share/doc/bash-5.1.8</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="bash">
        <term><command moreinfo="none">bash</command></term>
        <listitem>
          <para>A widely-used command interpreter; it performs many types of
          expansions and substitutions on a given command line before executing
          it, thus making this interpreter a powerful tool</para>
          <indexterm zone="ch-system-bash bash" significance="normal">
            <primary sortas="b-bash">bash</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bashbug">
        <term><command moreinfo="none">bashbug</command></term>
        <listitem>
          <para>A shell script to help the user compose and mail standard
          formatted bug reports concerning <command moreinfo="none">bash</command></para>
          <indexterm zone="ch-system-bash bashbug" significance="normal">
            <primary sortas="b-bashbug">bashbug</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sh">
        <term><command moreinfo="none">sh</command></term>
        <listitem>
          <para>A symlink to the <command moreinfo="none">bash</command> program; when invoked
          as <command moreinfo="none">sh</command>, <command moreinfo="none">bash</command> tries to mimic the
          startup behavior of historical versions of <command moreinfo="none">sh</command> as
          closely as possible, while conforming to the POSIX standard as
          well</para>
          <indexterm zone="ch-system-bash sh" significance="normal">
            <primary sortas="b-sh">sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-libtool" role="wrap">
  <?dbhtml filename="libtool.html"?>

  <sect1info condition="script">
    <productname class="trade">libtool</productname>
    <productnumber>2.4.6</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.xz</address>
  </sect1info>

  <title>Libtool-2.4.6</title>

  <indexterm zone="ch-system-libtool" significance="normal">
    <primary sortas="a-Libtool">Libtool</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Libtool package contains the GNU generic library support script.
    It wraps the complexity of using shared libraries in a consistent, portable
    interface.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.5 SBU</seg>
        <seg>43 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Libtool</title>

    <para>Prepare Libtool for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

<para>To test the results<!--(about 11.0 SBU)-->, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <note><para>The test time for libtool can be reduced significantly on a
    system with multiple cores.  To do this, append
    <command moreinfo="none">TESTSUITEFLAGS=-j&lt;N&gt;</command> to the line above.  For
    instance, using -j4 can reduce the test time by over 60
    percent.</para></note>

    <para>Five tests are known to fail in the LFS build environment due
    to a circular dependency, but all tests pass if rechecked after 
    automake is installed.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <!-- dev: - -disable-static works but causes additional test failures
              so we manually remove the static library -->

    <para>Remove a useless static library:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">rm -fv /usr/lib/libltdl.a</userinput></screen>

  </sect2>


  <sect2 id="contents-libtool" role="content">
    <title>Contents of Libtool</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>libtool and libtoolize</seg>
        <seg>libltdl.so</seg>
        <seg>/usr/include/libltdl and /usr/share/libtool</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libtool">
        <term><command moreinfo="none">libtool</command></term>
        <listitem>
          <para>Provides generalized library-building support services</para>
          <indexterm zone="ch-system-libtool libtool" significance="normal">
            <primary sortas="b-libtool">libtool</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtoolize">
        <term><command moreinfo="none">libtoolize</command></term>
        <listitem>
          <para>Provides a standard way to add <command moreinfo="none">libtool</command>
          support to a package</para>
          <indexterm zone="ch-system-libtool libtoolize" significance="normal">
            <primary sortas="b-libtoolize">libtoolize</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libltdl">
        <term><filename class="libraryfile" moreinfo="none">libltdl</filename></term>
        <listitem>
          <para>Hides the various difficulties of dlopening libraries</para>
          <indexterm zone="ch-system-libtool libltdl" significance="normal">
            <primary sortas="c-libltdl">libltdl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-gdbm" role="wrap">
  <?dbhtml filename="gdbm.html"?>

  <sect1info condition="script">
    <productname class="trade">gdbm</productname>
    <productnumber>1.20</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gdbm/gdbm-1.20.tar.gz</address>
  </sect1info>

  <title>GDBM-1.20</title>

  <indexterm zone="ch-system-gdbm" significance="normal">
    <primary sortas="a-Gdbm">GDBM</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The GDBM package contains the GNU Database Manager.  It is a library
    of database functions that use extensible hashing and works similar to the
    standard UNIX dbm.  The library provides primitives for storing key/data
    pairs, searching and retrieving the data by its key and deleting a key
    along with its data. </para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>11 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of GDBM</title>
<!--
    <para>First, fix an issue first identified by gcc-10:</para>

<screen><userinput remap="pre">sed -r -i '/^char.*parseopt_program_(doc|args)/d' src/parseopt.c</userinput></screen>
-->
    <para>Prepare GDBM for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr    \
            --disable-static \
            --enable-libgdbm-compat</userinput></screen>

    <variablelist>
      <title>The meaning of the configure option:</title>

      <varlistentry>
        <term><envar>--enable-libgdbm-compat</envar></term>
        <listitem>
          <para>This switch enables building the libgdbm compatibility library.
          Some packages outside of LFS may require the older DBM
          routines it provides.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make -k check</userinput></screen>

    <para>
      The gdbmtool tests are known to fail with some DejaGNU
      <literal moreinfo="none">ERROR</literal> messages.  In the summary it's
      shown as one unresolved testcase.
    </para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-gdbm" role="content">
    <title>Contents of GDBM</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>

      <seglistitem>
        <seg>gdbm_dump, gdbm_load, and gdbmtool</seg>
        <seg>libgdbm.so and libgdbm_compat.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="gdbm_dump">
        <term><command moreinfo="none">gdbm_dump</command></term>
        <listitem>
          <para>Dumps a GDBM database to a file</para>
          <indexterm zone="ch-system-gdbm gdbm_dump" significance="normal">
            <primary sortas="b-gdbm_dump">gdbm_dump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gdbm_load">
        <term><command moreinfo="none">gdbm_load</command></term>
        <listitem>
          <para>Recreates a GDBM database from a dump file</para>
          <indexterm zone="ch-system-gdbm gdbm_load" significance="normal">
            <primary sortas="b-gdbm_load">gdbm_load</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gdbmtool">
        <term><command moreinfo="none">gdbmtool</command></term>
        <listitem>
          <para>Tests and modifies a GDBM database</para>
          <indexterm zone="ch-system-gdbm gdbmtool" significance="normal">
            <primary sortas="b-gdbmtool">gdbmtool</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgdbm">
        <term><filename class="libraryfile" moreinfo="none">libgdbm</filename></term>
        <listitem>
          <para>Contains functions to manipulate a hashed database</para>
          <indexterm zone="ch-system-gdbm libgdbm" significance="normal">
            <primary sortas="c-libgdbm">libgdbm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgdbm_compat">
        <term><filename class="libraryfile" moreinfo="none">libgdbm_compat</filename></term>
        <listitem>
          <para>Compatibility library containing older DBM functions</para>
          <indexterm zone="ch-system-gdbm libgdbm_compat" significance="normal">
            <primary sortas="c-libgdbm_compat">libgdbm_compat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-gperf" role="wrap">
  <?dbhtml filename="gperf.html"?>

  <sect1info condition="script">
    <productname class="trade">gperf</productname>
    <productnumber>3.1</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gperf/gperf-3.1.tar.gz</address>
  </sect1info>

  <title>Gperf-3.1</title>

  <indexterm zone="ch-system-gperf" significance="normal">
    <primary sortas="a-Gperf">Gperf</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Gperf generates a perfect hash function from a key set.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>6.0 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Gperf</title>

    <para>Prepare Gperf for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr --docdir=/usr/share/doc/gperf-3.1</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>The tests are known to fail if running multiple
    simultaneous tests (-j option greater than 1). To test
    the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make -j1 check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-gperf" role="content">
    <title>Contents of Gperf</title>

    <segmentedlist>
      <segtitle>Installed program</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>gperf</seg>
        <seg>/usr/share/doc/gperf-3.1</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="gperf">
        <term><command moreinfo="none">gperf</command></term>
        <listitem>
          <para>Generates a perfect hash from a key set</para>
          <indexterm zone="ch-system-gperf gperf" significance="normal">
            <primary sortas="b-gperf">gperf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-expat" role="wrap">
  <?dbhtml filename="expat.html"?>

  <sect1info condition="script">
    <productname class="trade">expat</productname>
    <productnumber>2.4.1</productnumber>
    <address format="linespecific">https://prdownloads.sourceforge.net/expat/expat-2.4.1.tar.xz</address>
  </sect1info>

  <title>Expat-2.4.1</title>

  <indexterm zone="ch-system-expat" significance="normal">
    <primary sortas="a-Expat">Expat</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Expat package contains a stream oriented C library for
    parsing XML.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>13 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Expat</title>

    <para>Prepare Expat for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr    \
            --disable-static \
            --docdir=/usr/share/doc/expat-2.4.1</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>If desired, install the documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">install -v -m644 doc/*.{html,png,css} /usr/share/doc/expat-2.4.1</userinput></screen>

  </sect2>

  <sect2 id="contents-expat" role="content">
    <title>Contents of Expat</title>

    <segmentedlist>
      <segtitle>Installed program</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>xmlwf</seg>
        <seg>libexpat.so</seg>
        <seg>/usr/share/doc/expat-2.4.1</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="xmlwf">
        <term><command moreinfo="none">xmlwf </command></term>
        <listitem>
          <para>Is a non-validating utility to check whether or not
          XML documents are well formed</para>
          <indexterm zone="ch-system-expat xmlwf" significance="normal">
            <primary sortas="b-xmlwf">xmlwf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libexpat">
        <term><filename class="libraryfile" moreinfo="none">libexpat</filename></term>
        <listitem>
          <para>Contains API functions for parsing XML</para>
          <indexterm zone="ch-system-expat libexpat" significance="normal">
            <primary sortas="c-libexpat">libexpat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-inetutils" role="wrap">
  <?dbhtml filename="inetutils.html"?>

  <sect1info condition="script">
    <productname class="trade">inetutils</productname>
    <productnumber>2.1</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/inetutils/inetutils-2.1.tar.xz</address>
  </sect1info>

  <title>Inetutils-2.1</title>

  <indexterm zone="ch-system-inetutils" significance="normal">
    <primary sortas="a-Inetutils">Inetutils</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Inetutils package contains programs for basic networking.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.3 SBU</seg>
        <seg>30 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Inetutils</title>

    <para>Prepare Inetutils for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr        \
            --bindir=/usr/bin    \
            --localstatedir=/var \
            --disable-logger     \
            --disable-whois      \
            --disable-rcp        \
            --disable-rexec      \
            --disable-rlogin     \
            --disable-rsh        \
            --disable-servers</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-logger</parameter></term>
        <listitem>
          <para>This option prevents Inetutils from installing the
          <command moreinfo="none">logger</command> program, which is used by scripts to
          pass messages to the System Log Daemon. Do not install it because
          Util-linux installs a more recent version.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-whois</parameter></term>
        <listitem>
          <para>This option disables the building of the Inetutils
          <command moreinfo="none">whois</command> client, which is out of date. Instructions for
          a better <command moreinfo="none">whois</command> client are in the BLFS book.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-r*</parameter></term>
        <listitem>
          <para>These parameters disable building obsolete programs that should not
          be used due to security issues. The functions provided by these
          programs can be provided by the <application moreinfo="none">openssh</application>
          package in the BLFS book.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-servers</parameter></term>
        <listitem>
          <para>This disables the installation of the various network servers
          included as part of the Inetutils package. These servers are deemed not
          appropriate in a basic LFS system. Some are insecure by nature and are
          only considered safe on trusted networks. Note that
          better replacements are available for many of these servers.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>
<!--
    <note><para>One test, libls.sh, may fail in the initial chroot
    environment but will pass if the test is rerun after the LFS system
    is complete. One test, ping-localhost.sh, will fail if the host
    system does not have ipv6 capability.</para></note>
-->
    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Move a program to the proper location:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">mv -v /usr/{,s}bin/ifconfig</userinput></screen>

  </sect2>

  <sect2 id="contents-inetutils" role="content">
    <title>Contents of Inetutils</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>dnsdomainname, ftp, ifconfig, hostname, ping, ping6, 
        talk, telnet, tftp, and traceroute</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="dnsdomainname">
        <term><command moreinfo="none">dnsdomainname</command></term>
        <listitem>
        <para>Show the system's DNS domain name</para>
        <indexterm zone="ch-system-inetutils dnsdomainname" significance="normal">
          <primary sortas="b-dnsdomainname">dnsdomainname</primary>
        </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ftp">
        <term><command moreinfo="none">ftp</command></term>
        <listitem>
        <para>Is the file transfer protocol program</para>
        <indexterm zone="ch-system-inetutils ftp" significance="normal">
          <primary sortas="b-ftp">ftp</primary>
        </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="hostname">
        <term><command moreinfo="none">hostname</command></term>
        <listitem>
          <para>Reports or sets the name of the host</para>
          <indexterm zone="ch-system-inetutils hostname" significance="normal">
            <primary sortas="b-hostname">hostname</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ifconfig">
        <term><command moreinfo="none">ifconfig</command></term>
        <listitem>
        <para>Manages network interfaces</para>
        <indexterm zone="ch-system-inetutils ifconfig" significance="normal">
          <primary sortas="b-ifconfig">ifconfig</primary>
        </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ping">
        <term><command moreinfo="none">ping</command></term>
        <listitem>
          <para>Sends echo-request packets and reports how long the replies
          take</para>
          <indexterm zone="ch-system-inetutils ping" significance="normal">
            <primary sortas="b-ping">ping</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ping6">
        <term><command moreinfo="none">ping6</command></term>
        <listitem>
          <para>A version of <command moreinfo="none">ping</command> for IPv6 networks</para>
          <indexterm zone="ch-system-inetutils ping6" significance="normal">
            <primary sortas="b-ping6">ping6</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="talk">
        <term><command moreinfo="none">talk</command></term>
        <listitem>
          <para>Is used to chat with another user</para>
          <indexterm zone="ch-system-inetutils talk" significance="normal">
            <primary sortas="b-talk">talk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="telnet">
        <term><command moreinfo="none">telnet</command></term>
        <listitem>
          <para>An interface to the TELNET protocol</para>
          <indexterm zone="ch-system-inetutils telnet" significance="normal">
            <primary sortas="b-telnet">telnet</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tftp">
        <term><command moreinfo="none">tftp</command></term>
        <listitem>
          <para>A trivial file transfer program</para>
          <indexterm zone="ch-system-inetutils tftp" significance="normal">
            <primary sortas="b-tftp">tftp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="traceroute">
        <term><command moreinfo="none">traceroute</command></term>
        <listitem>
          <para>Traces the route your packets take from the host you are
          working on to another host on a network, showing all the intermediate
          hops (gateways) along the way</para>
          <indexterm zone="ch-system-inetutils traceroute" significance="normal">
            <primary sortas="b-traceroute">traceroute</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-less" role="wrap">
  <?dbhtml filename="less.html"?>

  <sect1info condition="script">
    <productname class="trade">less</productname>
    <productnumber>590</productnumber>
    <address format="linespecific">https://www.greenwoodsoftware.com/less/less-590.tar.gz</address>
  </sect1info>

  <title>Less-590</title>

  <indexterm zone="ch-system-less" significance="normal">
    <primary sortas="a-Less">Less</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Less package contains a text file viewer.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>4.2 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Less</title>

    <para>Prepare Less for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr --sysconfdir=/etc</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--sysconfdir=/etc</parameter></term>
        <listitem>
          <para>This option tells the programs created by the package to look
          in <filename class="directory" moreinfo="none">/etc</filename> for the configuration
          files.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>This package does not come with a test suite.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-less" role="content">
    <title>Contents of Less</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>less, lessecho, and lesskey</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="less">
        <term><command moreinfo="none">less</command></term>
        <listitem>
          <para>A file viewer or pager; it displays the contents of the given
          file, letting the user scroll, find strings, and jump to marks</para>
          <indexterm zone="ch-system-less less" significance="normal">
            <primary sortas="b-less">less</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lessecho">
        <term><command moreinfo="none">lessecho</command></term>
        <listitem>
          <para>Needed to expand meta-characters, such as <emphasis>*</emphasis>
          and <emphasis>?</emphasis>, in filenames on Unix systems</para>
          <indexterm zone="ch-system-less lessecho" significance="normal">
            <primary sortas="b-lessecho">lessecho</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lesskey">
        <term><command moreinfo="none">lesskey</command></term>
        <listitem>
          <para>Used to specify the key bindings for <command moreinfo="none">less</command></para>
          <indexterm zone="ch-system-less lesskey" significance="normal">
            <primary sortas="b-lesskey">lesskey</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-perl" role="wrap">
  <?dbhtml filename="perl.html"?>

  <sect1info condition="script">
    <productname class="trade">perl</productname>
    <productnumber>5.34.0</productnumber>
    <address format="linespecific">https://www.cpan.org/src/5.0/perl-5.34.0.tar.xz</address>
  </sect1info>

  <title>Perl-5.34.0</title>

  <indexterm zone="ch-system-perl" significance="normal">
    <primary sortas="a-Perl">Perl</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Perl package contains the Practical Extraction and Report
    Language.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>10 SBU</seg>
        <seg>226 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Perl</title>

    <para>First, apply a patch that fixes an issue highlighted by recent
    versions of gdbm:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">patch -Np1 -i ../perl-5.34.0-upstream_fixes-1.patch</userinput></screen>

    <para>This version of Perl now builds the Compress::Raw::Zlib and 
    Compress::Raw::BZip2 modules. By
    default Perl will use an internal copy of the sources for the build.
    Issue the following command so that Perl will use the libraries
    installed on the system:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">export BUILD_ZLIB=False
export BUILD_BZIP2=0</userinput></screen>

    <para>To have full control over the way Perl is set up, you can remove the
    <quote>-des</quote> options from the following command and hand-pick the way
    this package is built. Alternatively, use the command exactly as below to
    use the defaults that Perl auto-detects:</para>

 <screen format="linespecific"><userinput remap="configure" moreinfo="none">sh Configure -des                                         \
             -Dprefix=/usr                                \
             -Dvendorprefix=/usr                          \
             -Dprivlib=/usr/lib/perl5/5.34/core_perl      \
             -Darchlib=/usr/lib/perl5/5.34/core_perl      \
             -Dsitelib=/usr/lib/perl5/5.34/site_perl      \
             -Dsitearch=/usr/lib/perl5/5.34/site_perl     \
             -Dvendorlib=/usr/lib/perl5/5.34/vendor_perl  \
             -Dvendorarch=/usr/lib/perl5/5.34/vendor_perl \
             -Dman1dir=/usr/share/man/man1                \
             -Dman3dir=/usr/share/man/man3                \
             -Dpager="/usr/bin/less -isR"                 \
             -Duseshrplib                                 \
             -Dusethreads</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">-Dvendorprefix=/usr</parameter></term>
        <listitem>
          <para>This ensures <command moreinfo="none">perl</command> knows how to
          tell packages where they should install their perl modules.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">-Dpager="/usr/bin/less -isR"</parameter></term>
        <listitem>
          <para>This ensures that <userinput moreinfo="none">less</userinput> is used instead 
          of <userinput moreinfo="none">more</userinput>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">-Dman1dir=/usr/share/man/man1
        -Dman3dir=/usr/share/man/man3</parameter></term>
        <listitem>
          <para>Since Groff is not installed yet, <command moreinfo="none">Configure</command>
          thinks that we do not want man pages for Perl.  Issuing these
          parameters overrides this decision.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">-Duseshrplib</parameter></term>
        <listitem>
          <para>Build a shared libperl needed by some perl modules.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">-Dusethreads</parameter></term>
        <listitem>
          <para>Build perl with support for threads.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">-Dprivlib,-Darchlib,-Dsitelib,...</parameter></term>
        <listitem>
          <para>These settings define where Perl is looking for installed
          modules. The LFS editors chose to put them in a directory structure
          based on the Major.Minor version of Perl (5.34) which
          allows upgrading Perl to newer Patch levels (5.34.0) without
          the need to reinstall all of the modules again.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results (approximately 11 SBU), issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make test</userinput></screen>

    <!--note><para>One test fails due to using the most recent version of gdbm.
    </para></note-->

    <para>Install the package and clean up:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
unset BUILD_ZLIB BUILD_BZIP2</userinput></screen>

  </sect2>

  <sect2 id="contents-perl" role="content">
    <title>Contents of Perl</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>corelist, cpan, enc2xs, encguess, h2ph, h2xs, instmodsh,
        json_pp, libnetcfg, perl, perl5.34.0 (hard link to perl),
        perlbug, perldoc, perlivp, perlthanks (hard link to perlbug), piconv,
        pl2pm, pod2html, pod2man, pod2text, pod2usage, podchecker, podselect,
        prove, ptar, ptardiff, ptargrep, shasum,
        splain, xsubpp, and zipdetails</seg>
        <seg>Many which cannot all be listed here</seg>
        <seg>/usr/lib/perl5</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
<!--
      <varlistentry id="c2ph">
        <term><command>c2ph</command></term>
        <listitem>
          <para>Dumps C structures as generated from
          <command>cc -g -S</command></para>
          <indexterm zone="ch-system-perl c2ph">
            <primary sortas="b-c2ph">c2ph</primary>
          </indexterm>
        </listitem>
      </varlistentry>
-->
      <varlistentry id="corelist">
        <term><command moreinfo="none">corelist</command></term>
        <listitem>
          <para>A commandline frontend to Module::CoreList</para>
          <indexterm zone="ch-system-perl corelist" significance="normal">
            <primary sortas="b-corelist">corelist</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cpan">
        <term><command moreinfo="none">cpan</command></term>
        <listitem>
          <para>Interact with the Comprehensive Perl Archive Network (CPAN)
          from the command line</para>
          <indexterm zone="ch-system-perl cpan" significance="normal">
            <primary sortas="b-cpan">cpan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="enc2xs">
        <term><command moreinfo="none">enc2xs</command></term>
        <listitem>
          <para>Builds a Perl extension for the Encode module from either
          Unicode Character Mappings or Tcl Encoding Files</para>
          <indexterm zone="ch-system-perl enc2xs" significance="normal">
            <primary sortas="b-enc2xs">enc2xs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="encguess">
        <term><command moreinfo="none">encguess</command></term>
        <listitem>
          <para>Guess the encoding type of one or several files</para>
          <indexterm zone="ch-system-perl encguess" significance="normal">
            <primary sortas="b-encguess">encguess</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="h2ph">
        <term><command moreinfo="none">h2ph</command></term>
        <listitem>
          <para>Converts <filename class="extension" moreinfo="none">.h</filename> C header
          files to <filename class="extension" moreinfo="none">.ph</filename> Perl header
          files</para>
          <indexterm zone="ch-system-perl h2ph" significance="normal">
            <primary sortas="b-h2ph">h2ph</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="h2xs">
        <term><command moreinfo="none">h2xs</command></term>
        <listitem>
          <para>Converts <filename class="extension" moreinfo="none">.h</filename> C header
          files to Perl extensions</para>
          <indexterm zone="ch-system-perl h2xs" significance="normal">
            <primary sortas="b-h2xs">h2xs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="instmodsh">
        <term><command moreinfo="none">instmodsh</command></term>
        <listitem>
          <para>Shell script for examining installed Perl modules,
          and can create a tarball from an installed module</para>
          <indexterm zone="ch-system-perl instmodsh" significance="normal">
            <primary sortas="b-instmodsh">instmodsh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="json_pp">
        <term><command moreinfo="none">json_pp</command></term>
        <listitem>
          <para>Converts data between certain input and output formats</para>
          <indexterm zone="ch-system-perl json_pp" significance="normal">
            <primary sortas="b-json_pp">json_pp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnetcfg">
        <term><command moreinfo="none">libnetcfg</command></term>
        <listitem>
          <para>Can be used to configure the
          <filename class="libraryfile" moreinfo="none">libnet</filename> Perl module</para>
          <indexterm zone="ch-system-perl libnetcfg" significance="normal">
            <primary sortas="b-libnetcfg">libnetcfg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="perl">
        <term><command moreinfo="none">perl</command></term>
        <listitem>
          <para>Combines some of the best features of C, <command moreinfo="none">sed</command>,
          <command moreinfo="none">awk</command> and <command moreinfo="none">sh</command> into a single
          swiss-army language</para>
          <indexterm zone="ch-system-perl perl" significance="normal">
            <primary sortas="b-perl">perl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="perl-version">
        <term><command moreinfo="none">perl5.34.0</command></term>
        <listitem>
          <para>A hard link to <command moreinfo="none">perl</command></para>
          <indexterm zone="ch-system-perl perl-version" significance="normal">
            <primary sortas="b-perl5.34.0">perl5.34.0</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="perlbug">
        <term><command moreinfo="none">perlbug</command></term>
        <listitem>
          <para>Used to generate bug reports about Perl, or the modules that come
          with it, and mail them</para>
          <indexterm zone="ch-system-perl perlbug" significance="normal">
            <primary sortas="b-perlbug">perlbug</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="perldoc">
        <term><command moreinfo="none">perldoc</command></term>
        <listitem>
          <para>Displays a piece of documentation in pod format that is embedded
          in the Perl installation tree or in a Perl script</para>
          <indexterm zone="ch-system-perl perldoc" significance="normal">
            <primary sortas="b-perldoc">perldoc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="perlivp">
        <term><command moreinfo="none">perlivp</command></term>
        <listitem>
          <para>The Perl Installation Verification Procedure; it can be used to
          verify that Perl and its libraries have been installed
          correctly</para>
          <indexterm zone="ch-system-perl perlivp" significance="normal">
            <primary sortas="b-perlivp">perlivp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="perlthanks">
        <term><command moreinfo="none">perlthanks</command></term>
        <listitem>
          <para>Used to generate thank you messages to mail to the Perl
          developers</para>
          <indexterm zone="ch-system-perl perlthanks" significance="normal">
            <primary sortas="b-perlthanks">perlthanks</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="piconv">
        <term><command moreinfo="none">piconv</command></term>
        <listitem>
          <para>A Perl version of the character encoding converter
          <command moreinfo="none">iconv</command></para>
          <indexterm zone="ch-system-perl piconv" significance="normal">
            <primary sortas="b-piconv">piconv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pl2pm">
        <term><command moreinfo="none">pl2pm</command></term>
        <listitem>
          <para>A rough tool for converting Perl4
          <filename class="extension" moreinfo="none">.pl</filename> files to Perl5
          <filename class="extension" moreinfo="none">.pm</filename> modules</para>
          <indexterm zone="ch-system-perl pl2pm" significance="normal">
            <primary sortas="b-pl2pm">pl2pm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pod2html">
        <term><command moreinfo="none">pod2html</command></term>
        <listitem>
          <para>Converts files from pod format to HTML format</para>
          <indexterm zone="ch-system-perl pod2html" significance="normal">
            <primary sortas="b-pod2html">pod2html</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pod2man">
        <term><command moreinfo="none">pod2man</command></term>
        <listitem>
          <para>Converts pod data to formatted *roff input</para>
          <indexterm zone="ch-system-perl pod2man" significance="normal">
            <primary sortas="b-pod2man">pod2man</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pod2text">
        <term><command moreinfo="none">pod2text</command></term>
        <listitem>
          <para>Converts pod data to formatted ASCII text</para>
          <indexterm zone="ch-system-perl pod2text" significance="normal">
            <primary sortas="b-pod2text">pod2text</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pod2usage">
        <term><command moreinfo="none">pod2usage</command></term>
        <listitem>
          <para>Prints usage messages from embedded pod docs in files</para>
          <indexterm zone="ch-system-perl pod2usage" significance="normal">
            <primary sortas="b-pod2usage">pod2usage</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="podchecker">
        <term><command moreinfo="none">podchecker</command></term>
        <listitem>
          <para>Checks the syntax of pod format documentation files</para>
          <indexterm zone="ch-system-perl podchecker" significance="normal">
            <primary sortas="b-podchecker">podchecker</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="podselect">
        <term><command moreinfo="none">podselect</command></term>
        <listitem>
          <para>Displays selected sections of pod documentation</para>
          <indexterm zone="ch-system-perl podselect" significance="normal">
            <primary sortas="b-podselect">podselect</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="prove">
        <term><command moreinfo="none">prove</command></term>
        <listitem>
          <para>Command line tool for running tests against the Test::Harness
          module</para>
          <indexterm zone="ch-system-perl prove" significance="normal">
            <primary sortas="b-prove">prove</primary>
          </indexterm>
        </listitem>
      </varlistentry>
<!--
      <varlistentry id="pstruct">
        <term><command>pstruct</command></term>
        <listitem>
          <para>Dumps C structures as generated from <command>cc -g -S</command>
          stabs</para>
          <indexterm zone="ch-system-perl pstruct">
            <primary sortas="b-pstruct">pstruct</primary>
          </indexterm>
        </listitem>
      </varlistentry>
-->
      <varlistentry id="ptar">
        <term><command moreinfo="none">ptar</command></term>
        <listitem>
          <para>A <command moreinfo="none">tar</command>-like program written in Perl</para>
          <indexterm zone="ch-system-perl ptar" significance="normal">
            <primary sortas="b-ptar">ptar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ptardiff">
        <term><command moreinfo="none">ptardiff</command></term>
        <listitem>
          <para>A Perl program that compares an extracted archive with an
          unextracted one</para>
          <indexterm zone="ch-system-perl ptardiff" significance="normal">
            <primary sortas="b-ptardiff">ptardiff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ptargrep">
        <term><command moreinfo="none">ptargrep</command></term>
        <listitem>
          <para>A Perl program that applies pattern matching to the contents
          of files in a tar archive</para>
          <indexterm zone="ch-system-perl ptargrep" significance="normal">
            <primary sortas="b-ptargrep">ptargrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="shasum">
        <term><command moreinfo="none">shasum</command></term>
        <listitem>
          <para>Prints or checks SHA checksums</para>
          <indexterm zone="ch-system-perl shasum" significance="normal">
            <primary sortas="b-shasum">shasum</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="splain">
        <term><command moreinfo="none">splain</command></term>
        <listitem>
          <para>Is used to force verbose warning diagnostics in Perl</para>
          <indexterm zone="ch-system-perl splain" significance="normal">
            <primary sortas="b-splain">splain</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xsubpp">
        <term><command moreinfo="none">xsubpp</command></term>
        <listitem>
          <para>Converts Perl XS code into C code</para>
          <indexterm zone="ch-system-perl xsubpp" significance="normal">
            <primary sortas="b-xsubpp">xsubpp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zipdetails">
        <term><command moreinfo="none">zipdetails</command></term>
        <listitem>
          <para>Displays details about the internal structure of a Zip file</para>
          <indexterm zone="ch-system-perl zipdetails" significance="normal">
            <primary sortas="b-zipdetails">zipdetails</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-xml-parser" role="wrap">
  <?dbhtml filename="xml-parser.html"?>

  <sect1info condition="script">
    <productname class="trade">xml-parser</productname>
    <productnumber>2.46</productnumber>
    <address format="linespecific">https://cpan.metacpan.org/authors/id/T/TO/TODDR/XML-Parser-2.46.tar.gz</address>
  </sect1info>

  <title>XML::Parser-2.46</title>

  <indexterm zone="ch-system-xml-parser" significance="normal">
    <primary sortas="a-Xml-Parser">XML::Parser</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The XML::Parser module is a Perl interface to James Clark's
    XML parser, Expat.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>2.4 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of XML::Parser</title>

    <para>Prepare XML::Parser for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">perl Makefile.PL</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make test</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-xml-parser" role="content">
    <title>Contents of XML::Parser</title>

    <segmentedlist>
      <segtitle>Installed module</segtitle>

      <seglistitem>
        <seg>Expat.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="Expat">
        <term><filename class="libraryfile" moreinfo="none">Expat</filename></term>
        <listitem>
          <para>provides the Perl Expat interface</para>
          <indexterm zone="ch-system-xml-parser Expat" significance="normal">
            <primary sortas="c-Expat">Expat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-intltool" role="wrap">
  <?dbhtml filename="intltool.html"?>

  <sect1info condition="script">
    <productname class="trade">intltool</productname>
    <productnumber>0.51.0</productnumber>
    <address format="linespecific">https://launchpad.net/intltool/trunk/0.51.0/+download/intltool-0.51.0.tar.gz</address>
  </sect1info>

  <title>Intltool-0.51.0</title>

  <indexterm zone="ch-system-intltool" significance="normal">
    <primary sortas="a-Intltool">Intltool</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Intltool is an internationalization tool used for extracting
    translatable strings from source files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>1.5 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Intltool</title>

    <para>First fix a warning that is caused by perl-5.22 and later:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i 's:\\\${:\\\$\\{:' intltool-update.in</userinput></screen>

    <note><para>The above regular expression looks unusual because of all the
    backslashes.  What it does is add a backslash before the right brace
    character in the sequence '\${' resulting in '\$\{'.</para></note>

    <para>Prepare Intltool for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
install -v -Dm644 doc/I18N-HOWTO /usr/share/doc/intltool-0.51.0/I18N-HOWTO</userinput></screen>

  </sect2>

  <sect2 id="contents-intltool" role="content">
    <title>Contents of Intltool</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>intltool-extract, intltool-merge, intltool-prepare,
        intltool-update, and intltoolize</seg>
        <seg>/usr/share/doc/intltool-0.51.0 and
        /usr/share/intltool</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="intltoolize">
        <term><command moreinfo="none">intltoolize</command></term>
        <listitem>
          <para>Prepares a package to use intltool</para>
          <indexterm zone="ch-system-intltool intltoolize" significance="normal">
            <primary sortas="b-intltoolize">intltoolize</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="intltool-extract">
        <term><command moreinfo="none">intltool-extract</command></term>
        <listitem>
          <para>Generates header files that can be read by <command moreinfo="none">gettext</command></para>
          <indexterm zone="ch-system-intltool intltool-extract" significance="normal">
            <primary sortas="b-intltool-extract">intltool-extract</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="intltool-merge">
        <term><command moreinfo="none">intltool-merge</command></term>
        <listitem>
          <para>Merges translated strings into various file types</para>
          <indexterm zone="ch-system-intltool intltool-merge" significance="normal">
            <primary sortas="b-intltool-merge">intltool-merge</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="intltool-prepare">
        <term><command moreinfo="none">intltool-prepare</command></term>
        <listitem>
          <para>Updates pot files and merges them with translation files</para>
          <indexterm zone="ch-system-intltool intltool-prepare" significance="normal">
            <primary sortas="b-intltool-prepare">intltool-prepare</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="intltool-update">
        <term><command moreinfo="none">intltool-update</command></term>
        <listitem>
          <para>Updates the po template files and merges them with the translations</para>
          <indexterm zone="ch-system-intltool intltool-update" significance="normal">
            <primary sortas="b-intltool-update">intltool-update</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-autoconf" role="wrap">
  <?dbhtml filename="autoconf.html"?>

  <sect1info condition="script">
    <productname class="trade">autoconf</productname>
    <productnumber>2.71</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.xz</address>
  </sect1info>

  <title>Autoconf-2.71</title>

  <indexterm zone="ch-system-autoconf" significance="normal">
    <primary sortas="a-Autoconf">Autoconf</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Autoconf package contains programs for producing shell scripts that
    can automatically configure source code.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU (about 7.3 SBU with tests)</seg>
        <seg>24 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Autoconf</title>
<!--
    <para>First, apply a patch fixes several problems that occur with the latest
    perl, libtool, and bash versions.</para>

<screen><userinput remap="pre">patch -Np1 -i ../&autoconf-fixes-patch;</userinput></screen>
-->
    <para>Prepare Autoconf for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>
<!--
    <para>The test suite is currently broken by bash-5 and libtool-2.4.3.
    To run the tests anyway, issue:</para>
 -->
<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>
<!--
    <para>This takes a long time, about &autoconf-fin-sbu-tests; SBUs. In addition,
    several tests are skipped that use Automake. For full test coverage,
    Autoconf can be re-tested after Automake has been installed.  In addition,
    two tests fail due to changes in libtool-2.4.3 and later.</para>
-->
    <note><para>The test time for autoconf can be reduced significantly on a
    system with multiple cores.  To do this, append
    <command moreinfo="none">TESTSUITEFLAGS=-j&lt;N&gt;</command> to the line above.  For
    instance, using -j4 can reduce the test time by over 60
    percent.</para></note>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-autoconf" role="content">
    <title>Contents of Autoconf</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>autoconf, autoheader, autom4te, autoreconf, autoscan, autoupdate,
        and ifnames</seg>
        <seg>/usr/share/autoconf</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="autoconf">
        <term><command moreinfo="none">autoconf</command></term>
        <listitem>
          <para>Produces shell scripts that automatically configure software
          source code packages to adapt to many kinds of Unix-like systems;
          the configuration scripts it produces are independentârunning
          them does not require the <command moreinfo="none">autoconf</command> program</para>
          <indexterm zone="ch-system-autoconf autoconf" significance="normal">
            <primary sortas="b-autoconf">autoconf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autoheader">
        <term><command moreinfo="none">autoheader</command> </term>
        <listitem>
          <para>A tool for creating template files of C
          <emphasis>#define</emphasis> statements for configure to use</para>
          <indexterm zone="ch-system-autoconf autoheader" significance="normal">
            <primary sortas="b-autoheader">autoheader</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autom4te">
        <term><command moreinfo="none">autom4te</command></term>
        <listitem>
          <para>A wrapper for the M4 macro processor</para>
          <indexterm zone="ch-system-autoconf autom4te" significance="normal">
            <primary sortas="b-autom4te">autom4te</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autoreconf">
        <term><command moreinfo="none">autoreconf</command></term>
        <listitem>
          <para>Automatically runs <command moreinfo="none">autoconf</command>,
          <command moreinfo="none">autoheader</command>, <command moreinfo="none">aclocal</command>,
          <command moreinfo="none">automake</command>, <command moreinfo="none">gettextize</command>, and
          <command moreinfo="none">libtoolize</command> in the correct order to save time
          when changes are made to <command moreinfo="none">autoconf</command> and
          <command moreinfo="none">automake</command> template files</para>
          <indexterm zone="ch-system-autoconf autoreconf" significance="normal">
            <primary sortas="b-autoreconf">autoreconf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autoscan">
        <term><command moreinfo="none">autoscan</command> </term>
        <listitem>
          <para>Helps to create a <filename moreinfo="none">configure.in</filename> file for a
          software package; it examines the source files in a directory tree,
          searching them for common portability issues, and creates a
          <filename moreinfo="none">configure.scan</filename> file that serves as as a
          preliminary <filename moreinfo="none">configure.in</filename> file for the
          package</para>
          <indexterm zone="ch-system-autoconf autoscan" significance="normal">
            <primary sortas="b-autoscan">autoscan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autoupdate">
        <term><command moreinfo="none">autoupdate</command></term>
        <listitem>
          <para>Modifies a <filename moreinfo="none">configure.in</filename> file that still
          calls <command moreinfo="none">autoconf</command> macros by their old names to use the
          current macro names</para>
          <indexterm zone="ch-system-autoconf autoupdate" significance="normal">
            <primary sortas="b-autoupdate">autoupdate</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ifnames">
        <term><command moreinfo="none">ifnames</command> </term>
        <listitem>
          <para>Helps when writing <filename moreinfo="none">configure.in</filename> files
          for a software package; it prints the identifiers that the package
          uses in C preprocessor conditionals [If a package has already been set
          up to have some portability, this program can help determine what
          <command moreinfo="none">configure</command> needs to check for. It can also fill in
          gaps in a <filename moreinfo="none">configure.in</filename> file generated by
          <command moreinfo="none">autoscan</command>.]</para>
          <indexterm zone="ch-system-autoconf ifnames" significance="normal">
            <primary sortas="b-ifnames">ifnames</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-automake" role="wrap">
  <?dbhtml filename="automake.html"?>

  <sect1info condition="script">
    <productname class="trade">automake</productname>
    <productnumber>1.16.4</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/automake/automake-1.16.4.tar.xz</address>
  </sect1info>

  <title>Automake-1.16.4</title>

  <indexterm zone="ch-system-automake" significance="normal">
    <primary sortas="a-Automake">Automake</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Automake package contains programs for generating Makefiles for use
    with Autoconf.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU (about 8.9 SBU with tests)</seg>
        <seg>115 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Automake</title>
<!--
    <para>Fix a failing test:</para>

<screen><userinput remap="pre">sed -i "s/''/etags/" t/tags-lisp-space.sh</userinput></screen>
-->
    <para>Prepare Automake for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr --docdir=/usr/share/doc/automake-1.16.4</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para> Using the -j4 make option speeds up the tests, even on systems with
    only one processor, due to internal delays in individual tests.  To test
    the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make -j4 check</userinput></screen>
<!--
    <para>The tests t/subobj.sh, t/deprecated-acinit.sh, and t/init.sh are known to 
    fail in the LFS environment.</para>
-->
    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>


  <sect2 id="contents-automake" role="content">
    <title>Contents of Automake</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>aclocal, aclocal-1.16 (hard linked with aclocal), automake, and
        automake-1.16 (hard linked with automake) </seg>
        <seg>/usr/share/aclocal-1.16, /usr/share/automake-1.16, and
        /usr/share/doc/automake-1.16.4</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="aclocal">
        <term><command moreinfo="none">aclocal</command></term>
        <listitem>
          <para>Generates <filename moreinfo="none">aclocal.m4</filename> files based on the
          contents of <filename moreinfo="none">configure.in</filename> files</para>
          <indexterm zone="ch-system-automake aclocal" significance="normal">
            <primary sortas="b-aclocal">aclocal</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="aclocalversion">
        <term><command moreinfo="none">aclocal-1.16</command></term>
        <listitem>
          <para>A hard link to <command moreinfo="none">aclocal</command></para>
          <indexterm zone="ch-system-automake aclocalversion" significance="normal">
            <primary sortas="b-aclocal-1.16">aclocal-1.16</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="automake">
        <term><command moreinfo="none">automake</command></term>
        <listitem>
          <para>A tool for automatically generating
          <filename moreinfo="none">Makefile.in</filename> files from
          <filename moreinfo="none">Makefile.am</filename> files [To create all the
          <filename moreinfo="none">Makefile.in</filename> files for a package, run this program
          in the top-level directory. By scanning the
          <filename moreinfo="none">configure.in</filename> file, it automatically finds each
          appropriate <filename moreinfo="none">Makefile.am</filename> file and generates the
          corresponding <filename moreinfo="none">Makefile.in</filename> file.]</para>
          <indexterm zone="ch-system-automake automake" significance="normal">
            <primary sortas="b-automake">automake</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="automake-version">
        <term><command moreinfo="none">automake-1.16</command></term>
        <listitem>
          <para>A hard link to <command moreinfo="none">automake</command></para>
          <indexterm zone="ch-system-automake automake-version" significance="normal">
            <primary sortas="b-automake-1.16">automake-1.16</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-kmod" role="wrap">
  <?dbhtml filename="kmod.html"?>

  <sect1info condition="script">
    <productname class="trade">kmod</productname>
    <productnumber>29</productnumber>
    <address format="linespecific">https://www.kernel.org/pub/linux/utils/kernel/kmod/kmod-29.tar.xz</address>
  </sect1info>

  <title>Kmod-29</title>

  <indexterm zone="ch-system-kmod" significance="normal">
    <primary sortas="a-Kmod">Kmod</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Kmod package contains libraries and utilities for loading kernel
    modules</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>12 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Kmod</title>

    <para>Prepare Kmod for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr          \
            --sysconfdir=/etc      \
            --with-xz              \
            --with-zstd            \
            --with-zlib</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--with-xz, --with-zlib, --with-zstd</parameter></term>
        <listitem>
          <para>These options enable Kmod to handle compressed kernel modules.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>This package does not come with a test suite that can be run in the
    LFS chroot environment.  At a minimum the git program is required and
    several tests will not run outside of a git repository. </para>

    <para>Install the package and create symlinks for
    compatibility with Module-Init-Tools (the package that previously handled
    Linux kernel modules):</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install

for target in depmod insmod modinfo modprobe rmmod; do
  ln -sfv ../bin/kmod /usr/sbin/$target
done

ln -sfv kmod /usr/bin/lsmod</userinput></screen>

  </sect2>

  <sect2 id="contents-kmod" role="content">
    <title>Contents of Kmod</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>

      <seglistitem>
        <seg>depmod (link to kmod), insmod (link to kmod), kmod, 
        lsmod (link to kmod), modinfo (link to kmod), modprobe (link to kmod),
        and rmmod (link to kmod)</seg>
        <seg>libkmod.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="depmod">
        <term><command moreinfo="none">depmod</command></term>
        <listitem>
          <para>Creates a dependency file based on the symbols it finds in the
          existing set of modules; this dependency file is used by
          <command moreinfo="none">modprobe</command> to automatically load the required
          modules</para>
          <indexterm zone="ch-system-kmod depmod" significance="normal">
            <primary sortas="b-depmod">depmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="insmod">
        <term><command moreinfo="none">insmod</command></term>
        <listitem>
          <para>Installs a loadable module in the running kernel</para>
          <indexterm zone="ch-system-kmod insmod" significance="normal">
            <primary sortas="b-insmod">insmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="kmod">
        <term><command moreinfo="none">kmod</command></term>
        <listitem>
          <para>Loads and unloads kernel modules</para>
          <indexterm zone="ch-system-kmod kmod" significance="normal">
            <primary sortas="b-kmod">kmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lsmod">
        <term><command moreinfo="none">lsmod</command></term>
        <listitem>
          <para>Lists currently loaded modules</para>
          <indexterm zone="ch-system-kmod lsmod" significance="normal">
            <primary sortas="b-lsmod">lsmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="modinfo">
        <term><command moreinfo="none">modinfo</command></term>
        <listitem>
          <para>Examines an object file associated with a kernel module and
          displays any information that it can glean</para>
          <indexterm zone="ch-system-kmod modinfo" significance="normal">
            <primary sortas="b-modinfo">modinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="modprobe">
        <term><command moreinfo="none">modprobe</command></term>
        <listitem>
          <para>Uses a dependency file, created by
          <command moreinfo="none">depmod</command>, to automatically load relevant modules</para>
          <indexterm zone="ch-system-kmod modprobe" significance="normal">
            <primary sortas="b-modprobe">modprobe</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rmmod">
        <term><command moreinfo="none">rmmod</command></term>
        <listitem>
          <para>Unloads modules from the running kernel</para>
          <indexterm zone="ch-system-kmod rmmod" significance="normal">
            <primary sortas="b-rmmod">rmmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libkmod">
        <term><filename class="libraryfile" moreinfo="none">libkmod</filename></term>
        <listitem>
          <para>This library is used by other programs to load and unload kernel
           modules</para>
          <indexterm zone="ch-system-kmod" significance="normal">
            <primary sortas="c-libkmod">libkmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-libelf" role="wrap">
  <?dbhtml filename="libelf.html"?>

  <sect1info condition="script">
    <productname class="trade">libelf</productname>
    <productnumber>0.185</productnumber>
    <address format="linespecific">https://sourceware.org/ftp/elfutils/0.185/elfutils-0.185.tar.bz2</address>
  </sect1info>

  <title>Libelf from Elfutils-0.185</title>

  <indexterm zone="ch-system-libelf" significance="normal">
    <primary sortas="a-Libelf">Libelf</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Libelf is a library for handling ELF (Executable and Linkable Format)
    files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.9 SBU</seg>
        <seg>115 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Libelf</title>

      <para>Libelf is part of elfutils-0.185 package. Use
      the elfutils-0.185.tar.bz2 as the source tarball.</para>

    <para>Prepare Libelf for compilation:</para>

    <screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr                \
            --disable-debuginfod         \
            --enable-libdebuginfod=dummy</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>
    
<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

<!--    <para>One test, run-elfclassify.sh, is known to fail.</para>-->

    <para>Install only Libelf:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make -C libelf install
install -vm644 config/libelf.pc /usr/lib/pkgconfig
rm /usr/lib/libelf.a</userinput></screen>

  </sect2>

  <sect2 id="contents-elfutils" role="content">
    <title>Contents of Libelf</title>

    <segmentedlist>
      <segtitle>Installed Library</segtitle>
      <segtitle>Installed Directory</segtitle>

      <seglistitem>
        <seg>
          libelf.so (symlink) and libelf-0.185.so
        </seg>
        <seg>
          /usr/include/elfutils
        </seg>
      </seglistitem>

    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libelf">
        <term><filename class="libraryfile" moreinfo="none">libelf</filename></term>
        <listitem>
          <para>Contains API functions to handle ELF object files</para>
          <indexterm zone="ch-system-libelf libelf" significance="normal">
            <primary sortas="c-libelf">libelf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-libffi" role="wrap">
  <?dbhtml filename="libffi.html"?>

  <sect1info condition="script">
    <productname class="trade">libffi</productname>
    <productnumber>3.4.2</productnumber>
    <address format="linespecific">https://github.com/libffi/libffi/releases/download/v3.4.2/libffi-3.4.2.tar.gz</address>
  </sect1info>

  <title>Libffi-3.4.2</title>

  <indexterm zone="ch-system-libffi" significance="normal">
    <primary sortas="a-libffi">libffi</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Libffi library provides a portable, high level programming
    interface to various calling conventions. This allows a programmer to call
    any function specified by a call interface description at run time.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>2.0 SBU</seg>
        <seg>10 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Libffi</title>

    <note>
      <para>Similar to GMP, libffi builds with optimizations specific
      to the proccesor in use. If building for another system, export
      CFLAGS and CXXFLAGS to specify a generic build for your architecture.
      If this is not done, all applications that link to libffi will trigger
      Illegal Operation Errors.</para>
    </note>

    <para>Prepare libffi for compilation:</para>

    <screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr          \
            --disable-static       \
            --with-gcc-arch=native \
            --disable-exec-static-tramp</userinput></screen>

    <variablelist>
      <title>The meaning of the configure option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--with-gcc-arch=native</parameter></term>
        <listitem>
          <para>Ensure GCC optimizes for the current system.  If this
          is not specified, the system is guessed and the code generated
          may not be correct for some systems.  If the generated code
          will be copied from the native system to a less capable 
          system, use the less capable system as a parameter. For details 
          about alternative system types, see <ulink url="https://gcc.gnu.org/onlinedocs/gcc-11.2.0/gcc/x86-Options.html">
          the x86 options in the GCC manual</ulink>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <!-- To editors: remove it when downstreams are properly
                         fixed. -->
        <term><parameter moreinfo="none">--disable-exec-static-tramp</parameter></term>
        <listitem>
          <para>Disable static trampoline support.  It's a new security
          feature in libffi, but some BLFS packages (notably
          <application moreinfo="none">GJS</application> and
          <application moreinfo="none">gobject-introspection</application>) have not been
          adapted for it.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-libffi" role="content">
    <title>Contents of Libffi</title>

    <segmentedlist>
      <segtitle>Installed library</segtitle>

      <seglistitem>
        <seg>libffi.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libffi">
        <term><filename class="libraryfile" moreinfo="none">libffi</filename></term>
        <listitem>
          <para>contains the foreign function interface API functions</para>
          <indexterm zone="ch-system-libffi" significance="normal">
            <primary sortas="c-libffi">libffi</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-openssl" role="wrap">
  <?dbhtml filename="openssl.html"?>

  <sect1info condition="script">
    <productname class="trade">openssl</productname>
    <productnumber>1.1.1l</productnumber>
    <address format="linespecific">https://www.openssl.org/source/openssl-1.1.1l.tar.gz</address>
  </sect1info>

  <title>OpenSSL-1.1.1l</title>

  <indexterm zone="ch-system-openssl" significance="normal">
    <primary sortas="a-OpenSSL">OpenSSL</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The OpenSSL package contains  management tools and libraries relating
    to cryptography. These are useful for providing cryptographic functions
    to other packages, such as OpenSSH, email applications, and web browsers
    (for accessing HTTPS sites).  </para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>2.2 SBU</seg>
        <seg>154 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of OpenSSL</title>

    <para>Prepare OpenSSL for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./config --prefix=/usr         \
         --openssldir=/etc/ssl \
         --libdir=lib          \
         shared                \
         zlib-dynamic</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make test</userinput></screen>

    <para>One test, 30-test_afalg.t, is known to fail on some kernel
    configurations (depending on inconsistent values of
    CONFIG_CRYPTO_USER_API* settings.) If it fails, it can safely be
    ignored.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">sed -i '/INSTALL_LIBS/s/libcrypto.a libssl.a//' Makefile
make MANSUFFIX=ssl install</userinput></screen>

    <para>Add the version to the documentation directory name, to be
    consistent with other packages:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">mv -v /usr/share/doc/openssl /usr/share/doc/openssl-1.1.1l</userinput></screen>

    <para>If desired, install some additional documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">cp -vfr doc/* /usr/share/doc/openssl-1.1.1l</userinput></screen>

    <note>
      <para>
        You should update OpenSSL when a new version which fixes vulnerabilities
        is announced. The releases run in series, with a letter for each release
        after the initial release (e.g. 1.1.1, 1.1.1a, 1.1.1b, etc). Because LFS
        installs only the shared libraries, there is no need to recompile packages
        which link to <filename class="libraryfile" moreinfo="none">libcrypto.so</filename> or
        <filename class="libraryfile" moreinfo="none">libssl.so</filename>
        <emphasis>when upgrading in the same series.</emphasis>
      </para>

      <para>
        However, any running programs linked to those libraries need to be stopped
        and restarted. Read the related entries in
        <xref linkend="pkgmgmt-upgrade-issues"/> for details.
      </para>

    </note>

  </sect2>

  <sect2 id="contents-openssl" role="content">
    <title>Contents of OpenSSL</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>
          c_rehash and openssl
        </seg>
        <seg>
          libcrypto.so and libssl.so
        </seg>
        <seg>
          /etc/ssl,
          /usr/include/openssl,
          /usr/lib/engines and
          /usr/share/doc/openssl-1.1.1l
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="c_rehash">
        <term><command moreinfo="none">c_rehash</command></term>
        <listitem>
          <para>
            is a <application moreinfo="none">Perl</application> script that scans all files in
            a directory and adds symbolic links to their hash values
          </para>
          <indexterm zone="ch-system-openssl c_rehash" significance="normal">
            <primary sortas="b-c_rehash">c_rehash</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="openssl-prog">
        <term><command moreinfo="none">openssl</command></term>
        <listitem>
          <para>
            is a command-line tool for using the various cryptography functions
            of <application moreinfo="none">OpenSSL</application>'s crypto library from the
            shell. It can be used for various functions which are documented in
            <command moreinfo="none">man 1 openssl</command>
          </para>
          <indexterm zone="ch-system-openssl openssl-prog" significance="normal">
            <primary sortas="b-openssl">openssl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcrypto">
        <term><filename class="libraryfile" moreinfo="none">libcrypto.so</filename></term>
        <listitem>
          <para>
            implements a wide range of cryptographic algorithms used in various
            Internet standards. The services provided by  this library are used
            by the <application moreinfo="none">OpenSSL</application> implementations of SSL,
            TLS and S/MIME, and they have also been used to implement
            <application moreinfo="none">OpenSSH</application>,
            <application moreinfo="none">OpenPGP</application>, and other cryptographic
            standards
          </para>
          <indexterm zone="ch-system-openssl libcrypto" significance="normal">
            <primary sortas="c-libcrypto">libcrypto.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libssl">
        <term><filename class="libraryfile" moreinfo="none">libssl.so</filename></term>
        <listitem>
          <para>
            implements the Transport Layer Security (TLS v1) protocol.
            It provides a rich API, documentation
            on which can be found by running <command moreinfo="none">man 3 ssl</command>
          </para>
          <indexterm zone="ch-system-openssl libssl" significance="normal">
            <primary sortas="c-libssl">libssl.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-Python" role="wrap">
  <?dbhtml filename="Python.html"?>

  <sect1info condition="script">
    <productname class="trade">Python</productname>
    <productnumber>3.9.6</productnumber>
    <address format="linespecific">https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz</address>
  </sect1info>

  <title>Python-3.9.6</title>

  <indexterm zone="ch-system-Python" significance="normal">
    <primary sortas="a-Python">Python</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Python 3 package contains the Python development environment. It
    is useful for object-oriented programming, writing scripts, prototyping
    large programs, or developing entire applications.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>4.4 SBU</seg>
        <seg>260 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Python 3</title>

    <para>Prepare Python for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr        \
            --enable-shared      \
            --with-system-expat  \
            --with-system-ffi    \
            --with-ensurepip=yes \
            --enable-optimizations</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

    <varlistentry>
      <term><parameter moreinfo="none">--with-system-expat</parameter></term>
      <listitem>
        <para>This switch enables linking against system version of
        <application moreinfo="none">Expat</application>.</para>
       </listitem>
     </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">--with-system-ffi</parameter></term>
      <listitem>
        <para>This switch enables linking against system version of
        <application moreinfo="none">libffi</application>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">--with-ensurepip=yes</parameter></term>
      <listitem>
        <para>This switch enables building <command moreinfo="none">pip</command> and
        <command moreinfo="none">setuptools</command> packaging programs.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">--enable-optimizations</parameter></term>
      <listitem>
        <para>This switch enables stable, but expensive, optimizations.</para>
      </listitem>
    </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Running the tests at this point is not recommended.  The
    tests are known to hang indefinitely in the partial LFS environment.
    If desired, the tests can be rerun at the end of this chapter or
    when Python 3 is reinstalled in BLFS.  To run the tests anyway,
    issue <command moreinfo="none">make test</command>.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>If desired, install the preformatted documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">install -v -dm755 /usr/share/doc/python-3.9.6/html 

tar --strip-components=1  \
    --no-same-owner       \
    --no-same-permissions \
    -C /usr/share/doc/python-3.9.6/html \
    -xvf ../python-3.9.6-docs-html.tar.bz2</userinput></screen>

    <variablelist>
      <title>The meaning of the documentation install commands:</title>

    <varlistentry>
      <term><option>--no-same-owner</option> and <option>--no-same-permissions</option></term>
      <listitem>
        <para>Ensure the installed files have the correct ownership and 
        permissions.  Without these options, using <application moreinfo="none">tar</application>
        will install the package files with the upstream creator's values. 
        </para>
      </listitem>
    </varlistentry>

    </variablelist>

  </sect2>

  <sect2 id="contents-python" role="content">
    <title>Contents of Python 3</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Library</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          2to3, idle3, pip3, pydoc3, python3, and python3-config
        </seg>
        <seg>
          libpython3.9.so and libpython3.so
        </seg>
        <seg>
          /usr/include/python3.9, 
          /usr/lib/python3, and
          /usr/share/doc/python-3.9.6
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="python-2to3">
        <term><command moreinfo="none">2to3</command></term>
        <listitem>
          <para>
            is a <application moreinfo="none">Python</application> program that reads
            <application moreinfo="none">Python 2.x</application> source code and applies a
            series of fixes to transform it into 
            valid <application moreinfo="none">Python 3.x</application> code
          </para>
          <indexterm zone="ch-system-Python" significance="normal">
            <primary sortas="b-2to3">2to3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="idle3">
        <term><command moreinfo="none">idle3</command></term>
        <listitem>
          <para>
            is a wrapper script that opens a <application moreinfo="none">Python</application>
            aware GUI editor. For this script to run, you must have installed
            <application moreinfo="none">Tk</application> before Python so that the Tkinter
            Python module is built
          </para>
          <indexterm zone="ch-system-Python" significance="normal">
            <primary sortas="b-idle3">idle3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pip3">
        <term><command moreinfo="none">pip3</command></term>
        <listitem>
          <para>
            The package installer for Python. You can use pip to install
            packages from Python Package Index and other indexes
          </para>
          <indexterm zone="ch-system-Python" significance="normal">
            <primary sortas="b-pip3">pip3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pydoc3">
        <term><command moreinfo="none">pydoc3</command></term>
        <listitem>
          <para>
            is the <application moreinfo="none">Python</application> documentation tool
          </para>
          <indexterm zone="ch-system-Python" significance="normal">
            <primary sortas="b-pydoc3">pydoc3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="python3">
        <term><command moreinfo="none">python3</command></term>
        <listitem>
          <para>
            is an interpreted, interactive, object-oriented programming
            language
          </para>
          <indexterm zone="ch-system-Python" significance="normal">
            <primary sortas="b-python3">python3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-ninja" role="wrap">
  <?dbhtml filename="ninja.html"?>

  <sect1info condition="script">
    <productname class="trade">ninja</productname>
    <productnumber>1.10.2</productnumber>
    <address format="linespecific">https://github.com/ninja-build/ninja/archive/v1.10.2/ninja-1.10.2.tar.gz</address>
  </sect1info>

  <title>Ninja-1.10.2</title>

  <indexterm zone="ch-system-ninja" significance="normal">
    <primary sortas="a-Ninja">Ninja</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Ninja is a small build system with a focus on speed.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>64 MB</seg>
      </seglistitem>
    </segmentedlist>

    <tip revision="sysv">
      <para>This section is not strictly required for LFS if not using
      systemd. On the other hand, ninja associated to meson makes
      a powerful build system combination,
      which is expected to be used more and more often. It is required for
      several packages in <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/">the BLFS
      book</ulink>.</para>
    </tip>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Ninja</title>

    <para>When run, ninja normally runs a maximum number of processes
    in parallel.  By default this is the number of cores on the system 
    plus two.  In some cases this can overheat a CPU or run a system out
    of memory.  If run from the command line, passing a -jN parameter
    will limit the number of parallel processes, but some packages
    embed the execution of ninja and do not pass a -j parameter.</para>

    <para>Using the <emphasis>optional</emphasis> procedure below allows a user to
    limit the number of parallel processes via an environment variable, 
    NINJAJOBS.  <emphasis role="bold">For example</emphasis>, setting:

    <screen format="linespecific">export NINJAJOBS=4</screen>

    will limit ninja to four parallel processes.</para>

    <para>If desired, add the capability to use the environment variable 
    NINJAJOBS by running:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i '/int Guess/a \
  int   j = 0;\
  char* jobs = getenv( "NINJAJOBS" );\
  if ( jobs != NULL ) j = atoi( jobs );\
  if ( j &gt; 0 ) return j;\
' src/ninja.cc</userinput></screen>

    <para>Build Ninja with:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">python3 configure.py --bootstrap</userinput></screen>

    <variablelist>
      <title>The meaning of the build option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--bootstrap</parameter></term>
        <listitem>
          <para>This parameter forces ninja to rebuild itself for the current
          system.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">./ninja ninja_test
./ninja_test --gtest_filter=-SubprocessTest.SetWithLots</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">install -vm755 ninja /usr/bin/
install -vDm644 misc/bash-completion /usr/share/bash-completion/completions/ninja
install -vDm644 misc/zsh-completion  /usr/share/zsh/site-functions/_ninja</userinput></screen>

  </sect2>

  <sect2 id="contents-ninja" role="content">
    <title>Contents of Ninja</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>ninja</seg>
      </seglistitem>
    </segmentedlist>
    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="ninja">
        <term><command moreinfo="none">ninja</command></term>
        <listitem>
          <para>is the Ninja build system</para>
          <indexterm zone="ch-system-ninja ninja" significance="normal">
            <primary sortas="b-ninja">ninja</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-meson" role="wrap">
  <?dbhtml filename="meson.html"?>

  <sect1info condition="script">
    <productname class="trade">meson</productname>
    <productnumber>0.59.1</productnumber>
    <address format="linespecific">https://github.com/mesonbuild/meson/releases/download/0.59.1/meson-0.59.1.tar.gz</address>
  </sect1info>

  <title>Meson-0.59.1</title>

  <indexterm zone="ch-system-meson" significance="normal">
    <primary sortas="a-Meson">Meson</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Meson is an open source build system meant to be both extremely fast
    and as user friendly as possible.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>
      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>40 MB</seg>
      </seglistitem>
    </segmentedlist>

    <tip revision="sysv">
      <para>This section is not strictly required for LFS if not using
      systemd. On the other hand, meson/ninja is a powerful build system,
      which is expected to be used more and more often. It is required for
      several packages in <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/">the BLFS
      book</ulink>.</para>
    </tip>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Meson</title>

<!-- Applied in 0.56.2
    <para>First, apply a patch that fixes an issue with pkgconfig files
    for static libraries:</para>

<screen><userinput remap="pre">patch -Np1 -i ../&meson-fix-patch;</userinput></screen>
-->
    <para>Compile Meson with the following command:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">python3 setup.py build</userinput></screen>

    <para>This package does not come with a test suite.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">python3 setup.py install --root=dest
cp -rv dest/* /
install -vDm644 data/shell-completions/bash/meson /usr/share/bash-completion/completions/meson
install -vDm644 data/shell-completions/zsh/_meson /usr/share/zsh/site-functions/_meson</userinput></screen>

    <variablelist>
      <title>The meaning of the install parameters:</title>
      
      <varlistentry>
        <term><parameter moreinfo="none">--root=dest</parameter></term>
        <listitem>
          <para>By default <command moreinfo="none">python3 setup.py install</command>
          installs various files (such as man pages) into Python Eggs.
          With a specified root location, <command moreinfo="none">setup.py</command> installs
          these files into a standard hierarchy.  Then the hierarchy
          can just be copied to the standard location.
        </para>
        </listitem>
      </varlistentry>

    </variablelist>
  </sect2>

  <sect2 id="contents-meson" role="content">
    <title>Contents of Meson</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>meson</seg>
        <!-- We are using DESTDIR installation here, so the directory layout
          is different than other Python modules in LFS
          (Jinja2 & MarkupSafe). -->
        <seg>/usr/lib/python3.9/site-packages/meson-0.59.1-py3.9.egg-info and /usr/lib/python3.9/site-packages/mesonbuild</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="meson">
		<term><command moreinfo="none">meson</command></term>
        <listitem>
          <para>A high productivity build system</para>
          <indexterm zone="ch-system-meson meson" significance="normal">
            <primary sortas="b-meson">meson</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-coreutils" role="wrap">
  <?dbhtml filename="coreutils.html"?>

  <sect1info condition="script">
    <productname class="trade">coreutils</productname>
    <productnumber>8.32</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/coreutils/coreutils-8.32.tar.xz</address>
  </sect1info>

  <title>Coreutils-8.32</title>

  <indexterm zone="ch-system-coreutils" significance="normal">
    <primary sortas="a-Coreutils">Coreutils</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Coreutils package contains utilities for showing and setting the
    basic system characteristics.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>2.6 SBU</seg>
        <seg>153 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Coreutils</title>

    <para>POSIX requires that programs from Coreutils recognize character
    boundaries correctly even in multibyte locales. The following patch fixes
    this non-compliance and other internationalization-related bugs.</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">patch -Np1 -i ../coreutils-8.32-i18n-1.patch</userinput></screen>

    <note>
      <para>In the past, many bugs were found in this patch. When reporting new
      bugs to Coreutils maintainers, please check first if they are reproducible
      without this patch.</para>
    </note>

   <!-- this has been fixed in upstream gnulib, when a new version of
   coreutils is released, please check #4055 to see if the change has been
   picked up in this package -->
<!--
   <para>Suppress a test which on some machines can loop forever:</para>

<screen><userinput remap="pre">sed -i '/test.lock/s/^/#/' gnulib-tests/gnulib.mk</userinput></screen>
-->
<!--
<para>Fix a problem with autoconf-2.70 in an included gnulib .m4 file:</para>

<screen><userinput remap="pre">echo '# deleted' > m4/std-gnu11.m4</userinput></screen>
-->
    <para>Now prepare Coreutils for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">autoreconf -fiv
FORCE_UNSAFE_CONFIGURE=1 ./configure \
            --prefix=/usr            \
            --enable-no-install-program=kill,uptime</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><command moreinfo="none">autoreconf</command></term>
        <listitem>
          <para>The patch for internationalization has modified the
          building system of the package, so the configuration files have
          to be regenerated.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><envar>FORCE_UNSAFE_CONFIGURE=1</envar></term>
        <listitem>
          <para>This environment variable allows the package to be 
          built as the <systemitem class="username" moreinfo="none">root</systemitem> user.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-no-install-program=kill,uptime</parameter></term>
        <listitem>
          <para>The purpose of this switch is to prevent Coreutils from
          installing binaries that will be installed by other packages later.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Skip down to <quote>Install the
    package</quote> if not running the test suite.</para>

    <para>Now the test suite is ready to be run. First, run the tests that are
    meant to be run as user <systemitem class="username" moreinfo="none">root</systemitem>:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make NON_ROOT_USERNAME=tester check-root</userinput></screen>

    <para>We're going to run the remainder of the tests as the
    <systemitem class="username" moreinfo="none">tester</systemitem> user. Certain tests
    require that the user be a member of more than one group. So that
    these tests are not skipped, add a temporary group and make the
    user <systemitem class="username" moreinfo="none">tester</systemitem> a part of it:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">echo "dummy:x:102:tester" &gt;&gt; /etc/group</userinput></screen>

    <para>Fix some of the permissions so that the non-root user can compile and
    run the tests:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">chown -Rv tester . </userinput></screen>

    <para>Now run the tests:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">su tester -c "PATH=$PATH make RUN_EXPENSIVE_TESTS=yes check"</userinput></screen>
<!--
    <para>The test-getlogin test is known to fail in the LFS chroot environment.</para>
-->
    <para>Remove the temporary group:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">sed -i '/dummy/d' /etc/group</userinput></screen>
    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Move programs to the locations specified by the FHS:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">mv -v /usr/bin/chroot /usr/sbin
mv -v /usr/share/man/man1/chroot.1 /usr/share/man/man8/chroot.8
sed -i 's/"1"/"8"/' /usr/share/man/man8/chroot.8</userinput></screen>

  </sect2>

  <sect2 id="contents-coreutils" role="content">
    <title>Contents of Coreutils</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>[, b2sum, base32, base64, basename, basenc, cat, chcon, chgrp, chmod, chown,
        chroot, cksum, comm, cp, csplit, cut, date, dd, df, dir, dircolors,
        dirname, du, echo, env, expand, expr, factor, false, fmt, fold, groups,
        head, hostid, id, install, join, link, ln, logname, ls, md5sum, mkdir,
        mkfifo, mknod, mktemp, mv, nice, nl, nohup, nproc, numfmt, od, paste,
        pathchk, pinky, pr, printenv, printf, ptx, pwd, readlink, realpath, rm,
        rmdir, runcon, seq, sha1sum, sha224sum, sha256sum, sha384sum,
        sha512sum, shred, shuf, sleep, sort, split, stat, stdbuf, stty, sum,
        sync, tac, tail, tee, test, timeout, touch, tr, true, truncate, tsort,
        tty, uname, unexpand, uniq, unlink, users, vdir, wc, who, whoami, and
        yes</seg>
        <seg>libstdbuf.so (in /usr/libexec/coreutils)</seg>
        <seg>/usr/libexec/coreutils</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="lbracket">
        <term><command moreinfo="none">[</command></term>
        <listitem>
          <para>Is an actual command, /usr/bin/[, that is a synonym
          for the <command moreinfo="none">test</command> command</para>
          <indexterm zone="ch-system-coreutils lbracket" significance="normal">
            <primary sortas="b-111">[</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="base32">
        <term><command moreinfo="none">base32</command></term>
        <listitem>
          <para>Encodes and decodes data according to the base32 specification
          (RFC 4648)</para>
          <indexterm zone="ch-system-coreutils base64" significance="normal">
            <primary sortas="b-base64">base64</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="base64">
        <term><command moreinfo="none">base64</command></term>
        <listitem>
          <para>Encodes and decodes data according to the base64 specification
          (RFC 4648)</para>
          <indexterm zone="ch-system-coreutils base64" significance="normal">
            <primary sortas="b-base64">base64</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="b2sum">
        <term><command moreinfo="none">b2sum</command></term>
        <listitem>
          <para>Prints or checks BLAKE2 (512-bit) checksums</para>
          <indexterm zone="ch-system-coreutils b2sum" significance="normal">
            <primary sortas="b-b2sum">b2sum</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="basename">
        <term><command moreinfo="none">basename</command></term>
        <listitem>
          <para>Strips any path and a given suffix from a file name</para>
          <indexterm zone="ch-system-coreutils basename" significance="normal">
            <primary sortas="b-basename">basename</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="basenc">
        <term><command moreinfo="none">basenc</command></term>
        <listitem>
          <para>Encodes or decodes data using various algorithms</para>
          <indexterm zone="ch-system-coreutils basenc" significance="normal">
            <primary sortas="b-basenc">basenc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cat">
        <term><command moreinfo="none">cat</command></term>
        <listitem>
          <para>Concatenates files to standard output</para>
          <indexterm zone="ch-system-coreutils cat" significance="normal">
            <primary sortas="b-cat">cat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chcon">
        <term><command moreinfo="none">chcon</command></term>
        <listitem>
          <para>Changes security context for files and directories</para>
          <indexterm zone="ch-system-coreutils chcon" significance="normal">
            <primary sortas="b-chcon">chcon</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chgrp">
        <term><command moreinfo="none">chgrp</command></term>
        <listitem>
          <para>Changes the group ownership of files and directories</para>
          <indexterm zone="ch-system-coreutils chgrp" significance="normal">
            <primary sortas="b-chgrp">chgrp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chmod">
        <term><command moreinfo="none">chmod</command></term>
        <listitem>
          <para>Changes the permissions of each file to the given mode; the mode
          can be either a symbolic representation of the changes to make or an
          octal number representing the new permissions</para>
          <indexterm zone="ch-system-coreutils chmod" significance="normal">
            <primary sortas="b-chmod">chmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chown">
        <term><command moreinfo="none">chown</command></term>
        <listitem>
          <para>Changes the user and/or group ownership of files and
          directories</para>
          <indexterm zone="ch-system-coreutils chown" significance="normal">
            <primary sortas="b-chown">chown</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chroot">
        <term><command moreinfo="none">chroot</command></term>
        <listitem>
          <para>Runs a command with the specified directory as the
          <filename class="directory" moreinfo="none">/</filename> directory</para>
          <indexterm zone="ch-system-coreutils chroot" significance="normal">
            <primary sortas="b-chroot">chroot</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cksum">
        <term><command moreinfo="none">cksum</command></term>
        <listitem>
          <para>Prints the Cyclic Redundancy Check (CRC) checksum and the byte
          counts of each specified file</para>
          <indexterm zone="ch-system-coreutils cksum" significance="normal">
            <primary sortas="b-cksum">cksum</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="comm">
        <term><command moreinfo="none">comm</command></term>
        <listitem>
          <para>Compares two sorted files, outputting in three columns the lines
          that are unique and the lines that are common</para>
          <indexterm zone="ch-system-coreutils comm" significance="normal">
            <primary sortas="b-comm">comm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cp">
        <term><command moreinfo="none">cp</command></term>
        <listitem>
          <para>Copies files</para>
          <indexterm zone="ch-system-coreutils cp" significance="normal">
            <primary sortas="b-cp">cp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="csplit">
        <term><command moreinfo="none">csplit</command></term>
        <listitem>
          <para>Splits a given file into several new files, separating them
          according to given patterns or line numbers and outputting the byte
          count of each new file</para>
          <indexterm zone="ch-system-coreutils csplit" significance="normal">
            <primary sortas="b-csplit">csplit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cut">
        <term><command moreinfo="none">cut</command></term>
        <listitem>
          <para>Prints sections of lines, selecting the parts according to given
          fields or positions</para>
          <indexterm zone="ch-system-coreutils cut" significance="normal">
            <primary sortas="b-cut">cut</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="date">
        <term><command moreinfo="none">date</command></term>
        <listitem>
          <para>Displays the current time in the given format, or sets the
          system date</para>
          <indexterm zone="ch-system-coreutils date" significance="normal">
            <primary sortas="b-date">date</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dd">
        <term><command moreinfo="none">dd</command> </term>
        <listitem>
          <para>Copies a file using the given block size and count, while
          optionally performing conversions on it</para>
          <indexterm zone="ch-system-coreutils dd" significance="normal">
            <primary sortas="b-dd">dd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="df">
        <term><command moreinfo="none">df</command></term>
        <listitem>
          <para>Reports the amount of disk space available (and used) on all
          mounted file systems, or only on the file systems holding the selected
          files</para>
          <indexterm zone="ch-system-coreutils df" significance="normal">
            <primary sortas="b-df">df</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dir">
        <term><command moreinfo="none">dir</command></term>
        <listitem>
          <para>Lists the contents of each given directory (the same as
          the <command moreinfo="none">ls</command> command)</para>
          <indexterm zone="ch-system-coreutils dir" significance="normal">
            <primary sortas="b-dir">dir</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dircolors">
        <term><command moreinfo="none">dircolors</command></term>
        <listitem>
          <para>Outputs commands to set the <envar>LS_COLOR</envar>
          environment variable to change the color scheme used by
          <command moreinfo="none">ls</command></para>
          <indexterm zone="ch-system-coreutils dircolors" significance="normal">
            <primary sortas="b-dircolors">dircolors</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dirname">
        <term><command moreinfo="none">dirname</command></term>
        <listitem>
          <para>Strips the non-directory suffix from a file name</para>
          <indexterm zone="ch-system-coreutils dirname" significance="normal">
            <primary sortas="b-dirname">dirname</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="du">
        <term><command moreinfo="none">du</command></term>
        <listitem>
          <para>Reports the amount of disk space used by the current directory,
          by each of the given directories (including all subdirectories) or by
          each of the given files</para>
          <indexterm zone="ch-system-coreutils du" significance="normal">
            <primary sortas="b-du">du</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="echo">
        <term><command moreinfo="none">echo</command></term>
        <listitem>
          <para>Displays the given strings</para>
          <indexterm zone="ch-system-coreutils echo" significance="normal">
            <primary sortas="b-echo">echo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="env">
        <term><command moreinfo="none">env</command></term>
        <listitem>
          <para>Runs a command in a modified environment</para>
          <indexterm zone="ch-system-coreutils env" significance="normal">
            <primary sortas="b-env">env</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="expand">
        <term><command moreinfo="none">expand</command></term>
        <listitem>
          <para>Converts tabs to spaces</para>
          <indexterm zone="ch-system-coreutils expand" significance="normal">
            <primary sortas="b-expand">expand</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="expr">
        <term><command moreinfo="none">expr</command></term>
        <listitem>
          <para>Evaluates expressions</para>
          <indexterm zone="ch-system-coreutils expr" significance="normal">
            <primary sortas="b-expr">expr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="factor">
        <term><command moreinfo="none">factor</command></term>
        <listitem>
          <para>Prints the prime factors of all specified integer numbers</para>
          <indexterm zone="ch-system-coreutils factor" significance="normal">
            <primary sortas="b-factor">factor</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="false">
        <term><command moreinfo="none">false</command></term>
        <listitem>
          <para>Does nothing, unsuccessfully; it always exits with a status code
          indicating failure</para>
          <indexterm zone="ch-system-coreutils false" significance="normal">
            <primary sortas="b-false">false</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fmt">
        <term><command moreinfo="none">fmt</command></term>
        <listitem>
          <para>Reformats the paragraphs in the given files</para>
          <indexterm zone="ch-system-coreutils fmt" significance="normal">
            <primary sortas="b-fmt">fmt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fold">
        <term><command moreinfo="none">fold</command></term>
        <listitem>
          <para>Wraps the lines in the given files</para>
          <indexterm zone="ch-system-coreutils fold" significance="normal">
            <primary sortas="b-fold">fold</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="groups">
        <term><command moreinfo="none">groups</command></term>
        <listitem>
          <para>Reports a user's group memberships</para>
          <indexterm zone="ch-system-coreutils groups" significance="normal">
            <primary sortas="b-groups">groups</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="head">
        <term><command moreinfo="none">head</command></term>
        <listitem>
          <para>Prints the first ten lines (or the given number of lines)
          of each given file</para>
          <indexterm zone="ch-system-coreutils head" significance="normal">
            <primary sortas="b-head">head</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="hostid">
        <term><command moreinfo="none">hostid</command></term>
        <listitem>
          <para>Reports the numeric identifier (in hexadecimal) of the host</para>
          <indexterm zone="ch-system-coreutils hostid" significance="normal">
            <primary sortas="b-hostid">hostid</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="id">
        <term><command moreinfo="none">id</command></term>
        <listitem>
          <para>Reports the effective user ID, group ID, and group memberships
          of the current user or specified user</para>
          <indexterm zone="ch-system-coreutils id" significance="normal">
            <primary sortas="b-id">id</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="install">
        <term><command moreinfo="none">install</command> </term>
        <listitem>
          <para>Copies files while setting their permission modes and, if
          possible, their owner and group</para>
          <indexterm zone="ch-system-coreutils install" significance="normal">
            <primary sortas="b-install">install</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="join">
        <term><command moreinfo="none">join</command></term>
        <listitem>
          <para>Joins the lines that have identical join fields from two
          separate files</para>
          <indexterm zone="ch-system-coreutils join" significance="normal">
            <primary sortas="b-join">join</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="link">
        <term><command moreinfo="none">link</command></term>
        <listitem>
          <para>Creates a hard link with the given name to a file</para>
          <indexterm zone="ch-system-coreutils link" significance="normal">
            <primary sortas="b-link">link</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ln">
        <term><command moreinfo="none">ln</command></term>
        <listitem>
          <para>Makes hard links or soft (symbolic) links between files</para>
          <indexterm zone="ch-system-coreutils ln" significance="normal">
            <primary sortas="b-ln">ln</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="logname">
        <term><command moreinfo="none">logname</command></term>
        <listitem>
          <para>Reports the current user's login name</para>
          <indexterm zone="ch-system-coreutils logname" significance="normal">
            <primary sortas="b-logname">logname</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ls">
        <term><command moreinfo="none">ls</command></term>
        <listitem>
          <para>Lists the contents of each given directory</para>
          <indexterm zone="ch-system-coreutils ls" significance="normal">
            <primary sortas="b-ls">ls</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="md5sum">
        <term><command moreinfo="none">md5sum</command></term>
        <listitem>
          <para>Reports or checks Message Digest 5 (MD5) checksums</para>
          <indexterm zone="ch-system-coreutils md5sum" significance="normal">
            <primary sortas="b-md5sum">md5sum</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mkdir">
        <term><command moreinfo="none">mkdir</command></term>
        <listitem>
          <para>Creates directories with the given names</para>
          <indexterm zone="ch-system-coreutils mkdir" significance="normal">
            <primary sortas="b-mkdir">mkdir</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mkfifo">
        <term><command moreinfo="none">mkfifo</command></term>
        <listitem>
          <para>Creates First-In, First-Outs (FIFOs), a "named
          pipe" in UNIX parlance, with the given names</para>
          <indexterm zone="ch-system-coreutils mkfifo" significance="normal">
            <primary sortas="b-mkfifo">mkfifo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mknod">
        <term><command moreinfo="none">mknod</command></term>
        <listitem>
          <para>Creates device nodes with the given names; a device node is a
          character special file, a block special file, or a FIFO</para>
          <indexterm zone="ch-system-coreutils mknod" significance="normal">
            <primary sortas="b-mknod">mknod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mktemp">
        <term><command moreinfo="none">mktemp</command></term>
        <listitem>
          <para>Creates temporary files in a secure manner; it is used in scripts</para>
        <indexterm zone="ch-system-coreutils mktemp" significance="normal">
          <primary sortas="b-mktemp">mktemp</primary>
        </indexterm>
       </listitem>
     </varlistentry>

      <varlistentry id="mv">
        <term><command moreinfo="none">mv</command></term>
        <listitem>
          <para>Moves or renames files or directories</para>
          <indexterm zone="ch-system-coreutils mv" significance="normal">
            <primary sortas="b-mv">mv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nice">
        <term><command moreinfo="none">nice</command></term>
        <listitem>
          <para>Runs a program with modified scheduling priority</para>
          <indexterm zone="ch-system-coreutils nice" significance="normal">
            <primary sortas="b-nice">nice</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nl">
        <term><command moreinfo="none">nl</command></term>
        <listitem>
          <para>Numbers the lines from the given files</para>
          <indexterm zone="ch-system-coreutils nl" significance="normal">
            <primary sortas="b-nl">nl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nohup">
        <term><command moreinfo="none">nohup</command></term>
        <listitem>
          <para>Runs a command immune to hangups, with its output redirected to
          a log file</para>
          <indexterm zone="ch-system-coreutils nohup" significance="normal">
            <primary sortas="b-nohup">nohup</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nproc">
        <term><command moreinfo="none">nproc</command></term>
        <listitem>
          <para>Prints the number of processing units available to a
          process</para>
          <indexterm zone="ch-system-coreutils nproc" significance="normal">
            <primary sortas="b-nproc">nproc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="numfmt">
        <term><command moreinfo="none">numfmt</command></term>
        <listitem>
          <para>Converts numbers to or from human-readable strings</para>
          <indexterm zone="ch-system-coreutils numfmt" significance="normal">
            <primary sortas="b-numfmt">numfmt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="od">
        <term><command moreinfo="none">od</command></term>
        <listitem>
          <para>Dumps files in octal and other formats</para>
          <indexterm zone="ch-system-coreutils od" significance="normal">
            <primary sortas="b-od">od</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="paste">
        <term><command moreinfo="none">paste</command></term>
        <listitem>
          <para>Merges the given files, joining sequentially corresponding lines
          side by side, separated by tab characters</para>
          <indexterm zone="ch-system-coreutils paste" significance="normal">
            <primary sortas="b-paste">paste</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pathchk">
        <term><command moreinfo="none">pathchk</command></term>
        <listitem>
          <para>Checks if file names are valid or portable</para>
          <indexterm zone="ch-system-coreutils pathchk" significance="normal">
            <primary sortas="b-pathchk">pathchk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pinky">
        <term><command moreinfo="none">pinky</command></term>
        <listitem>
          <para>Is a lightweight finger client; it reports some information
          about the given users</para>
          <indexterm zone="ch-system-coreutils pinky" significance="normal">
            <primary sortas="b-pinky">pinky</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pr">
        <term><command moreinfo="none">pr</command></term>
        <listitem>
          <para>Paginates and columnates files for printing</para>
          <indexterm zone="ch-system-coreutils pr" significance="normal">
            <primary sortas="b-pr">pr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="printenv">
        <term><command moreinfo="none">printenv</command></term>
        <listitem>
          <para>Prints the environment</para>
          <indexterm zone="ch-system-coreutils printenv" significance="normal">
            <primary sortas="b-printenv">printenv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="printf">
        <term><command moreinfo="none">printf</command></term>
        <listitem>
          <para>Prints the given arguments according to the given format, much
          like the C printf function</para>
          <indexterm zone="ch-system-coreutils printf" significance="normal">
            <primary sortas="b-printf">printf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ptx">
        <term><command moreinfo="none">ptx</command></term>
        <listitem>
          <para>Produces a permuted index from the contents of the given files,
          with each keyword in its context</para>
          <indexterm zone="ch-system-coreutils ptx" significance="normal">
            <primary sortas="b-ptx">ptx</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pwd">
        <term><command moreinfo="none">pwd</command></term>
        <listitem>
          <para>Reports the name of the current working directory</para>
          <indexterm zone="ch-system-coreutils pwd" significance="normal">
            <primary sortas="b-pwd">pwd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="readlink">
        <term><command moreinfo="none">readlink</command></term>
        <listitem>
          <para>Reports the value of the given symbolic link</para>
          <indexterm zone="ch-system-coreutils readlink" significance="normal">
            <primary sortas="b-readlink">readlink</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="realpath">
        <term><command moreinfo="none">realpath</command></term>
        <listitem>
          <para>Prints the resolved path</para>
          <indexterm zone="ch-system-coreutils realpath" significance="normal">
            <primary sortas="b-realpath">realpath</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rm">
        <term><command moreinfo="none">rm</command></term>
        <listitem>
          <para>Removes files or directories</para>
          <indexterm zone="ch-system-coreutils rm" significance="normal">
            <primary sortas="b-rm">rm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rmdir">
        <term><command moreinfo="none">rmdir</command></term>
        <listitem>
          <para>Removes directories if they are empty</para>
          <indexterm zone="ch-system-coreutils rmdir" significance="normal">
            <primary sortas="b-rmdir">rmdir</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="runcon">
        <term><command moreinfo="none">runcon</command></term>
        <listitem>
          <para>Runs a command with specified security context</para>
          <indexterm zone="ch-system-coreutils runcon" significance="normal">
            <primary sortas="b-runcon">runcon</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="seq">
        <term><command moreinfo="none">seq</command></term>
        <listitem>
          <para>Prints a sequence of numbers within a given range and with a
          given increment</para>
          <indexterm zone="ch-system-coreutils seq" significance="normal">
            <primary sortas="b-seq">seq</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sha1sum">
        <term><command moreinfo="none">sha1sum</command></term>
        <listitem>
          <para>Prints or checks 160-bit Secure Hash Algorithm 1 (SHA1)
          checksums</para>
          <indexterm zone="ch-system-coreutils sha1sum" significance="normal">
            <primary sortas="b-sha1sum">sha1sum</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sha224sum">
        <term><command moreinfo="none">sha224sum</command></term>
        <listitem>
          <para>Prints or checks 224-bit Secure Hash Algorithm checksums</para>
          <indexterm zone="ch-system-coreutils sha224sum" significance="normal">
            <primary sortas="b-sha224sum">sha224sum</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sha256sum">
        <term><command moreinfo="none">sha256sum</command></term>
        <listitem>
          <para>Prints or checks 256-bit Secure Hash Algorithm checksums</para>
          <indexterm zone="ch-system-coreutils sha256sum" significance="normal">
            <primary sortas="b-sha256sum">sha256sum</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sha384sum">
        <term><command moreinfo="none">sha384sum</command></term>
        <listitem>
          <para>Prints or checks 384-bit Secure Hash Algorithm checksums</para>
          <indexterm zone="ch-system-coreutils sha384sum" significance="normal">
            <primary sortas="b-sha384sum">sha384sum</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sha512sum">
        <term><command moreinfo="none">sha512sum</command></term>
        <listitem>
          <para>Prints or checks 512-bit Secure Hash Algorithm checksums</para>
          <indexterm zone="ch-system-coreutils sha512sum" significance="normal">
            <primary sortas="b-sha512sum">sha512sum</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="shred">
        <term><command moreinfo="none">shred</command></term>
        <listitem>
          <para>Overwrites the given files repeatedly with complex patterns,
          making it difficult to recover the data</para>
          <indexterm zone="ch-system-coreutils shred" significance="normal">
            <primary sortas="b-shred">shred</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="shuf">
        <term><command moreinfo="none">shuf</command></term>
        <listitem>
          <para>Shuffles lines of text</para>
          <indexterm zone="ch-system-coreutils shuf" significance="normal">
            <primary sortas="b-shuf">shuf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sleep">
        <term><command moreinfo="none">sleep</command></term>
        <listitem>
          <para>Pauses for the given amount of time</para>
          <indexterm zone="ch-system-coreutils sleep" significance="normal">
            <primary sortas="b-sleep">sleep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sort">
        <term><command moreinfo="none">sort</command></term>
        <listitem>
          <para>Sorts the lines from the given files</para>
          <indexterm zone="ch-system-coreutils sort" significance="normal">
            <primary sortas="b-sort">sort</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="split">
        <term><command moreinfo="none">split</command></term>
        <listitem>
          <para>Splits the given file into pieces, by size or by number of
          lines</para>
          <indexterm zone="ch-system-coreutils split" significance="normal">
            <primary sortas="b-split">split</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="stat">
        <term><command moreinfo="none">stat</command></term>
        <listitem>
          <para>Displays file or filesystem status</para>
          <indexterm zone="ch-system-coreutils stat" significance="normal">
            <primary sortas="b-stat">stat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="stdbuf">
        <term><command moreinfo="none">stdbuf</command></term>
        <listitem>
          <para>Runs commands with altered buffering operations for its standard
          streams</para>
          <indexterm zone="ch-system-coreutils stdbuf" significance="normal">
            <primary sortas="b-stdbuf">stdbuf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="stty">
        <term><command moreinfo="none">stty</command></term>
        <listitem>
          <para>Sets or reports terminal line settings</para>
          <indexterm zone="ch-system-coreutils stty" significance="normal">
            <primary sortas="b-stty">stty</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sum">
        <term><command moreinfo="none">sum</command></term>
        <listitem>
          <para>Prints checksum and block counts for each given file</para>
          <indexterm zone="ch-system-coreutils sum" significance="normal">
            <primary sortas="b-sum">sum</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sync">
        <term><command moreinfo="none">sync</command></term>
        <listitem>
          <para>Flushes file system buffers; it forces changed blocks to disk
          and updates the super block</para>
          <indexterm zone="ch-system-coreutils sync" significance="normal">
            <primary sortas="b-sync">sync</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tac">
        <term><command moreinfo="none">tac</command></term>
        <listitem>
          <para>Concatenates the given files in reverse</para>
          <indexterm zone="ch-system-coreutils tac" significance="normal">
            <primary sortas="b-tac">tac</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tail">
        <term><command moreinfo="none">tail</command></term>
        <listitem>
          <para>Prints the last ten lines (or the given number of lines) of each
          given file</para>
          <indexterm zone="ch-system-coreutils tail" significance="normal">
            <primary sortas="b-tail">tail</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tee">
        <term><command moreinfo="none">tee</command></term>
        <listitem>
          <para>Reads from standard input while writing both to standard output
          and to the given files</para>
          <indexterm zone="ch-system-coreutils tee" significance="normal">
            <primary sortas="b-tee">tee</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="test">
        <term><command moreinfo="none">test</command></term>
        <listitem>
          <para>Compares values and checks file types</para>
          <indexterm zone="ch-system-coreutils test" significance="normal">
            <primary sortas="b-test">test</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="timeout">
        <term><command moreinfo="none">timeout</command></term>
        <listitem>
          <para>Runs a command with a time limit</para>
          <indexterm zone="ch-system-coreutils timeout" significance="normal">
            <primary sortas="b-timeout">timeout</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="touch">
        <term><command moreinfo="none">touch</command></term>
        <listitem>
          <para>Changes file timestamps, setting the access and modification
          times of the given files to the current time; files that do not exist
          are created with zero length</para>
          <indexterm zone="ch-system-coreutils touch" significance="normal">
            <primary sortas="b-touch">touch</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tr">
        <term><command moreinfo="none">tr</command></term>
        <listitem>
          <para>Translates, squeezes, and deletes the given characters from
          standard input</para>
          <indexterm zone="ch-system-coreutils tr" significance="normal">
            <primary sortas="b-tr">tr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="true">
        <term><command moreinfo="none">true</command></term>
        <listitem>
          <para>Does nothing, successfully; it always exits with a status code
          indicating success</para>
          <indexterm zone="ch-system-coreutils true" significance="normal">
            <primary sortas="b-true">true</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="truncate">
        <term><command moreinfo="none">truncate</command></term>
        <listitem>
          <para>Shrinks or expands a file to the specified size</para>
          <indexterm zone="ch-system-coreutils truncate" significance="normal">
            <primary sortas="b-truncate">truncate</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tsort">
        <term><command moreinfo="none">tsort</command></term>
        <listitem>
          <para>Performs a topological sort; it writes a completely ordered list
          according to the partial ordering in a given file</para>
          <indexterm zone="ch-system-coreutils tsort" significance="normal">
            <primary sortas="b-tsort">tsort</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tty">
        <term><command moreinfo="none">tty</command></term>
        <listitem>
          <para>Reports the file name of the terminal connected to standard
          input</para>
          <indexterm zone="ch-system-coreutils tty" significance="normal">
            <primary sortas="b-tty">tty</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="uname">
        <term><command moreinfo="none">uname</command></term>
        <listitem>
          <para>Reports system information</para>
          <indexterm zone="ch-system-coreutils uname" significance="normal">
            <primary sortas="b-uname">uname</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="unexpand">
        <term><command moreinfo="none">unexpand</command></term>
        <listitem>
          <para>Converts spaces to tabs</para>
          <indexterm zone="ch-system-coreutils unexpand" significance="normal">
            <primary sortas="b-unexpand">unexpand</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="uniq">
        <term><command moreinfo="none">uniq</command></term>
        <listitem>
          <para>Discards all but one of successive identical lines</para>
          <indexterm zone="ch-system-coreutils uniq" significance="normal">
            <primary sortas="b-uniq">uniq</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="unlink">
        <term><command moreinfo="none">unlink</command></term>
        <listitem>
          <para>Removes the given file</para>
          <indexterm zone="ch-system-coreutils unlink" significance="normal">
            <primary sortas="b-unlink">unlink</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="users">
        <term><command moreinfo="none">users</command></term>
        <listitem>
          <para>Reports the names of the users currently logged on</para>
          <indexterm zone="ch-system-coreutils users" significance="normal">
            <primary sortas="b-users">users</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vdir">
        <term><command moreinfo="none">vdir</command></term>
        <listitem>
          <para>Is the same as <command moreinfo="none">ls -l</command></para>
          <indexterm zone="ch-system-coreutils vdir" significance="normal">
            <primary sortas="b-vdir">vdir</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="wc">
        <term><command moreinfo="none">wc</command></term>
        <listitem>
          <para>Reports the number of lines, words, and bytes for each given
          file, as well as a total line when more than one file is given</para>
          <indexterm zone="ch-system-coreutils wc" significance="normal">
            <primary sortas="b-wc">wc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="who">
        <term><command moreinfo="none">who</command></term>
        <listitem>
          <para>Reports who is logged on</para>
          <indexterm zone="ch-system-coreutils who" significance="normal">
            <primary sortas="b-who">who</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="whoami">
        <term><command moreinfo="none">whoami</command></term>
        <listitem>
          <para>Reports the user name associated with the current effective
          user ID</para>
          <indexterm zone="ch-system-coreutils whoami" significance="normal">
            <primary sortas="b-whoami">whoami</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="yes">
        <term><command moreinfo="none">yes</command></term>
        <listitem>
          <para>Repeatedly outputs <quote>y</quote> or a given string until
          killed</para>
          <indexterm zone="ch-system-coreutils yes" significance="normal">
            <primary sortas="b-yes">yes</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libstdbuf">
        <term><filename class="libraryfile" moreinfo="none">libstdbuf</filename></term>
        <listitem>
          <para>Library used by <command moreinfo="none">stdbuf</command></para>
          <indexterm zone="ch-system-coreutils libstdbuf" significance="normal">
            <primary sortas="c-libstdbuf">libstdbuf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-check" role="wrap">
  <?dbhtml filename="check.html"?>

  <sect1info condition="script">
    <productname class="trade">check</productname>
    <productnumber>0.15.2</productnumber>
    <address format="linespecific">https://github.com/libcheck/check/releases/download/0.15.2/check-0.15.2.tar.gz</address>
  </sect1info>

  <title>Check-0.15.2</title>

  <indexterm zone="ch-system-check" significance="normal">
    <primary sortas="a-Check">Check</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Check is a unit testing framework for C.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU (about 4.1 SBU with tests)</seg>
        <seg>12 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Check</title>

    <para>Prepare Check for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr --disable-static</userinput></screen>

    <para>Build the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Compilation is now complete.  To run the Check test suite, issue the
    following command:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

<!--    <para>Note that the Check test suite may take a relatively long
    (up to 4 SBU) time.</para>
-->
    <para>Install the package:</para>

    <screen format="linespecific"><userinput remap="install" moreinfo="none">make docdir=/usr/share/doc/check-0.15.2 install</userinput></screen>

  </sect2>

  <sect2 id="contents-check" role="content">
    <title>Contents of Check</title>

    <segmentedlist>
      <segtitle>Installed program</segtitle>
      <segtitle>Installed library</segtitle>

      <seglistitem>
        <seg>checkmk</seg>
        <seg>libcheck.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="checkmk">
        <term><command moreinfo="none">checkmk</command></term>
        <listitem>
          <para>Awk script for generating C unit tests for use with the Check
          unit testing framework</para>
          <indexterm zone="ch-system-check checkmk" significance="normal">
            <primary sortas="b-checmk">checkmk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcheck">
        <term><filename class="libraryfile" moreinfo="none">libcheck.{a,so}</filename></term>
        <listitem>
          <para>Contains functions that allow Check to be called from a test
          program</para>
          <indexterm zone="ch-system-check libcheck" significance="normal">
            <primary sortas="c-libcheck">libcheck</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1> 
  <sect1 id="ch-system-diffutils" role="wrap">
  <?dbhtml filename="diffutils.html"?>

  <sect1info condition="script">
    <productname class="trade">diffutils</productname>
    <productnumber>3.8</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/diffutils/diffutils-3.8.tar.xz</address>
  </sect1info>

  <title>Diffutils-3.8</title>

  <indexterm zone="ch-system-diffutils" significance="normal">
    <primary sortas="a-Diffutils">Diffutils</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Diffutils package contains programs that show the differences
    between files or directories.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.7 SBU</seg>
        <seg>36 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Diffutils</title>

    <para>Prepare Diffutils for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>


  <sect2 id="contents-diffutils" role="content">
    <title>Contents of Diffutils</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>cmp, diff, diff3, and sdiff</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="cmp">
        <term><command moreinfo="none">cmp</command></term>
        <listitem>
          <para>Compares two files and reports whether or in which bytes they
          differ</para>
          <indexterm zone="ch-system-diffutils cmp" significance="normal">
            <primary sortas="b-cmp">cmp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="diff">
        <term><command moreinfo="none">diff</command></term>
        <listitem>
          <para>Compares two files or directories and reports which lines in
          the files differ</para>
          <indexterm zone="ch-system-diffutils diff" significance="normal">
            <primary sortas="b-diff">diff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="diff3">
        <term><command moreinfo="none">diff3</command></term>
        <listitem>
            <para>Compares three files line by line</para>
            <indexterm zone="ch-system-diffutils diff3" significance="normal">
              <primary sortas="b-diff3">diff3</primary>
            </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sdiff">
        <term><command moreinfo="none">sdiff</command></term>
        <listitem>
          <para>Merges two files and interactively outputs the results</para>
          <indexterm zone="ch-system-diffutils sdiff" significance="normal">
            <primary sortas="b-sdiff">sdiff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-gawk" role="wrap">
  <?dbhtml filename="gawk.html"?>

  <sect1info condition="script">
    <productname class="trade">gawk</productname>
    <productnumber>5.1.0</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gawk/gawk-5.1.0.tar.xz</address>
  </sect1info>

  <title>Gawk-5.1.0</title>

  <indexterm zone="ch-system-gawk" significance="normal">
    <primary sortas="a-Gawk">Gawk</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Gawk package contains programs for manipulating text files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.4 SBU</seg>
        <seg>42 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Gawk</title>

    <para>First, ensure some unneeded files are not installed:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i 's/extras//' Makefile.in</userinput></screen>

    <para>Prepare Gawk for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>If desired, install the documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">mkdir -v /usr/share/doc/gawk-5.1.0
cp    -v doc/{awkforai.txt,*.{eps,pdf,jpg}} /usr/share/doc/gawk-5.1.0</userinput></screen>

  </sect2>

  <sect2 id="contents-gawk" role="content">
    <title>Contents of Gawk</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>awk (link to gawk), gawk, and awk-5.1.0</seg>
        <seg>filefuncs.so, fnmatch.so, fork.so, inplace.so, intdiv.so, ordchr.so,
        readdir.so, readfile.so, revoutput.so, revtwoway.so, rwarray.so,
        and time.so (all in /usr/lib/gawk)</seg>
        <seg>/usr/lib/gawk, /usr/libexec/awk, /usr/share/awk, and
        /usr/share/doc/gawk-5.1.0</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="awk">
        <term><command moreinfo="none">awk</command></term>
        <listitem>
          <para>A link to <command moreinfo="none">gawk</command></para>
          <indexterm zone="ch-system-gawk awk" significance="normal">
            <primary sortas="b-awk">awk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gawk">
        <term><command moreinfo="none">gawk</command></term>
        <listitem>
          <para>A program for manipulating text files; it is the GNU
          implementation of <command moreinfo="none">awk</command></para>
          <indexterm zone="ch-system-gawk gawk" significance="normal">
            <primary sortas="b-gawk">gawk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gawk-version">
        <term><command moreinfo="none">gawk-5.1.0</command></term>
        <listitem>
          <para>A hard link to <command moreinfo="none">gawk</command></para>
          <indexterm zone="ch-system-gawk gawk-version" significance="normal">
            <primary sortas="b-gawk-5.1.0">gawk-5.1.0</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-findutils" role="wrap">
  <?dbhtml filename="findutils.html"?>

  <sect1info condition="script">
    <productname class="trade">findutils</productname>
    <productnumber>4.8.0</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/findutils/findutils-4.8.0.tar.xz</address>
  </sect1info>

  <title>Findutils-4.8.0</title>

  <indexterm zone="ch-system-findutils" significance="normal">
    <primary sortas="a-Findutils">Findutils</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Findutils package contains programs to find files. These programs
    are provided to recursively search through a directory tree and to
    create, maintain, and search a database (often faster than the recursive
    find, but is unreliable if the database has not been recently updated).</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.9 SBU</seg>
        <seg>52 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Findutils</title>

    <para>Prepare Findutils for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr --localstatedir=/var/lib/locate</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--localstatedir</parameter></term>
        <listitem>
          <para>This option changes the location of the <command moreinfo="none">locate</command>
          database to be in <filename class="directory" moreinfo="none">/var/lib/locate</filename>,
          which is FHS-compliant.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">chown -Rv tester .
su tester -c "PATH=$PATH make check"</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-findutils" role="content">
    <title>Contents of Findutils</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>find, locate, updatedb, and xargs</seg>
        <seg>/var/lib/locate</seg>
      </seglistitem>

    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="find">
        <term><command moreinfo="none">find</command></term>
        <listitem>
          <para>Searches given directory trees for files matching the specified
          criteria</para>
          <indexterm zone="ch-system-findutils find" significance="normal">
            <primary sortas="b-find">find</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="locate">
        <term><command moreinfo="none">locate</command></term>
        <listitem>
          <para>Searches through a database of file names and reports the names
          that contain a given string or match a given pattern</para>
          <indexterm zone="ch-system-findutils locate" significance="normal">
            <primary sortas="b-locate">locate</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="updatedb">
      <term><command moreinfo="none">updatedb</command></term>
        <listitem>
          <para>Updates the <command moreinfo="none">locate</command> database; it scans the
          entire file system (including other file systems that are currently
          mounted, unless told not to) and puts every file name it finds into
          the database</para>
          <indexterm zone="ch-system-findutils updatedb" significance="normal">
            <primary sortas="b-updatedb">updatedb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xargs">
        <term><command moreinfo="none">xargs</command></term>
        <listitem>
          <para>Can be used to apply a given command to a list of files</para>
          <indexterm zone="ch-system-findutils xargs" significance="normal">
            <primary sortas="b-xargs">xargs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-groff" role="wrap">
  <?dbhtml filename="groff.html"?>

  <sect1info condition="script">
    <productname class="trade">groff</productname>
    <productnumber>1.22.4</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/groff/groff-1.22.4.tar.gz</address>
  </sect1info>

  <title>Groff-1.22.4</title>

  <indexterm zone="ch-system-groff" significance="normal">
    <primary sortas="a-Groff">Groff</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Groff package contains programs for processing and formatting
    text.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.5 SBU</seg>
        <seg>88 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Groff</title>

    <para>Groff expects the environment variable <envar>PAGE</envar> to
    contain the default paper size. For users in the United States,
    <parameter moreinfo="none">PAGE=letter</parameter> is appropriate. Elsewhere,
    <parameter moreinfo="none">PAGE=A4</parameter> may be more suitable. While the default
    paper size is configured during compilation, it can be overridden later
    by echoing either <quote>A4</quote> or <quote>letter</quote> to the
    <filename moreinfo="none">/etc/papersize</filename> file.</para>

    <para>Prepare Groff for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">PAGE=<replaceable>&lt;paper_size&gt;</replaceable> ./configure --prefix=/usr</userinput></screen>

    <para>This package does not support parallel build. Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make -j1</userinput></screen>

    <para>This package does not come with a test suite.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-groff" role="content">
  <title>Contents of Groff</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>addftinfo, afmtodit, chem, eqn, eqn2graph, gdiffmk, glilypond,
        gperl, gpinyin, grap2graph, grn, grodvi, groff, groffer, grog, grolbp,
        grolj4, gropdf, grops, grotty, hpftodit, indxbib, lkbib, lookbib,
        mmroff, neqn, nroff, pdfmom, pdfroff, pfbtops, pic, pic2graph,
        post-grohtml, preconv, pre-grohtml, refer, roff2dvi, roff2html,
        roff2pdf, roff2ps, roff2text, roff2x, soelim, tbl, tfmtodit, and
        troff</seg>
        <seg>/usr/lib/groff and /usr/share/doc/groff-1.22.4,
        /usr/share/groff</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="addftinfo">
        <term><command moreinfo="none">addftinfo</command></term>
        <listitem>
          <para>Reads a troff font file and adds some additional font-metric
          information that is used by the <command moreinfo="none">groff</command> system</para>
          <indexterm zone="ch-system-groff addftinfo" significance="normal">
            <primary sortas="b-addftinfo">addftinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="afmtodit">
        <term><command moreinfo="none">afmtodit</command></term>
        <listitem>
          <para>Creates a font file for use with <command moreinfo="none">groff</command> and
          <command moreinfo="none">grops</command></para>
          <indexterm zone="ch-system-groff afmtodit" significance="normal">
            <primary sortas="b-afmtodit">afmtodit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chem">
        <term><command moreinfo="none">chem</command></term>
        <listitem>
          <para>Groff preprocessor for producing chemical structure diagrams</para>
          <indexterm zone="ch-system-groff chem" significance="normal">
            <primary sortas="b-chem">chem</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="eqn">
        <term><command moreinfo="none">eqn</command></term>
        <listitem>
          <para>Compiles descriptions of equations embedded within troff
          input files into commands that are understood by
          <command moreinfo="none">troff</command></para>
          <indexterm zone="ch-system-groff eqn" significance="normal">
            <primary sortas="b-eqn">eqn</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="eqn2graph">
        <term><command moreinfo="none">eqn2graph</command></term>
        <listitem>
          <para>Converts a troff EQN (equation) into a cropped image</para>
          <indexterm zone="ch-system-groff eqn2graph" significance="normal">
            <primary sortas="b-eqn2graph">eqn2graph</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gdiffmk">
        <term><command moreinfo="none">gdiffmk</command></term>
        <listitem>
          <para>Marks differences between groff/nroff/troff files</para>
          <indexterm zone="ch-system-groff gdiffmk" significance="normal">
            <primary sortas="b-gdiffmk">gdiffmk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="glilypond">
        <term><command moreinfo="none">glilypond</command></term>
        <listitem>
          <para>Transforms sheet music written in the lilypond language into
          the groff language</para>
          <indexterm zone="ch-system-groff glilypond" significance="normal">
            <primary sortas="b-glilypond">glilypond</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gperl">
        <term><command moreinfo="none">gperl</command></term>
        <listitem>
          <para>Preprocesor for groff, allowing addition of perl code
          into groff files</para>
          <indexterm zone="ch-system-groff gperl" significance="normal">
            <primary sortas="b-gperl">gperl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gpinyin">
        <term><command moreinfo="none">gpinyin</command></term>
        <listitem>
          <para>Preprocesor for groff, allowing addition of Chinese
          European-like language Pinyin into groff files.</para>
          <indexterm zone="ch-system-groff gpinyin" significance="normal">
            <primary sortas="b-gpinyin">gpinyin</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grap2graph">
        <term><command moreinfo="none">grap2graph</command></term>
        <listitem>
          <para>Converts a grap diagram into a cropped bitmap image</para>
          <indexterm zone="ch-system-groff grap2graph" significance="normal">
            <primary sortas="b-grap2graph">grap2graph</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grn">
        <term><command moreinfo="none">grn</command></term>
        <listitem>
          <para>A <command moreinfo="none">groff</command> preprocessor for gremlin files</para>
          <indexterm zone="ch-system-groff grn" significance="normal">
            <primary sortas="b-grn">grn</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grodvi">
        <term><command moreinfo="none">grodvi</command></term>
        <listitem>
          <para>A driver for <command moreinfo="none">groff</command> that produces TeX dvi
          format</para>
          <indexterm zone="ch-system-groff grodvi" significance="normal">
            <primary sortas="b-grodvi">grodvi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="groff">
        <term><command moreinfo="none">groff</command></term>
        <listitem>
          <para>A front-end to the groff document formatting system; normally, it
          runs the <command moreinfo="none">troff</command> program and a post-processor
          appropriate for the selected device</para>
          <indexterm zone="ch-system-groff groff" significance="normal">
            <primary sortas="b-groff">groff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="groffer">
        <term><command moreinfo="none">groffer</command></term>
        <listitem>
          <para>Displays groff files and man pages on X and tty terminals</para>
          <indexterm zone="ch-system-groff groffer" significance="normal">
            <primary sortas="b-groffer">groffer</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grog">
        <term><command moreinfo="none">grog</command></term>
        <listitem>
          <para>Reads files and guesses which of the <command moreinfo="none">groff</command>
          options <option>-e</option>, <option>-man</option>, <option>-me</option>,
          <option>-mm</option>, <option>-ms</option>, <option>-p</option>,
          <option>-s</option>, and <option>-t</option> are required for printing
          files, and reports the <command moreinfo="none">groff</command> command including those
          options</para>
          <indexterm zone="ch-system-groff grog" significance="normal">
            <primary sortas="b-grog">grog</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grolbp">
        <term><command moreinfo="none">grolbp</command></term>
        <listitem>
          <para>Is a <command moreinfo="none">groff</command> driver for Canon CAPSL printers
          (LBP-4 and LBP-8 series laser printers)</para>
          <indexterm zone="ch-system-groff grolbp" significance="normal">
            <primary sortas="b-grolbp">grolbp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grolj4">
        <term><command moreinfo="none">grolj4</command></term>
        <listitem>
          <para>Is a driver for <command moreinfo="none">groff</command> that produces output
          in PCL5 format suitable for an HP LaserJet 4 printer</para>
          <indexterm zone="ch-system-groff grolj4" significance="normal">
            <primary sortas="b-grolj4">grolj4</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gropdf">
        <term><command moreinfo="none">gropdf</command></term>
        <listitem>
          <para>Translates the output of GNU <command moreinfo="none">troff</command> to
          PDF</para>
          <indexterm zone="ch-system-groff gropdf" significance="normal">
            <primary sortas="b-gropdf">gropdf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grops">
        <term><command moreinfo="none">grops</command></term>
        <listitem>
          <para>Translates the output of GNU <command moreinfo="none">troff</command> to
          PostScript</para>
          <indexterm zone="ch-system-groff grops" significance="normal">
            <primary sortas="b-grops">grops</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grotty">
        <term><command moreinfo="none">grotty</command></term>
        <listitem>
          <para>Translates the output of GNU <command moreinfo="none">troff</command> into
          a form suitable for typewriter-like devices</para>
          <indexterm zone="ch-system-groff grotty" significance="normal">
            <primary sortas="b-grotty">grotty</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="hpftodit">
        <term><command moreinfo="none">hpftodit</command></term>
        <listitem>
          <para>Creates a font file for use with <command moreinfo="none">groff -Tlj4</command>
          from an HP-tagged font metric file</para>
          <indexterm zone="ch-system-groff hpftodit" significance="normal">
            <primary sortas="b-hpftodit">hpftodit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="indxbib">
        <term><command moreinfo="none">indxbib</command></term>
        <listitem>
          <para>Creates an inverted index for the bibliographic databases with a
          specified file for use with <command moreinfo="none">refer</command>,
          <command moreinfo="none">lookbib</command>, and <command moreinfo="none">lkbib</command></para>
          <indexterm zone="ch-system-groff indxbib" significance="normal">
            <primary sortas="b-indxbib">indxbib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lkbib">
        <term><command moreinfo="none">lkbib</command></term>
        <listitem>
          <para>Searches bibliographic databases for references that contain
          specified keys and reports any references found</para>
          <indexterm zone="ch-system-groff lkbib" significance="normal">
            <primary sortas="b-lkbib">lkbib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lookbib">
        <term><command moreinfo="none">lookbib</command></term>
        <listitem>
          <para>Prints a prompt on the standard error (unless the standard input
          is not a terminal), reads a line containing a set of keywords from the
          standard input, searches the bibliographic databases in a specified file
          for references containing those keywords, prints any references found
          on the standard output, and repeats this process until the end of
          input</para>
          <indexterm zone="ch-system-groff lookbib" significance="normal">
            <primary sortas="b-lookbib">lookbib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mmroff">
        <term><command moreinfo="none">mmroff</command></term>
        <listitem>
          <para>A simple preprocessor for <command moreinfo="none">groff</command></para>
          <indexterm zone="ch-system-groff mmroff" significance="normal">
            <primary sortas="b-mmroff">mmroff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="neqn">
        <term><command moreinfo="none">neqn</command></term>
        <listitem>
          <para>Formats equations for American Standard Code for Information
          Interchange (ASCII) output</para>
          <indexterm zone="ch-system-groff neqn" significance="normal">
            <primary sortas="b-neqn">neqn</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nroff">
        <term><command moreinfo="none">nroff</command></term>
        <listitem>
          <para>A script that emulates the <command moreinfo="none">nroff</command> command
          using <command moreinfo="none">groff</command></para>
          <indexterm zone="ch-system-groff nroff" significance="normal">
            <primary sortas="b-nroff">nroff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pdfmom">
        <term><command moreinfo="none">pdfmom</command></term>
        <listitem>
          <para>Is a wrapper around groff that facilitates the production of PDF
          documents from files formatted with the mom macros.</para>
          <indexterm zone="ch-system-groff pdfmom" significance="normal">
            <primary sortas="b-pdfmom">pdfmom</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pdfroff">
        <term><command moreinfo="none">pdfroff</command></term>
        <listitem>
          <para>Creates pdf documents using groff</para>
          <indexterm zone="ch-system-groff pdfroff" significance="normal">
            <primary sortas="b-pdfroff">pdfroff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pfbtops">
        <term><command moreinfo="none">pfbtops</command></term>
        <listitem>
          <para>Translates a PostScript font in <filename class="extension" moreinfo="none">.pfb</filename> format to ASCII</para>
          <indexterm zone="ch-system-groff pfbtops" significance="normal">
            <primary sortas="b-pfbtops">pfbtops</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pic">
        <term><command moreinfo="none">pic</command></term>
        <listitem>
          <para>Compiles descriptions of pictures embedded within troff or
          TeX input files into commands understood by TeX or
          <command moreinfo="none">troff</command></para>
          <indexterm zone="ch-system-groff pic" significance="normal">
            <primary sortas="b-pic">pic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pic2graph">
        <term><command moreinfo="none">pic2graph</command></term>
        <listitem>
          <para>Converts a PIC diagram into a cropped image</para>
          <indexterm zone="ch-system-groff pic2graph" significance="normal">
            <primary sortas="b-pic2graph">pic2graph</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="post-grohtml">
        <term><command moreinfo="none">post-grohtml</command></term>
        <listitem>
          <para>Translates the output of GNU <command moreinfo="none">troff</command> to
          HTML</para>
          <indexterm zone="ch-system-groff post-grohtml" significance="normal">
            <primary sortas="b-post-grohtml">post-grohtml</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="preconv">
        <term><command moreinfo="none">preconv</command></term>
        <listitem>
          <para>Converts encoding of input files to something GNU
          <command moreinfo="none">troff</command> understands</para>
          <indexterm zone="ch-system-groff preconv" significance="normal">
            <primary sortas="b-preconv">preconv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pre-grohtml">
        <term><command moreinfo="none">pre-grohtml </command></term>
        <listitem>
          <para>Translates the output of GNU <command moreinfo="none">troff</command> to
          HTML</para>
          <indexterm zone="ch-system-groff pre-grohtml" significance="normal">
            <primary sortas="b-pre-grohtml">pre-grohtml</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="refer">
        <term><command moreinfo="none">refer</command></term>
        <listitem>
          <para>Copies the contents of a file to the standard output, except
          that lines between <emphasis>.[</emphasis> and <emphasis>.]</emphasis>
          are interpreted as citations, and lines between <emphasis>.R1</emphasis>
          and <emphasis>.R2</emphasis> are interpreted as commands for how
          citations are to be processed</para>
          <indexterm zone="ch-system-groff refer" significance="normal">
            <primary sortas="b-refer">refer</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="roff2dvi">
        <term><command moreinfo="none">roff2dvi</command></term>
        <listitem>
          <para>Transforms roff files into DVI format</para>
          <indexterm zone="ch-system-groff roff2dvi" significance="normal">
            <primary sortas="b-roff2dvi">roff2dvi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="roff2html">
        <term><command moreinfo="none">roff2html</command></term>
        <listitem>
          <para>Transforms roff files into HTML format</para>
          <indexterm zone="ch-system-groff roff2html" significance="normal">
            <primary sortas="b-roff2html">roff2html</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="roff2pdf">
        <term><command moreinfo="none">roff2pdf</command></term>
        <listitem>
          <para>Transforms roff files into PDFs</para>
          <indexterm zone="ch-system-groff roff2pdf" significance="normal">
            <primary sortas="b-roff2pdf">roff2pdf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="roff2ps">
        <term><command moreinfo="none">roff2ps</command></term>
        <listitem>
          <para>Transforms roff files into ps files</para>
          <indexterm zone="ch-system-groff roff2ps" significance="normal">
            <primary sortas="b-roff2ps">roff2ps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="roff2text">
        <term><command moreinfo="none">roff2text</command></term>
        <listitem>
          <para>Transforms roff files into text files</para>
          <indexterm zone="ch-system-groff roff2text" significance="normal">
            <primary sortas="b-roff2text">roff2text</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="roff2x">
        <term><command moreinfo="none">roff2x</command></term>
        <listitem>
          <para>Transforms roff files into other formats</para>
          <indexterm zone="ch-system-groff roff2x" significance="normal">
            <primary sortas="b-roff2x">roff2x</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="soelim">
        <term><command moreinfo="none">soelim</command></term>
        <listitem>
          <para>Reads files and replaces lines of the form <emphasis>.so
          file</emphasis> by the contents of the mentioned
          <emphasis>file</emphasis></para>
          <indexterm zone="ch-system-groff soelim" significance="normal">
            <primary sortas="b-soelim">soelim</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tbl">
        <term><command moreinfo="none">tbl</command></term>
        <listitem>
          <para>Compiles descriptions of tables embedded within troff input
          files into commands that are understood by
          <command moreinfo="none">troff</command></para>
          <indexterm zone="ch-system-groff tbl" significance="normal">
            <primary sortas="b-tbl">tbl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tfmtodit">
        <term><command moreinfo="none">tfmtodit</command></term>
        <listitem>
          <para>Creates a font file for use with <command moreinfo="none">groff
          -Tdvi</command></para>
          <indexterm zone="ch-system-groff tfmtodit" significance="normal">
            <primary sortas="b-tfmtodit">tfmtodit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="troff">
        <term><command moreinfo="none">troff</command></term>
        <listitem>
          <para>Is highly compatible with Unix <command moreinfo="none">troff</command>; it
          should usually be invoked using the <command moreinfo="none">groff</command> command,
          which will also run preprocessors and post-processors in the
          appropriate order and with the appropriate options</para>
          <indexterm zone="ch-system-groff troff" significance="normal">
            <primary sortas="b-troff">troff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-grub" role="wrap">
  <?dbhtml filename="grub.html"?>

  <sect1info condition="script">
    <productname class="trade">grub</productname>
    <productnumber>2.06</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/grub/grub-2.06.tar.xz</address>
  </sect1info>

  <title>GRUB-2.06</title>

  <indexterm zone="ch-system-grub" significance="normal">
    <primary sortas="a-Grub">GRUB</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The GRUB package contains the GRand Unified Bootloader.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.8 SBU</seg>
        <seg>158 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of GRUB</title>

    <note>
      <para>
        If your system has UEFI support and you wish to boot LFS with UEFI,
        you can skip this package in LFS,
        and install GRUB with UEFI support (and its dependencies) following
        <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/grub-efi.html">the BLFS page</ulink>
        at the end of this chapter.
      </para>
    </note>

    <para>Prepare GRUB for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr          \
            --sysconfdir=/etc      \
            --disable-efiemu       \
            --disable-werror</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-werror</parameter></term>
        <listitem>
          <para>This allows the build to complete with warnings introduced
          by more recent Flex versions.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-efiemu</parameter></term>
        <listitem>
          <para>This option minimizes what is built by disabling a feature and
          testing programs not needed for LFS.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>The test suite for this packages is not recommended.  Most of
    the tests depend on packages that are not available in the limited
    LFS environment. To run the tests anyway, run <command moreinfo="none">make check</command>.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
mv -v /etc/bash_completion.d/grub /usr/share/bash-completion/completions</userinput></screen>

  <para>Using GRUB to make your LFS system bootable will be discussed in
  <xref linkend="ch-bootable-grub"/>.</para>

  </sect2>

  <sect2 id="contents-gRUB" role="content">
    <title>Contents of GRUB</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>

       <seg>grub-bios-setup,      grub-editenv,    grub-file,        grub-fstest,
            grub-glue-efi,        grub-install,    grub-kbdcomp,     grub-macbless,   
            grub-menulst2cfg,     grub-mkconfig,
                                  grub-mkimage,    grub-mklayout,    grub-mknetdir,
            grub-mkpasswd-pbkdf2, grub-mkrelpath,  grub-mkrescue,    grub-mkstandalone,
            grub-ofpathname,      grub-probe,      grub-reboot,      grub-render-label, 
            grub-script-check,
            grub-set-default,     grub-sparc64-setup, and grub-syslinux2cfg</seg>

        <seg>/usr/lib/grub, /etc/grub.d, /usr/share/grub, and /boot/grub (when grub-install
        is first run)</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="grub-bios-setup">
        <term><command moreinfo="none">grub-bios-setup</command></term>
        <listitem>
          <para>Is a helper program for grub-install</para>
          <indexterm zone="ch-system-grub grub-bios-setup" significance="normal">
            <primary sortas="b-grub-bios-setup">grub-bios-setup</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-editenv">
        <term><command moreinfo="none">grub-editenv</command></term>
        <listitem>
          <para>A tool to edit the environment block</para>
          <indexterm zone="ch-system-grub grub-editenv" significance="normal">
            <primary sortas="b-grub-editenv">grub-editenv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-file">
        <term><command moreinfo="none">grub-file</command></term>
        <listitem>
          <para>Checks if FILE is of the specified type.</para>
          <indexterm zone="ch-system-grub grub-file" significance="normal">
            <primary sortas="b-grub-file">grub-file</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-fstest">
        <term><command moreinfo="none">grub-fstest</command></term>
        <listitem>
          <para>Tool to debug the filesystem driver</para>
          <indexterm zone="ch-system-grub grub-fstest" significance="normal">
            <primary sortas="b-grub-fstest">grub-fstest</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-glue-efi">
        <term><command moreinfo="none">grub-glue-efi</command></term>
        <listitem>
          <para>Processes ia32 and amd64 EFI images and glues them
          according to Apple format.</para>
          <indexterm zone="ch-system-grub grub-glue-efi" significance="normal">
            <primary sortas="b-grub-glue-efi">grub-glue-efi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-install">
        <term><command moreinfo="none">grub-install</command></term>
        <listitem>
          <para>Install GRUB on your drive</para>
          <indexterm zone="ch-system-grub grub-install" significance="normal">
            <primary sortas="b-grub-install">grub-install</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-kbdcomp">
        <term><command moreinfo="none">grub-kbdcomp</command></term>
        <listitem>
          <para>Script that converts an xkb layout into one recognized by
          GRUB</para>
          <indexterm zone="ch-system-grub grub-kbdcomp" significance="normal">
            <primary sortas="b-grub-kbdcomp">grub-kbdcomp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-macbless">
        <term><command moreinfo="none">grub-macbless</command></term>
        <listitem>
          <para>Mac-style bless on HFS or HFS+ files</para>
          <indexterm zone="ch-system-grub grub-macbless" significance="normal">
            <primary sortas="b-grub-macbless">grub-macbless</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-menulst2cfg">
        <term><command moreinfo="none">grub-menulst2cfg</command></term>
        <listitem>
          <para>Converts a GRUB Legacy <filename moreinfo="none">menu.lst</filename>
          into a <filename moreinfo="none">grub.cfg</filename> for use with GRUB 2</para>
          <indexterm zone="ch-system-grub grub-menulst2cfg" significance="normal">
            <primary sortas="b-grub-menulst2cfg">grub-menulst2cfg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-mkconfig">
        <term><command moreinfo="none">grub-mkconfig</command></term>
        <listitem>
          <para>Generate a grub config file</para>
          <indexterm zone="ch-system-grub grub-mkconfig" significance="normal">
            <primary sortas="b-grub-mkconfig">grub-mkconfig</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-mkimage">
        <term><command moreinfo="none">grub-mkimage</command></term>
        <listitem>
          <para>Make a bootable image of GRUB</para>
          <indexterm zone="ch-system-grub grub-mkimage" significance="normal">
            <primary sortas="b-grub-mkimage">grub-mkimage</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-mklayout">
        <term><command moreinfo="none">grub-mklayout</command></term>
        <listitem>
          <para>Generates a GRUB keyboard layout file</para>
          <indexterm zone="ch-system-grub grub-mklayout" significance="normal">
            <primary sortas="b-grub-mklayout">grub-mklayout</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-mknetdir">
        <term><command moreinfo="none">grub-mknetdir</command></term>
        <listitem>
          <para>Prepares a GRUB netboot directory</para>
          <indexterm zone="ch-system-grub grub-mknetdir" significance="normal">
            <primary sortas="b-grub-mknetdir">grub-mknetdir</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-mkpasswd-pbkdf2">
        <term><command moreinfo="none">grub-mkpasswd-pbkdf2</command></term>
        <listitem>
          <para>Generates an encrypted PBKDF2 password for use in the boot
          menu</para>
          <indexterm zone="ch-system-grub grub-mkpasswd-pbkdf2" significance="normal">
            <primary sortas="b-grub-mkpasswd-pbkdf2">grub-mkpasswd-pbkdf2</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-mkrelpath">
        <term><command moreinfo="none">grub-mkrelpath</command></term>
        <listitem>
          <para>Makes a system pathname relative to its root</para>
          <indexterm zone="ch-system-grub grub-mkrelpath" significance="normal">
            <primary sortas="b-grub-mkrelpath">grub-mkrelpath</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-mkrescue">
        <term><command moreinfo="none">grub-mkrescue</command></term>
        <listitem>
          <para>Make a bootable image of GRUB suitable for a floppy disk or CDROM/DVD</para>
          <indexterm zone="ch-system-grub grub-mkrescue" significance="normal">
            <primary sortas="b-grub-mkrescue">grub-mkrescue</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-mkstandalone">
        <term><command moreinfo="none">grub-mkstandalone</command></term>
        <listitem>
          <para>Generates a standalone image</para>
          <indexterm zone="ch-system-grub grub-mkstandalone" significance="normal">
            <primary sortas="b-grub-mkstandalone">grub-mkstandalone</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-ofpathname">
        <term><command moreinfo="none">grub-ofpathname</command></term>
        <listitem>
          <para>Is a helper program that prints the path of a GRUB device</para>
          <indexterm zone="ch-system-grub grub-ofpathname" significance="normal">
            <primary sortas="b-grub-ofpathname">grub-ofpathname</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-probe">
        <term><command moreinfo="none">grub-probe</command></term>
        <listitem>
          <para>Probe device information for a given path or device</para>
          <indexterm zone="ch-system-grub grub-probe" significance="normal">
            <primary sortas="b-grub-probe">grub-probe</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-reboot">
        <term><command moreinfo="none">grub-reboot</command></term>
        <listitem>
          <para>Sets the default boot entry for GRUB for the next boot only</para>
          <indexterm zone="ch-system-grub grub-reboot" significance="normal">
            <primary sortas="b-grub-reboot">grub-reboot</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-render-label">
        <term><command moreinfo="none">grub-render-label</command></term>
        <listitem>
          <para>Render Apple .disk_label for Apple Macs</para>
          <indexterm zone="ch-system-grub grub-render-label" significance="normal">
            <primary sortas="b-grub-render-label">grub-render-label</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-script-check">
        <term><command moreinfo="none">grub-script-check</command></term>
        <listitem>
          <para>Checks GRUB configuration script for syntax errors</para>
          <indexterm zone="ch-system-grub grub-script-check" significance="normal">
            <primary sortas="b-grub-script-check">grub-script-check</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-set-default">
        <term><command moreinfo="none">grub-set-default</command></term>
        <listitem>
          <para>Sets the default boot entry for GRUB</para>
          <indexterm zone="ch-system-grub grub-set-default" significance="normal">
            <primary sortas="b-grub-set-default">grub-set-default</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-sparc64-setup">
        <term><command moreinfo="none">grub-sparc64-setup</command></term>
        <listitem>
          <para>Is a helper program for grub-setup</para>
          <indexterm zone="ch-system-grub grub-sparc64-setup" significance="normal">
            <primary sortas="b-grub-sparc64-setup">grub-setup</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="grub-syslinux2cfg">
        <term><command moreinfo="none">grub-syslinux2cfg</command></term>
        <listitem>
          <para>Transform a syslinux config file into grub.cfg format</para>
          <indexterm zone="ch-system-grub grub-syslinux2cfg" significance="normal">
            <primary sortas="b-grub-syslinux2cfg">grub-syslinux2cfg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-gzip" role="wrap">
  <?dbhtml filename="gzip.html"?>

  <sect1info condition="script">
    <productname class="trade">gzip</productname>
    <productnumber>1.10</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/gzip/gzip-1.10.tar.xz</address>
  </sect1info>

  <title>Gzip-1.10</title>

  <indexterm zone="ch-system-gzip" significance="normal">
    <primary sortas="a-Gzip">Gzip</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Gzip package contains programs for compressing and decompressing
    files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>19 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Gzip</title>

    <para>Prepare Gzip for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-gzip" role="content">
    <title>Contents of Gzip</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>gunzip, gzexe, gzip, uncompress (hard link with gunzip), zcat, zcmp, 
        zdiff, zegrep, zfgrep, zforce, zgrep, zless, zmore, and znew</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="gunzip">
        <term><command moreinfo="none">gunzip</command></term>
        <listitem>
          <para>Decompresses gzipped files</para>
          <indexterm zone="ch-system-gzip gunzip" significance="normal">
            <primary sortas="b-gunzip">gunzip</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gzexe">
        <term><command moreinfo="none">gzexe</command></term>
        <listitem>
          <para>Creates self-decompressing executable files</para>
          <indexterm zone="ch-system-gzip gzexe" significance="normal">
            <primary sortas="b-gzexe">gzexe</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gzip">
        <term><command moreinfo="none">gzip</command></term>
        <listitem>
          <para>Compresses the given files using Lempel-Ziv (LZ77) coding</para>
          <indexterm zone="ch-system-gzip gzip" significance="normal">
            <primary sortas="b-gzip">gzip</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="uncompress">
        <term><command moreinfo="none">uncompress</command></term>
        <listitem>
          <para>Decompresses compressed files</para>
          <indexterm zone="ch-system-gzip uncompress" significance="normal">
            <primary sortas="b-uncompress">uncompress</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zcat">
        <term><command moreinfo="none">zcat</command></term>
        <listitem>
          <para>Decompresses the given gzipped files to standard output</para>
          <indexterm zone="ch-system-gzip zcat" significance="normal">
            <primary sortas="b-zcat">zcat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zcmp">
        <term><command moreinfo="none">zcmp</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">cmp</command> on gzipped files</para>
          <indexterm zone="ch-system-gzip zcmp" significance="normal">
            <primary sortas="b-zcmp">zcmp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zdiff">
        <term><command moreinfo="none">zdiff</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">diff</command> on gzipped files</para>
          <indexterm zone="ch-system-gzip zdiff" significance="normal">
            <primary sortas="b-zdiff">zdiff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zegrep">
        <term><command moreinfo="none">zegrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">egrep</command> on gzipped files</para>
          <indexterm zone="ch-system-gzip zegrep" significance="normal">
            <primary sortas="b-zegrep">zegrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zfgrep">
        <term><command moreinfo="none">zfgrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">fgrep</command> on gzipped files</para>
          <indexterm zone="ch-system-gzip zfgrep" significance="normal">
            <primary sortas="b-zfgrep">zfgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zforce">
        <term><command moreinfo="none">zforce</command></term>
        <listitem>
          <para>Forces a <filename class="extension" moreinfo="none">.gz</filename> extension on
          all given files that are gzipped files, so that <command moreinfo="none">gzip</command>
          will not compress them again; this can be useful when file names were
          truncated during a file transfer</para>
          <indexterm zone="ch-system-gzip zforce" significance="normal">
            <primary sortas="b-zforce">zforce</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zgrep">
        <term><command moreinfo="none">zgrep</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">grep</command> on gzipped files</para>
          <indexterm zone="ch-system-gzip zgrep" significance="normal">
            <primary sortas="b-zgrep">zgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zless">
        <term><command moreinfo="none">zless</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">less</command> on gzipped files</para>
          <indexterm zone="ch-system-gzip zless" significance="normal">
            <primary sortas="b-zless">zless</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zmore">
        <term><command moreinfo="none">zmore</command></term>
        <listitem>
          <para>Runs <command moreinfo="none">more</command> on gzipped files</para>
          <indexterm zone="ch-system-gzip zmore" significance="normal">
            <primary sortas="b-zmore">zmore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="znew">
        <term><command moreinfo="none">znew</command></term>
        <listitem>
          <para>Re-compresses files from <command moreinfo="none">compress</command> format to
          <command moreinfo="none">gzip</command> formatâ<filename class="extension" moreinfo="none">.Z</filename> to <filename class="extension" moreinfo="none">.gz</filename></para>
          <indexterm zone="ch-system-gzip znew" significance="normal">
            <primary sortas="b-znew">znew</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-iproute2" role="wrap">
  <?dbhtml filename="iproute2.html"?>

  <sect1info condition="script">
    <productname class="trade">iproute2</productname>
    <productnumber>5.13.0</productnumber>
    <address format="linespecific">https://www.kernel.org/pub/linux/utils/net/iproute2/iproute2-5.13.0.tar.xz</address>
  </sect1info>

  <title>IPRoute2-5.13.0</title>

  <indexterm zone="ch-system-iproute2" significance="normal">
    <primary sortas="a-IPRoute2">IPRoute2</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The IPRoute2 package contains programs for basic and advanced IPV4-based
    networking.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>15 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of IPRoute2</title>

    <para>The <command moreinfo="none">arpd</command> program included in this package will not
    be built since it is dependent on Berkeley DB, which is not installed in
    LFS. However, a directory for <command moreinfo="none">arpd</command> and a man page will still 
    be installed. Prevent this by running the commands below. 
    If the <command moreinfo="none">arpd</command> binary is needed,
    instructions for compiling Berkeley DB can be found in the BLFS Book at
    <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/server/db.html"/>.
    </para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i /ARPD/d Makefile
rm -fv man/man8/arpd.8</userinput></screen>

    <para>It is also necessary to disable building two modules that 
    require <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/iptables.html"/>.</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i 's/.m_ipt.o//' tc/Makefile</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>This package does not have a working test suite.</para>
<!-- currently not useful, no tests actually run
    <para>This package comes with a test suite, but due to assumptions it makes,
    it is not possible to reliably run these tests from within the chroot
    environment. If you wish to run these tests after booting into your new LFS
    system, ensure you enable <filename>/proc/config.gz</filename> support
    in your kernel (&quot;General setup&quot; -> &quot;Enable access to
    .config through /proc/config.gz&quot; [CONFIG_IKCONFIG_PROC]), then run
    'make alltests' from the <filename class="directory">testsuite/</filename>
    subdirectory.</para>-->

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make SBINDIR=/usr/sbin install</userinput></screen>

    <para>If desired, install the documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">mkdir -v              /usr/share/doc/iproute2-5.13.0
cp -v COPYING README* /usr/share/doc/iproute2-5.13.0</userinput></screen>

  </sect2>

  <sect2 id="contents-iproute2" role="content">
    <title>Contents of IPRoute2</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>bridge, ctstat (link to lnstat), genl, ifcfg, ifstat, ip, lnstat,
        nstat, routef, routel, rtacct, rtmon, rtpr, rtstat (link to lnstat), ss,
        and tc</seg>
        <seg>/etc/iproute2, /usr/lib/tc, and /usr/share/doc/iproute2-5.13.0
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="bridge">
        <term><command moreinfo="none">bridge</command></term>
        <listitem>
          <para>Configures network bridges</para>
          <indexterm zone="ch-system-iproute2 bridge" significance="normal">
            <primary sortas="b-bridge">bridge</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ctstat">
        <term><command moreinfo="none">ctstat</command></term>
        <listitem>
          <para>Connection status utility</para>
          <indexterm zone="ch-system-iproute2 ctstat" significance="normal">
            <primary sortas="b-ctstat">ctstat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="genl">
        <term><command moreinfo="none">genl</command></term>
        <listitem>
          <para>Generic netlink utility frontend</para>
          <indexterm zone="ch-system-iproute2 genl" significance="normal">
            <primary sortas="b-genl">genl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ifcfg">
        <term><command moreinfo="none">ifcfg</command></term>
        <listitem>
          <para>A shell script wrapper for the <command moreinfo="none">ip</command> command
          [Note that it requires the <command moreinfo="none">arping</command> and
          <command moreinfo="none">rdisk</command> programs from the
          iputils package found at <ulink url="http://www.skbuff.net/iputils/"/>.]</para>
          <indexterm zone="ch-system-iproute2 ifcfg" significance="normal">
            <primary sortas="b-ifcfg">ifcfg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ifstat">
        <term><command moreinfo="none">ifstat</command></term>
        <listitem>
          <para>Shows the interface statistics, including the amount of
          transmitted and received packets by interface</para>
          <indexterm zone="ch-system-iproute2 ifstat" significance="normal">
            <primary sortas="b-ifstat">ifstat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ip">
        <term><command moreinfo="none">ip</command></term>
        <listitem>
          <para>The main executable. It has several different functions:</para>

          <para><command moreinfo="none">ip link <replaceable>&lt;device&gt;</replaceable></command>
          allows users to look at the state of devices and to make changes</para>

          <para><command moreinfo="none">ip addr</command> allows users to look at addresses and
          their properties, add new addresses, and delete old ones</para>

          <para><command moreinfo="none">ip neighbor</command> allows users to look at neighbor
          bindings and their properties, add new neighbor entries, and delete
          old ones</para>

          <para><command moreinfo="none">ip rule</command> allows users to look at the routing
          policies and change them</para>

          <para><command moreinfo="none">ip route</command> allows users to look at the routing
          table and change routing table rules</para>

          <para><command moreinfo="none">ip tunnel</command> allows users to look at the IP
          tunnels and their properties, and change them</para>

          <para><command moreinfo="none">ip maddr</command> allows users to look at the multicast
          addresses and their properties, and change them</para>

          <para><command moreinfo="none">ip mroute</command> allows users to set, change, or
          delete the multicast routing</para>

          <para><command moreinfo="none">ip monitor</command> allows users to continuously monitor
          the state of devices, addresses and routes</para>
          <indexterm zone="ch-system-iproute2 ip" significance="normal">
            <primary sortas="b-ip">ip</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lnstat">
        <term><command moreinfo="none">lnstat</command></term>
        <listitem>
          <para>Provides Linux network statistics; it is a generalized and more
          feature-complete replacement for the old <command moreinfo="none">rtstat</command>
          program</para>
          <indexterm zone="ch-system-iproute2 lnstat" significance="normal">
            <primary sortas="b-lnstat">lnstat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nstat">
        <term><command moreinfo="none">nstat</command></term>
        <listitem>
          <para>Shows network statistics</para>
          <indexterm zone="ch-system-iproute2 nstat" significance="normal">
            <primary sortas="b-nstat">nstat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="routef">
        <term><command moreinfo="none">routef</command></term>
        <listitem>
          <para>A component of <command moreinfo="none">ip route</command>. This is for flushing
          the routing tables</para>
          <indexterm zone="ch-system-iproute2 routef" significance="normal">
            <primary sortas="b-routef">routef</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="routel">
        <term><command moreinfo="none">routel</command></term>
        <listitem>
          <para>A component of <command moreinfo="none">ip route</command>. This is for listing
          the routing tables</para>
          <indexterm zone="ch-system-iproute2 routel" significance="normal">
            <primary sortas="b-routel">routel</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rtacct">
        <term><command moreinfo="none">rtacct</command></term>
        <listitem>
          <para>Displays the contents of
          <filename moreinfo="none">/proc/net/rt_acct</filename></para>
          <indexterm zone="ch-system-iproute2 rtacct" significance="normal">
            <primary sortas="b-rtacct">rtacct</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rtmon">
        <term><command moreinfo="none">rtmon</command></term>
        <listitem>
          <para>Route monitoring utility</para>
          <indexterm zone="ch-system-iproute2 rtmon" significance="normal">
            <primary sortas="b-rtmon">rtmon</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rtpr">
        <term><command moreinfo="none">rtpr</command></term>
        <listitem>
          <para>Converts the output of <command moreinfo="none">ip -o</command> back into a
          readable form</para>
          <indexterm zone="ch-system-iproute2 rtpr" significance="normal">
            <primary sortas="b-rtpr">rtpr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rtstat">
        <term><command moreinfo="none">rtstat</command></term>
        <listitem>
          <para>Route status utility</para>
          <indexterm zone="ch-system-iproute2 rtstat" significance="normal">
            <primary sortas="b-rtstat">rtstat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ss">
        <term><command moreinfo="none">ss</command></term>
        <listitem>
          <para>Similar to the <command moreinfo="none">netstat</command> command; shows active
          connections</para>
          <indexterm zone="ch-system-iproute2 ss" significance="normal">
            <primary sortas="b-ss">ss</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tc">
        <term><command moreinfo="none">tc</command></term>
        <listitem>
          <para>Traffic Controlling Executable; this is for Quality Of Service
          (QOS) and Class Of Service (COS) implementations</para>

          <para><command moreinfo="none">tc qdisc</command> allows users to setup the queueing
          discipline</para>

          <para><command moreinfo="none">tc class</command> allows users to setup classes based
          on the queuing discipline scheduling</para>

          <para><command moreinfo="none">tc estimator</command> allows users to estimate the
          network flow into a network</para>

          <para><command moreinfo="none">tc filter</command> allows users to setup the QOS/COS
          packet filtering</para>

          <para><command moreinfo="none">tc policy</command> allows users to setup the QOS/COS
          policies</para>
          <indexterm zone="ch-system-iproute2 ss" significance="normal">
            <primary sortas="b-tc">tc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-kbd" role="wrap">
  <?dbhtml filename="kbd.html"?>

  <sect1info condition="script">
    <productname class="trade">kbd</productname>
    <productnumber>2.4.0</productnumber>
    <address format="linespecific">https://www.kernel.org/pub/linux/utils/kbd/kbd-2.4.0.tar.xz</address>
  </sect1info>

  <title>Kbd-2.4.0</title>

  <indexterm zone="ch-system-kbd" significance="normal">
    <primary sortas="a-Kbd">Kbd</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Kbd package contains key-table files, console fonts, and keyboard
    utilities.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>33 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Kbd</title>

    <para>The behaviour of the backspace and delete keys is not consistent
    across the keymaps in the Kbd package. The following patch fixes this
    issue for i386 keymaps:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">patch -Np1 -i ../kbd-2.4.0-backspace-1.patch</userinput></screen>

    <para>After patching, the backspace key generates the character with code 127,
    and the delete key generates a well-known escape sequence.</para>

    <para>Remove the redundant <command moreinfo="none">resizecons</command> program (it requires
    the defunct svgalib to provide the video mode files - for normal use
    <command moreinfo="none">setfont</command> sizes the console appropriately) together with its
    manpage.</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i '/RESIZECONS_PROGS=/s/yes/no/' configure
sed -i 's/resizecons.8 //' docs/man/man8/Makefile.in</userinput></screen>

    <para>Prepare Kbd for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr --disable-vlock</userinput></screen>

    <variablelist>
      <title>The meaning of the configure option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-vlock</parameter></term>
        <listitem>
          <para>This option prevents the vlock utility from being built because it
          requires the PAM library, which isn't available in the chroot
          environment.</para>
       </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <note>
      <para>For some languages (e.g., Belarusian) the Kbd package doesn't
      provide a useful keymap where the stock <quote>by</quote> keymap assumes
      the ISO-8859-5 encoding, and the CP1251 keymap is normally used. Users of
      such languages have to download working keymaps separately.</para>
    </note>

    <para>If desired, install the documentation:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">mkdir -v            /usr/share/doc/kbd-2.4.0
cp -R -v docs/doc/* /usr/share/doc/kbd-2.4.0</userinput></screen>

  </sect2>

  <sect2 id="contents-kbd" role="content">
    <title>Contents of Kbd</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>chvt, deallocvt, dumpkeys, fgconsole, getkeycodes, kbdinfo,
        kbd_mode, kbdrate, loadkeys, loadunimap,
        mapscrn, openvt, psfaddtable (link to psfxtable), psfgettable (link to
        psfxtable), psfstriptable (link to psfxtable), psfxtable, <!--resizecons,-->
        setfont, setkeycodes, setleds, setmetamode, setvtrgb,
        showconsolefont, showkey, unicode_start, and unicode_stop</seg>
        <seg>/usr/share/consolefonts, /usr/share/consoletrans, /usr/share/keymaps, 
        /usr/share/doc/kbd-2.4.0,  and /usr/share/unimaps</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="chvt">
        <term><command moreinfo="none">chvt</command></term>
        <listitem>
          <para>Changes the foreground virtual terminal</para>
          <indexterm zone="ch-system-kbd chvt" significance="normal">
            <primary sortas="b-chvt">chvt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="deallocvt">
        <term><command moreinfo="none">deallocvt</command></term>
        <listitem>
          <para>Deallocates unused virtual terminals</para>
          <indexterm zone="ch-system-kbd deallocvt" significance="normal">
            <primary sortas="b-deallocvt">deallocvt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dumpkeys">
        <term><command moreinfo="none">dumpkeys</command></term>
        <listitem>
          <para>Dumps the keyboard translation tables</para>
          <indexterm zone="ch-system-kbd dumpkeys" significance="normal">
            <primary sortas="b-dumpkeys">dumpkeys</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fgconsole">
        <term><command moreinfo="none">fgconsole</command></term>
        <listitem>
          <para>Prints the number of the active virtual terminal</para>
          <indexterm zone="ch-system-kbd fgconsole" significance="normal">
            <primary sortas="b-fgconsole">fgconsole</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getkeycodes">
        <term><command moreinfo="none">getkeycodes</command></term>
        <listitem>
          <para>Prints the kernel scancode-to-keycode mapping table</para>
          <indexterm zone="ch-system-kbd getkeycodes" significance="normal">
            <primary sortas="b-getkeycodes">getkeycodes</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="kbdinfo">
        <term><command moreinfo="none">kbdinfo</command></term>
        <listitem>
          <para>Obtains information about the status of a console</para>
          <indexterm zone="ch-system-kbd kbdinfo" significance="normal">
            <primary sortas="b-kbdinfo">kbdinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="kbd_mode">
        <term><command moreinfo="none">kbd_mode</command></term>
        <listitem>
          <para>Reports or sets the keyboard mode</para>
          <indexterm zone="ch-system-kbd kbd_mode" significance="normal">
            <primary sortas="b-kbd_mode">kbd_mode</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="kbdrate">
        <term><command moreinfo="none">kbdrate</command></term>
        <listitem>
          <para>Sets the keyboard repeat and delay rates</para>
          <indexterm zone="ch-system-kbd kbdrate" significance="normal">
            <primary sortas="b-kbdrate">kbdrate</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="loadkeys">
        <term><command moreinfo="none">loadkeys</command></term>
        <listitem>
          <para>Loads the keyboard translation tables</para>
          <indexterm zone="ch-system-kbd loadkeys" significance="normal">
            <primary sortas="b-loadkeys">loadkeys</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="loadunimap">
        <term><command moreinfo="none">loadunimap</command></term>
        <listitem>
          <para>Loads the kernel unicode-to-font mapping table</para>
          <indexterm zone="ch-system-kbd loadunimap" significance="normal">
            <primary sortas="b-loadunimap">loadunimap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mapscrn">
        <term><command moreinfo="none">mapscrn</command></term>
        <listitem>
          <para>An obsolete program that used to load a user-defined output
          character mapping table into the console driver; this is now done
          by <command moreinfo="none">setfont</command></para>
          <indexterm zone="ch-system-kbd mapscrn" significance="normal">
            <primary sortas="b-mapscrn">mapscrn</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="openvt">
        <term><command moreinfo="none">openvt</command></term>
        <listitem>
          <para>Starts a program on a new virtual terminal (VT)</para>
          <indexterm zone="ch-system-kbd openvt" significance="normal">
            <primary sortas="b-openvt">openvt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="psfaddtable">
        <term><command moreinfo="none">psfaddtable</command></term>
        <listitem>
          <para>Adds a Unicode character table to a console font</para>
          <indexterm zone="ch-system-kbd psfaddtable" significance="normal">
            <primary sortas="b-psfaddtable">psfaddtable</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="psfgettable">
        <term><command moreinfo="none">psfgettable</command></term>
        <listitem>
          <para>Extracts the embedded Unicode character table from a console
          font</para>
          <indexterm zone="ch-system-kbd psfgettable" significance="normal">
            <primary sortas="b-psfgettable">psfgettable</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="psfstriptable">
        <term><command moreinfo="none">psfstriptable</command></term>
        <listitem>
          <para>Removes the embedded Unicode character table from a console
          font</para>
          <indexterm zone="ch-system-kbd psfstriptable" significance="normal">
            <primary sortas="b-psfstriptable">psfstriptable</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="psfxtable">
        <term><command moreinfo="none">psfxtable</command></term>
        <listitem>
          <para>Handles Unicode character tables for console fonts</para>
          <indexterm zone="ch-system-kbd psfxtable" significance="normal">
            <primary sortas="b-psfxtable">psfxtable</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setfont">
        <term><command moreinfo="none">setfont</command></term>
        <listitem>
          <para>Changes the Enhanced Graphic Adapter (EGA) and Video Graphics
          Array (VGA) fonts on the console</para>
          <indexterm zone="ch-system-kbd setfont" significance="normal">
            <primary sortas="b-setfont">setfont</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setkeycodes">
        <term><command moreinfo="none">setkeycodes</command></term>
        <listitem>
          <para>Loads kernel scancode-to-keycode mapping table entries; this is
          useful if there are unusual keys on the keyboard</para>
          <indexterm zone="ch-system-kbd setkeycodes" significance="normal">
            <primary sortas="b-setkeycodes">setkeycodes</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setleds">
        <term><command moreinfo="none">setleds</command></term>
        <listitem>
          <para>Sets the keyboard flags and Light Emitting Diodes (LEDs)</para>
          <indexterm zone="ch-system-kbd setleds" significance="normal">
            <primary sortas="b-setleds">setleds</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setmetamode">
        <term><command moreinfo="none">setmetamode</command></term>
        <listitem>
          <para>Defines the keyboard meta-key handling</para>
          <indexterm zone="ch-system-kbd setmetamode" significance="normal">
            <primary sortas="b-setmetamode">setmetamode</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setvtrgb">
        <term><command moreinfo="none">setvtrgb</command></term>
        <listitem>
          <para>Sets the console color map in all virtual terminals</para>
          <indexterm zone="ch-system-kbd setvtrgb" significance="normal">
            <primary sortas="b-setvtrgb">setvtrgb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="showconsolefont">
        <term><command moreinfo="none">showconsolefont</command></term>
        <listitem>
          <para>Shows the current EGA/VGA console screen font</para>
          <indexterm zone="ch-system-kbd showconsolefont" significance="normal">
            <primary sortas="b-showconsolefont">showconsolefont</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="showkey">
        <term><command moreinfo="none">showkey</command></term>
        <listitem>
          <para>Reports the scancodes, keycodes, and ASCII codes of the keys
          pressed on the keyboard</para>
          <indexterm zone="ch-system-kbd showkey" significance="normal">
            <primary sortas="b-showkey">showkey</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="unicode_start">
        <term><command moreinfo="none">unicode_start</command></term>
        <listitem>
          <para>Puts the keyboard and console in UNICODE mode [Don't use this
          program unless your keymap file is in the ISO-8859-1 encoding. For
          other encodings, this utility produces incorrect results.]</para>
          <indexterm zone="ch-system-kbd unicode_start" significance="normal">
            <primary sortas="b-unicode_start">unicode_start</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="unicode_stop">
        <term><command moreinfo="none">unicode_stop</command></term>
        <listitem>
          <para>Reverts keyboard and console from UNICODE mode</para>
          <indexterm zone="ch-system-kbd unicode_stop" significance="normal">
            <primary sortas="b-unicode_stop">unicode_stop</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-libpipeline" role="wrap">
  <?dbhtml filename="libpipeline.html"?>

  <sect1info condition="script">
    <productname class="trade">libpipeline</productname>
    <productnumber>1.5.3</productnumber>
    <address format="linespecific">https://download.savannah.gnu.org/releases/libpipeline/libpipeline-1.5.3.tar.gz</address>
  </sect1info>

  <title>Libpipeline-1.5.3</title>

  <indexterm zone="ch-system-libpipeline" significance="normal">
    <primary sortas="a-Libpipeline">Libpipeline</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Libpipeline package contains a library for manipulating pipelines
    of subprocesses in a flexible and convenient way.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.1 SBU</seg>
        <seg>9.1 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Libpipeline</title>

    <para>Prepare Libpipeline for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-libpipeline" role="content">
    <title>Contents of Libpipeline</title>

    <segmentedlist>
      <segtitle>Installed library</segtitle>

      <seglistitem>
        <seg>libpipeline.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libpipeline">
        <term><filename class="libraryfile" moreinfo="none">libpipeline</filename></term>
        <listitem>
          <para>This library is used to safely construct pipelines between
          subprocesses</para>
          <indexterm zone="ch-system-libpipeline" significance="normal">
            <primary sortas="c-libpipeline">libpipeline</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-make" role="wrap">
  <?dbhtml filename="make.html"?>

  <sect1info condition="script">
    <productname class="trade">make</productname>
    <productnumber>4.3</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/make/make-4.3.tar.gz</address>
  </sect1info>

  <title>Make-4.3</title>

  <indexterm zone="ch-system-make" significance="normal">
    <primary sortas="a-Make">Make</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Make package contains a program for controlling the generation of
    executables and other non-source files of a package from source files.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.6 SBU</seg>
        <seg>13 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Make</title>
<!--
    <para>Again, work around an error caused by glibc-2.27 and later:</para>

<screen><userinput remap="pre">sed -i '211,217 d; 219,229 d; 232 d' glob/glob.c</userinput></screen>
-->
    <para>Prepare Make for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>


  <sect2 id="contents-make" role="content">
    <title>Contents of Make</title>

    <segmentedlist>
      <segtitle>Installed program</segtitle>

      <seglistitem>
        <seg>make</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="make">
        <term><command moreinfo="none">make</command></term>
        <listitem>
          <para>Automatically determines which pieces of a package need to
          be (re)compiled and then issues the relevant commands</para>
          <indexterm zone="ch-system-make make" significance="normal">
            <primary sortas="b-make">make</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-patch" role="wrap">
  <?dbhtml filename="patch.html"?>

  <sect1info condition="script">
    <productname class="trade">patch</productname>
    <productnumber>2.7.6</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/patch/patch-2.7.6.tar.xz</address>
  </sect1info>

  <title>Patch-2.7.6</title>

  <indexterm zone="ch-system-patch" significance="normal">
    <primary sortas="a-Patch">Patch</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Patch package contains a program for modifying or creating files
    by applying a <quote>patch</quote> file typically created by the
    <command moreinfo="none">diff</command> program.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>12 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Patch</title>

    <para>Prepare Patch for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-patch" role="content">
    <title>Contents of Patch</title>

    <segmentedlist>
      <segtitle>Installed program</segtitle>

      <seglistitem>
        <seg>patch</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="patch">
        <term><command moreinfo="none">patch</command></term>
        <listitem>
          <para>Modifies files according to a patch file (A patch file is
          normally a difference listing created with the <command moreinfo="none">diff</command>
          program. By applying these differences to the original files,
          <command moreinfo="none">patch</command> creates the patched versions.)</para>
          <indexterm zone="ch-system-patch patch" significance="normal">
            <primary sortas="b-patch">patch</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-tar" role="wrap">
  <?dbhtml filename="tar.html"?>

  <sect1info condition="script">
    <productname class="trade">tar</productname>
    <productnumber>1.34</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/tar/tar-1.34.tar.xz</address>
  </sect1info>

  <title>Tar-1.34</title>

  <indexterm zone="ch-system-tar" significance="normal">
    <primary sortas="a-Tar">Tar</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Tar package provides the ability to create tar archives as well
    as perform various other kinds of archive manipulation.  Tar can be used on
    previously created archives to extract files, to store additional files, or
    to update or list files which were already stored. </para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.9 SBU</seg>
        <seg>40 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Tar</title>

    <para>Prepare Tar for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">FORCE_UNSAFE_CONFIGURE=1  \
./configure --prefix=/usr</userinput></screen>

    <variablelist>
      <title>The meaning of the configure option:</title>

      <varlistentry>
        <term><envar>FORCE_UNSAFE_CONFIGURE=1</envar></term>
        <listitem>
          <para>This forces the test for <function moreinfo="none">mknod</function> to be run
          as <systemitem class="username" moreinfo="none">root</systemitem>.
          It is generally considered dangerous to run this test as
          the <systemitem class="username" moreinfo="none">root</systemitem> user, but as it
          is being run on a system that has only been
          partially built, overriding it is OK.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>One test, capabilities: binary store/restore, is known to fail if it is
    run (LFS lacks selinux), but will be skipped if the host kernel does
    not support extended attributes on the filesystem used for building LFS.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install
make -C doc install-html docdir=/usr/share/doc/tar-1.34</userinput></screen>

  </sect2>


  <sect2 id="contents-tar" role="content">
    <title>Contents of Tar</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
        <seg>tar</seg>
        <seg>/usr/share/doc/tar-1.34</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="tar">
        <term><command moreinfo="none">tar</command></term>
        <listitem>
          <para>Creates, extracts files from, and lists the contents of archives,
          also known as tarballs</para>
          <indexterm zone="ch-system-tar tar" significance="normal">
            <primary sortas="b-tar">tar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-texinfo" role="wrap">
  <?dbhtml filename="texinfo.html"?>

  <sect1info condition="script">
    <productname class="trade">texinfo</productname>
    <productnumber>6.8</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/texinfo/texinfo-6.8.tar.xz</address>
  </sect1info>

  <title>Texinfo-6.8</title>

  <indexterm zone="ch-system-texinfo" significance="normal">
    <primary sortas="a-Texinfo">Texinfo</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Texinfo package contains programs for reading, writing, and
    converting info pages.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.6 SBU</seg>
        <seg>112 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Texinfo</title>

    <para>Prepare Texinfo for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>
<!--
    <variablelist>
      <title>The meaning of the configure option:</title>

      <varlistentry>
        <term><parameter>- -disable-static</parameter></term>
        <listitem>
          <para>In this case, the top-level configure script will complain that
          this is an unrecognized option, but the configure script for
          XSParagraph recognizes it and uses it to disable installing a static
          <filename class="libraryfile">XSParagraph.a</filename> to <filename
          class="directory">/usr/lib/texinfo</filename>.</para>
        </listitem>
      </varlistentry>

    </variablelist>
-->

    <para>Again, fix an issue building the package with Glibc-2.34 or later:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -e 's/__attribute_nonnull__/__nonnull/' \
    -i gnulib/lib/malloc/dynarray-skeleton.c</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Optionally, install the components belonging in a TeX
    installation:</para>
    <!-- FIXME: doesn't the TeX installation in BLFS overwrite files there? -->

<screen format="linespecific"><userinput remap="install" moreinfo="none">make TEXMF=/usr/share/texmf install-tex</userinput></screen>

    <variablelist>
      <title>The meaning of the make parameter:</title>

      <varlistentry>
        <term><parameter moreinfo="none">TEXMF=/usr/share/texmf</parameter></term>
        <listitem>
          <para>The <envar>TEXMF</envar> makefile variable holds the location
          of the root of the TeX tree if, for example, a TeX package will be
          installed later.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>The Info documentation system uses a plain text file to hold its list of
    menu entries. The file is located at <filename moreinfo="none">/usr/share/info/dir</filename>.
    Unfortunately, due to occasional problems in the Makefiles of various packages,
    it can sometimes get out of sync with the info pages installed on the system.
    If the <filename moreinfo="none">/usr/share/info/dir</filename> file ever needs to be
    recreated, the following optional commands will accomplish the task:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">pushd /usr/share/info
  rm -v dir
  for f in *
    do install-info $f dir 2&gt;/dev/null
  done
popd</userinput></screen>

  </sect2>

  <sect2 id="contents-texinfo" role="content">
    <title>Contents of Texinfo</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>info, install-info, makeinfo (link to texi2any),
        pdftexi2dvi, pod2texi, texi2any, texi2dvi, texi2pdf, and texindex</seg>
        <seg>MiscXS.so, Parsetexi.so, and XSParagraph.so
        (all in /usr/lib/texinfo)</seg>
        <seg>/usr/share/texinfo and /usr/lib/texinfo</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="info">
        <term><command moreinfo="none">info</command></term>
        <listitem>
          <para>Used to read info pages which are similar to man pages, but
          often go much deeper than just explaining all the available command
          line options [For example, compare <command moreinfo="none">man bison</command> and
          <command moreinfo="none">info bison</command>.]</para>
          <indexterm zone="ch-system-texinfo info" significance="normal">
            <primary sortas="b-info">info</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="install-info">
        <term><command moreinfo="none">install-info</command></term>
        <listitem>
          <para>Used to install info pages; it updates entries in the
          <command moreinfo="none">info</command> index file</para>
          <indexterm zone="ch-system-texinfo install-info" significance="normal">
            <primary sortas="b-install-info">install-info</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="makeinfo">
        <term><command moreinfo="none">makeinfo</command></term>
        <listitem>
          <para>Translates the given Texinfo source documents into
          info pages, plain text, or HTML</para>
          <indexterm zone="ch-system-texinfo makeinfo" significance="normal">
            <primary sortas="b-makeinfo">makeinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pdftexi2dvi">
        <term><command moreinfo="none">pdftexi2dvi</command></term>
        <listitem>
          <para>Used to format the given Texinfo document into a
          Portable Document Format (PDF) file</para>
          <indexterm zone="ch-system-texinfo pdftexi2dvi" significance="normal">
            <primary sortas="b-pdftexi2dvi">pdftexi2dvi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pod2texi">
        <term><command moreinfo="none">pod2texi</command></term>
        <listitem>
          <para>Converts Pod to Texinfo format</para>
          <indexterm zone="ch-system-texinfo pod2texi" significance="normal">
            <primary sortas="b-pod2texi">pod2texi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="texi2any">
        <term><command moreinfo="none">texi2any</command></term>
        <listitem>
          <para>Translate Texinfo source documentation to 
          various other formats</para>
          <indexterm zone="ch-system-texinfo texi2any" significance="normal">
            <primary sortas="b-texiany">texi2any</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="texi2dvi">
        <term><command moreinfo="none">texi2dvi</command></term>
        <listitem>
          <para>Used to format the given Texinfo document into a
          device-independent file that can be printed</para>
          <indexterm zone="ch-system-texinfo texi2dvi" significance="normal">
            <primary sortas="b-texi2dvi">texi2dvi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="texi2pdf">
        <term><command moreinfo="none">texi2pdf</command></term>
        <listitem>
          <para>Used to format the given Texinfo document into a
          Portable Document Format (PDF) file</para>
          <indexterm zone="ch-system-texinfo texi2pdf" significance="normal">
            <primary sortas="b-texi2pdf">texi2pdf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="texindex">
        <term><command moreinfo="none">texindex</command></term>
        <listitem>
          <para>Used to sort Texinfo index files</para>
          <indexterm zone="ch-system-texinfo texindex" significance="normal">
            <primary sortas="b-texindex">texindex</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-vim" role="wrap">
  <?dbhtml filename="vim.html"?>

  <sect1info condition="script">
    <productname class="trade">vim</productname>
    <productnumber>8.2.3337</productnumber>
    <address format="linespecific">https://anduin.linuxfromscratch.org/LFS/vim-8.2.3337.tar.gz</address>
  </sect1info>

  <title>Vim-8.2.3337</title>

  <indexterm zone="ch-system-vim" significance="normal">
    <primary sortas="a-Vim">Vim</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Vim package contains a powerful text editor.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>2.3 SBU</seg>
        <seg>199 MB</seg>
      </seglistitem>
    </segmentedlist>

    <tip>
      <title>Alternatives to Vim</title>

      <para>If you prefer another editorâsuch as Emacs, Joe, or
      Nanoâplease refer to <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/editors.html"/> for suggested
      installation instructions.</para>
    </tip>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Vim</title>

    <para>First, change the default location of the <filename moreinfo="none">vimrc</filename>
    configuration file to <filename class="directory" moreinfo="none">/etc</filename>:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">echo '#define SYS_VIMRC_FILE "/etc/vimrc"' &gt;&gt; src/feature.h</userinput></screen>

    <para>Prepare vim for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To prepare the tests, ensure that user 
    <systemitem class="username" moreinfo="none">tester</systemitem> can write 
    to the source tree:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">chown -Rv tester .</userinput></screen>

    <para>Now run the tests as user <systemitem class="username" moreinfo="none">tester</systemitem>:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">su tester -c "LANG=en_US.UTF-8 make -j1 test" &amp;&gt; vim-test.log</userinput></screen>

    <para>The test suite outputs a lot of binary data to the screen.  This can
    cause issues with the settings of the current terminal.  The problem can be
    avoided by redirecting the output to a log file as shown above.  A
    successful test will result in the words "ALL DONE" in the log file
    at completion.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Many users are used to using <command moreinfo="none">vi</command> instead of
    <command moreinfo="none">vim</command>. To allow execution of <command moreinfo="none">vim</command>
    when users habitually enter <command moreinfo="none">vi</command>, create a
    symlink for both the binary and the man page in the provided
    languages:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">ln -sv vim /usr/bin/vi
for L in  /usr/share/man/{,*/}man1/vim.1; do
    ln -sv vim.1 $(dirname $L)/vi.1
done</userinput></screen>

    <para>By default, vim's documentation is installed in <filename class="directory" moreinfo="none">/usr/share/vim</filename>. The following symlink
    allows the documentation to be accessed via <filename class="directory" moreinfo="none">/usr/share/doc/vim-8.2.3337</filename>, making
    it consistent with the location of documentation for other packages:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">ln -sv ../vim/vim82/doc /usr/share/doc/vim-8.2.3337</userinput></screen>

    <para>If an X Window System is going to be installed on the LFS
    system, it may be necessary to recompile vim after installing X. Vim
    comes with a GUI version of the editor that requires X and some
    additional libraries to be installed. For more information on this
    process, refer to the vim documentation and the vim installation page
    in the BLFS book at <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/vim.html"/>.</para>

  </sect2>

  <sect2 id="conf-vim" role="configuration">
    <title>Configuring Vim</title>

    <indexterm zone="conf-vim" significance="normal">
      <primary sortas="e-/etc/vimrc">/etc/vimrc</primary>
    </indexterm>

    <para>By default, <command moreinfo="none">vim</command> runs in vi-incompatible mode.
    This may be new to users who have used other editors in the past. The
    <quote>nocompatible</quote> setting is included below to highlight the
    fact that a new behavior is being used. It also reminds those who would
    change to <quote>compatible</quote> mode that it should be the first
    setting in the configuration file. This is necessary because it changes
    other settings, and overrides must come after this setting. Create a default
    <command moreinfo="none">vim</command> configuration file by running the following:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/vimrc &lt;&lt; "EOF"
<literal moreinfo="none">" Begin /etc/vimrc

" Ensure defaults are set before customizing settings, not after
source $VIMRUNTIME/defaults.vim
let skip_defaults_vim=1 

set nocompatible
set backspace=2
set mouse=
syntax on
if (&amp;term == "xterm") || (&amp;term == "putty")
  set background=dark
endif

" End /etc/vimrc</literal>
EOF</userinput></screen>

    <para>The <parameter moreinfo="none">set nocompatible</parameter> setting makes
    <command moreinfo="none">vim</command> behave in a more useful way (the default) than the
    vi-compatible manner. Remove the <quote>no</quote> to keep the old
    <command moreinfo="none">vi</command> behavior. The <parameter moreinfo="none">set backspace=2</parameter>
    setting allows backspacing over line breaks, autoindents, and the start of
    an insert. The <parameter moreinfo="none">syntax on</parameter> parameter enables vim's syntax
    highlighting.  The <parameter moreinfo="none">set mouse=</parameter> setting enables
    proper pasting of text with the mouse when working in chroot or over a
    remote connection.  Finally, the <emphasis>if</emphasis> statement with the
    <parameter moreinfo="none">set background=dark</parameter> setting corrects
    <command moreinfo="none">vim</command>'s guess about the background color of some terminal
    emulators. This gives the highlighting a better color scheme for use on the
    black background of these programs.</para>

    <para>Documentation for other available options can be obtained by
    running the following command:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">vim -c ':options'</userinput></screen>

    <note>
      <para>By default, vim only installs spell files for the English language.
      To install spell files for your preferred language, download the
      <filename moreinfo="none">*.spl</filename> and optionally, the <filename moreinfo="none">*.sug</filename>
      files for your language and character encoding from <ulink url="ftp://ftp.vim.org/pub/vim/runtime/spell/"/> and save them to
      <filename class="directory" moreinfo="none">/usr/share/vim/vim82/spell/</filename>.</para>

      <para>To use these spell files, some configuration in
      <filename moreinfo="none">/etc/vimrc</filename> is needed, e.g.:</para>

<screen format="linespecific"><literal moreinfo="none">set spelllang=en,ru
set spell</literal></screen>

      <para>For more information, see the appropriate README file located
      at the URL above.</para>
    </note>

  </sect2>

  <sect2 id="contents-vim" role="content">
    <title>Contents of Vim</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed directory</segtitle>

      <seglistitem>
       <seg> ex (link to vim), rview (link to vim), rvim (link to vim), vi
       (link to vim), view (link to vim), vim, vimdiff (link to vim), vimtutor,
       and xxd</seg>
        <seg>/usr/share/vim</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="ex">
        <term><command moreinfo="none">ex</command></term>
        <listitem>
          <para>Starts <command moreinfo="none">vim</command> in ex mode</para>
          <indexterm zone="ch-system-vim ex" significance="normal">
            <primary sortas="b-ex">ex</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rview">
        <term><command moreinfo="none">rview</command></term>
        <listitem>
          <para>Is a restricted version of <command moreinfo="none">view</command>; no shell
          commands can be started and <command moreinfo="none">view</command> cannot be
          suspended</para>
          <indexterm zone="ch-system-vim rview" significance="normal">
            <primary sortas="b-rview">rview</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rvim">
        <term><command moreinfo="none">rvim</command></term>
        <listitem>
          <para>Is a restricted version of <command moreinfo="none">vim</command>; no shell
          commands can be started and <command moreinfo="none">vim</command> cannot be
          suspended</para>
          <indexterm zone="ch-system-vim rvim" significance="normal">
            <primary sortas="b-rvim">rvim</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vi">
        <term><command moreinfo="none">vi</command></term>
        <listitem>
          <para>Link to <command moreinfo="none">vim</command></para>
          <indexterm zone="ch-system-vim vi" significance="normal">
            <primary sortas="b-vi">vi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="view">
        <term><command moreinfo="none">view</command></term>
        <listitem>
          <para>Starts <command moreinfo="none">vim</command> in read-only mode</para>
          <indexterm zone="ch-system-vim view" significance="normal">
            <primary sortas="b-view">view</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vim">
        <term><command moreinfo="none">vim</command></term>
        <listitem>
          <para>Is the editor</para>
          <indexterm zone="ch-system-vim vim" significance="normal">
            <primary sortas="b-vim">vim</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vimdiff">
        <term><command moreinfo="none">vimdiff</command></term>
        <listitem>
          <para>Edits two or three versions of a file with <command moreinfo="none">vim</command>
          and shows differences</para>
          <indexterm zone="ch-system-vim vimdiff" significance="normal">
            <primary sortas="b-vimdiff">vimdiff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vimtutor">
        <term><command moreinfo="none">vimtutor</command></term>
        <listitem>
          <para>Teaches the basic keys and commands of
          <command moreinfo="none">vim</command></para>
          <indexterm zone="ch-system-vim vimtutor" significance="normal">
            <primary sortas="b-vimtutor">vimtutor</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xxd">
        <term><command moreinfo="none">xxd</command></term>
        <listitem>
          <para>Creates a hex dump of the given file; it can
          also do the reverse, so it can be used for binary patching</para>
          <indexterm zone="ch-system-vim xxd" significance="normal">
            <primary sortas="b-xxd">xxd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

  <!-- systemd only -->
  
  
  
  

  <!-- sysv only -->
  <sect1 id="ch-system-eudev" role="wrap" revision="sysv">
  <?dbhtml filename="eudev.html"?>

  <sect1info condition="script">
    <productname class="trade">eudev</productname>
    <productnumber>3.2.10</productnumber>
    <address format="linespecific">https://dev.gentoo.org/~blueness/eudev/eudev-3.2.10.tar.gz</address>
  </sect1info>

  <title>Eudev-3.2.10</title>

  <indexterm zone="ch-system-eudev" significance="normal">
    <primary sortas="a-Eudev">Eudev</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Eudev package contains programs for dynamic creation of device
    nodes.</para> 

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.2 SBU</seg>
        <seg>80 MB</seg>
      </seglistitem>
    </segmentedlist>
  </sect2>

  <sect2 role="installation">
    <title>Installation of Eudev</title>
<!--
    <para>First, fix a test script:</para>

<screen><userinput remap="pre">sed -r -i 's|/usr(/bin/test)|\1|' test/udev-test.pl</userinput></screen>
-->
<!--
    <para>Next, remove an unneeded line that causes a build failure:</para>

<screen><userinput remap="pre">sed -i '/keyboard_lookup_key/d' src/udev/udev-builtin-keyboard.c</userinput></screen>
-->

    <para>Prepare Eudev for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr           \
            --bindir=/usr/sbin      \
            --sysconfdir=/etc       \
            --enable-manpages       \
            --disable-static</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>Create some directories now that are needed for tests, but
    will also be used as a part of installation:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">mkdir -pv /usr/lib/udev/rules.d
mkdir -pv /etc/udev/rules.d</userinput></screen>

    <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Install some custom rules and support files useful in an LFS 
    environment:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">tar -xvf ../udev-lfs-20171102.tar.xz
make -f udev-lfs-20171102/Makefile.lfs install</userinput></screen>

  </sect2>

  <sect2 id="conf-eudev" role="configuration">
    <title>Configuring Eudev</title>

    <indexterm zone="conf-eudev" significance="normal">
      <primary sortas="a-Eudev">Eudev</primary>
      <secondary>configuring</secondary>
    </indexterm>

    <indexterm zone="conf-eudev" significance="normal">
      <primary sortas="e-/etc/udev/hwdb.bin">/etc/udev/hwdb.bin</primary>
    </indexterm>

    <para>Information about hardware devices is maintained in the
    <filename class="directory" moreinfo="none">/etc/udev/hwdb.d</filename> and
    <filename class="directory" moreinfo="none">/usr/lib/udev/hwdb.d</filename> directories.
    <application moreinfo="none">Eudev</application> needs that information to be compiled
    into a binary database <filename moreinfo="none">/etc/udev/hwdb.bin</filename>. Create the
    initial database:</para>

<screen format="linespecific"><userinput moreinfo="none">udevadm hwdb --update</userinput></screen>

    <para>This command needs to be run each time the hardware information is
    updated.</para>

  </sect2>

  <sect2 id="contents-eudev" role="content">
    <title>Contents of Eudev</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg><!-- These are in /usr/lib/udev and not to be called by the user:
         accelerometer, ata_id, cdrom_id, collect, mtd_probe,
         scsi_id, v4l_id,--> udevadm and udevd</seg>

        <seg>libudev.so</seg>

        <seg>/etc/udev, /usr/lib/udev, and /usr/share/doc/udev-udev-lfs-20171102</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
      <varlistentry id="udevadm" revision="sysv">
        <term><command moreinfo="none">udevadm</command></term>
        <listitem>
          <para>Generic udev administration tool: controls the udevd daemon,
          provides info from the Udev database, monitors uevents, waits for
          uevents to finish, tests Udev configuration, and triggers uevents
          for a given device</para>
          <indexterm zone="ch-system-eudev udevadm" significance="normal">
            <primary sortas="b-udevadm">udevadm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="udevd">
        <term><command moreinfo="none">udevd</command></term>
        <listitem>
          <para>A daemon that listens for uevents on the netlink socket,
          creates devices and runs the configured external programs in
          response to these uevents</para>
          <indexterm zone="ch-system-eudev udevd" significance="normal">
            <primary sortas="b-udevd">udevd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libudev">
        <term><filename class="libraryfile" moreinfo="none">libudev</filename></term>
        <listitem>
          <para>A library interface to udev device information</para>
          <indexterm zone="ch-system-eudev libudev" significance="normal">
            <primary sortas="c-libudev">libudev</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="etc-udev">
        <term><filename class="directory" moreinfo="none">/etc/udev</filename></term>
        <listitem>
          <para>Contains Udev configuration files,
          device permissions, and rules for device naming</para>
          <indexterm zone="ch-system-eudev etc-udev" significance="normal">
            <primary sortas="e-/etc/udev">/etc/udev</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

  <!-- Both sysv on systemd builds -->
  <sect1 id="ch-system-man-db" role="wrap">
  <?dbhtml filename="man-db.html"?>

  <sect1info condition="script">
    <productname class="trade">man-db</productname>
    <productnumber>2.9.4</productnumber>
    <address format="linespecific">https://download.savannah.gnu.org/releases/man-db/man-db-2.9.4.tar.xz</address>
  </sect1info>

  <title>Man-DB-2.9.4</title>

  <indexterm zone="ch-system-man-db" significance="normal">
    <primary sortas="a-Man-DB">Man-DB</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Man-DB package contains programs for finding and viewing man
    pages.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.4 SBU</seg>
        <seg>38 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Man-DB</title>

    <para>Prepare Man-DB for compilation:</para>



<screen revision="sysv" format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr                        \
            --docdir=/usr/share/doc/man-db-2.9.4 \
            --sysconfdir=/etc                    \
            --disable-setuid                     \
            --enable-cache-owner=bin             \
            --with-browser=/usr/bin/lynx         \
            --with-vgrind=/usr/bin/vgrind        \
            --with-grap=/usr/bin/grap            \
            --with-systemdtmpfilesdir=           \
            --with-systemdsystemunitdir=</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-setuid</parameter></term>
        <listitem>
          <para>This disables making the <command moreinfo="none">man</command> program setuid
          to user <systemitem class="username" moreinfo="none">man</systemitem>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-cache-owner=bin</parameter></term>
        <listitem>
          <para>This makes the system-wide cache files be owned by user
          <systemitem class="username" moreinfo="none">bin</systemitem>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--with-...</parameter></term>
        <listitem>
          <para>These three parameters are used to set some default programs.
          <command moreinfo="none">lynx</command> is a text-based web browser (see
          BLFS for installation instructions), <command moreinfo="none">vgrind</command>
          converts program sources to Groff input, and <command moreinfo="none">grap</command>
          is useful for typesetting graphs in Groff documents. The
          <command moreinfo="none">vgrind</command> and <command moreinfo="none">grap</command> programs are
          not normally needed for viewing manual pages. They are not part of
          LFS or BLFS, but you should be able to install them yourself after
          finishing LFS if you wish to do so.</para>
        </listitem>
      </varlistentry>

      <varlistentry revision="sysv">
        <term><parameter moreinfo="none">--with-systemd...</parameter></term>
        <listitem>
          <para>These parameters prevent installing unneeded systemd 
          directories and files.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

   <para>To test the results, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2>
    <title>Non-English Manual Pages in LFS</title>

    <para>The following table shows the character set that Man-DB assumes
    manual pages installed under
    <filename class="directory" moreinfo="none">/usr/share/man/&lt;ll&gt;</filename> will be
    encoded with.  In addition to this, Man-DB correctly determines if manual
    pages installed in that directory are UTF-8 encoded.</para>

    <!-- Origin: man-db-2.5.9/lib/encodings.c -->
    <table>
<title>Expected character encoding of legacy 8-bit manual pages</title>
      <?dbfo table-width="6in" ?>

      <tgroup cols="4">

        <colspec colnum="1" colwidth="1.5in"/>
        <colspec colnum="2" colwidth="1in"/>
        <colspec colnum="3" colwidth="2.5in"/>
        <colspec colnum="4" colwidth="1in"/>

        <thead>
          <row>
            <entry>Language (code)</entry>
            <entry>Encoding</entry>
            <entry>Language (code)</entry>
            <entry>Encoding</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>Danish (da)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Croatian (hr)</entry>
            <entry>ISO-8859-2</entry>
          </row>
          <row>
            <entry>German (de)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Hungarian (hu)</entry>
            <entry>ISO-8859-2</entry>
          </row>
          <row>
            <entry>English (en)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Japanese (ja)</entry>
            <entry>EUC-JP</entry>
          </row>
          <row>
            <entry>Spanish (es)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Korean (ko)</entry>
            <entry>EUC-KR</entry>
          </row>
          <row>
            <entry>Estonian (et)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Lithuanian (lt)</entry>
            <entry>ISO-8859-13</entry>
          </row>
          <row>
            <entry>Finnish (fi)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Latvian (lv)</entry>
            <entry>ISO-8859-13</entry>
          </row>
          <row>
            <entry>French (fr)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Macedonian (mk)</entry>
            <entry>ISO-8859-5</entry>
          </row>
          <row>
            <entry>Irish (ga)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Polish (pl)</entry>
            <entry>ISO-8859-2</entry>
          </row>
          <row>
            <entry>Galician (gl)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Romanian (ro)</entry>
            <entry>ISO-8859-2</entry>
          </row>
          <row>
            <entry>Indonesian (id)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Russian (ru)</entry>
            <entry>KOI8-R</entry>
          </row>
          <row>
            <entry>Icelandic (is)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Slovak (sk)</entry>
            <entry>ISO-8859-2</entry>
          </row>
          <row>
            <entry>Italian (it)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Slovenian (sl)</entry>
            <entry>ISO-8859-2</entry>
          </row>
          <row>
            <entry>Norwegian Bokmal (nb)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Serbian Latin (sr@latin)</entry>
            <entry>ISO-8859-2</entry>
          </row>
          <row>
            <entry>Dutch (nl)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Serbian (sr)</entry>
            <entry>ISO-8859-5</entry>
          </row>
          <row>
            <entry>Norwegian Nynorsk (nn)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Turkish (tr)</entry>
            <entry>ISO-8859-9</entry>
          </row>
          <row>
            <entry>Norwegian (no)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Ukrainian (uk)</entry>
            <entry>KOI8-U</entry>
          </row>
          <row>
            <entry>Portuguese (pt)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Vietnamese (vi)</entry>
            <entry>TCVN5712-1</entry>
          </row>
          <row>
            <entry>Swedish (sv)</entry>
            <entry>ISO-8859-1</entry>
            <entry>Simplified Chinese (zh_CN)</entry>
            <entry>GBK</entry>
          </row>
          <row>
            <entry>Belarusian (be)</entry>
            <entry>CP1251</entry>
            <entry>Simplified Chinese, Singapore (zh_SG)</entry>
            <entry>GBK</entry>
          </row>
          <row>
            <entry>Bulgarian (bg)</entry>
            <entry>CP1251</entry>
            <entry>Traditional Chinese, Hong Kong (zh_HK)</entry>
            <entry>BIG5HKSCS</entry>
          </row>
          <row>
            <entry>Czech (cs)</entry>
            <entry>ISO-8859-2</entry>
            <entry>Traditional Chinese (zh_TW)</entry>
            <entry>BIG5</entry>
          </row>
          <row>
            <entry>Greek (el)</entry>
            <entry>ISO-8859-7</entry>
            <entry/>
            <entry/>
          </row>

        </tbody>

      </tgroup>

    </table>

    <note>
      <para>Manual pages in languages not in the list are not supported.</para>
    </note>

  </sect2>

  <sect2 id="contents-man-db" role="content">
    <title>Contents of Man-DB</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>accessdb, apropos (link to whatis), catman, lexgrog, man, mandb,
        manpath, and whatis</seg>
        <seg>libman.so and libmandb.so (both in /usr/lib/man-db)</seg>
        <seg>/usr/lib/man-db, /usr/libexec/man-db,
        and /usr/share/doc/man-db-2.9.4</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="accessdb">
        <term><command moreinfo="none">accessdb</command></term>
        <listitem>
          <para>Dumps the <command moreinfo="none">whatis</command> database contents in
          human-readable form</para>
          <indexterm zone="ch-system-man-db accessdb" significance="normal">
            <primary sortas="b-accessdb">accessdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="apropos">
        <term><command moreinfo="none">apropos</command></term>
        <listitem>
          <para>Searches the <command moreinfo="none">whatis</command> database and displays
          the short descriptions of system commands that contain a given
          string</para>
          <indexterm zone="ch-system-man-db apropos" significance="normal">
            <primary sortas="b-apropos">apropos</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="catman">
        <term><command moreinfo="none">catman</command></term>
        <listitem>
          <para>Creates or updates the pre-formatted manual pages</para>
          <indexterm zone="ch-system-man-db catman" significance="normal">
            <primary sortas="b-catman">catman</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lexgrog">
        <term><command moreinfo="none">lexgrog</command></term>
        <listitem>
          <para>Displays one-line summary information about a given manual
          page</para>
          <indexterm zone="ch-system-man-db lexgrog" significance="normal">
            <primary sortas="b-lexgrog">lexgrog</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="man">
        <term><command moreinfo="none">man</command></term>
        <listitem>
          <para>Formats and displays the requested manual page</para>
          <indexterm zone="ch-system-man-db man" significance="normal">
            <primary sortas="b-man">man</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mandb">
        <term><command moreinfo="none">mandb</command></term>
        <listitem>
          <para>Creates or updates the <command moreinfo="none">whatis</command> database</para>
          <indexterm zone="ch-system-man-db mandb" significance="normal">
            <primary sortas="b-mandb">mandb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="manpath">
        <term><command moreinfo="none">manpath</command></term>
        <listitem>
          <para>Displays the contents of $MANPATH or (if $MANPATH is not set)
          a suitable search path based on the settings in man.conf and the
          user's environment</para>
          <indexterm zone="ch-system-man-db manpath" significance="normal">
            <primary sortas="b-manpath">manpath</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="whatis">
        <term><command moreinfo="none">whatis</command></term>
        <listitem>
          <para>Searches the <command moreinfo="none">whatis</command> database and displays
          the short descriptions of system commands that contain the given
          keyword as a separate word</para>
          <indexterm zone="ch-system-man-db whatis" significance="normal">
            <primary sortas="b-whatis">whatis</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libman">
        <term><filename class="libraryfile" moreinfo="none">libman</filename></term>
        <listitem>
          <para>Contains run-time support for <command moreinfo="none">man</command></para>
          <indexterm zone="ch-system-man-db libman" significance="normal">
            <primary sortas="c-libman">libman</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmandb">
        <term><filename class="libraryfile" moreinfo="none">libmandb</filename></term>
        <listitem>
          <para>Contains run-time support for <command moreinfo="none">man</command></para>
          <indexterm zone="ch-system-man-db libmandb" significance="normal">
            <primary sortas="c-libmandb">libmandb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-procps" role="wrap">
  <?dbhtml filename="procps-ng.html"?>

  <sect1info condition="script">
    <productname class="trade">procps-ng</productname>
    <productnumber>3.3.17</productnumber>
    <address format="linespecific">https://sourceforge.net/projects/procps-ng/files/Production/procps-ng-3.3.17.tar.xz</address>
  </sect1info>

  <title>Procps-ng-3.3.17</title>

  <indexterm zone="ch-system-procps" significance="normal">
    <primary sortas="a-Procps">Procps-ng</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Procps-ng package contains programs for monitoring processes.</para>

    <!-- TODO This note will probably not be needed at the next revision. -->
    <note>
      <para>This package extracts to the directory
      <filename class="directory" moreinfo="none">procps-3.3.17</filename>, 
      not the expected
      <filename class="directory" moreinfo="none">procps-ng-3.3.17</filename>.</para>
    </note>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>0.5 SBU</seg>
        <seg>19 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Procps-ng</title>

    <para>Prepare procps-ng for compilation:</para>

<screen revision="sysv" format="linespecific"><userinput remap="configure" moreinfo="none">./configure --prefix=/usr                            \
            --docdir=/usr/share/doc/procps-ng-3.3.17 \
            --disable-static                         \
            --disable-kill</userinput></screen>



    <variablelist>
      <title>The meaning of the configure option:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-kill</parameter></term>
        <listitem>
          <para>This switch disables building the <command moreinfo="none">kill</command>
          command that will be installed by the Util-linux package.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>
<!--
    <para>The test suite needs some custom modifications for LFS.
    Remove a test that fails when scripting does not use a tty device and
    fix two others.
    To run the test suite, run the following commands:</para>

<screen><userinput remap="test">sed -i -r 's|(pmap_initname)\\\$|\1|' testsuite/pmap.test/pmap.exp
sed -i '/set tty/d' testsuite/pkill.test/pkill.exp
rm testsuite/pgrep.test/pgrep.exp
make check</userinput></screen>
-->
    <para> To run the test suite, run:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>Five tests related to pkill are known to fail due to a problem
    with tests that were not updated.</para>
 
    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-procps" role="content">
    <title>Contents of Procps-ng</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>free, pgrep, pidof, pkill, pmap, ps, pwdx, slabtop,
        sysctl, tload, top, uptime, vmstat, w, and watch</seg>
        <seg>libprocps.so</seg>
        <seg>/usr/include/proc and /usr/share/doc/procps-ng-3.3.17</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="free">
        <term><command moreinfo="none">free</command></term>
        <listitem>
          <para>Reports the amount of free and used memory (both physical and
          swap memory) in the system</para>
          <indexterm zone="ch-system-procps free" significance="normal">
            <primary sortas="b-free">free</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pgrep">
        <term><command moreinfo="none">pgrep</command></term>
        <listitem>
          <para>Looks up processes based on their name and other attributes</para>
          <indexterm zone="ch-system-procps pgrep" significance="normal">
            <primary sortas="b-pgrep">pgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pidof">
        <term><command moreinfo="none">pidof</command></term>
        <listitem>
          <para>Reports the PIDs of the given programs</para>
          <indexterm zone="ch-system-procps pidof" significance="normal">
            <primary sortas="b-pidof">pidof</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pkill">
        <term><command moreinfo="none">pkill</command></term>
        <listitem>
          <para>Signals processes based on their name and other attributes</para>
          <indexterm zone="ch-system-procps pkill" significance="normal">
            <primary sortas="b-pkill">pkill</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pmap">
        <term><command moreinfo="none">pmap</command></term>
        <listitem>
          <para>Reports the memory map of the given process</para>
          <indexterm zone="ch-system-procps pmap" significance="normal">
            <primary sortas="b-pmap">pmap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ps">
        <term><command moreinfo="none">ps</command></term>
        <listitem>
          <para>Lists the current running processes</para>
          <indexterm zone="ch-system-procps ps" significance="normal">
            <primary sortas="b-ps">ps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pwait">
        <term><command moreinfo="none">pwait</command></term>
        <listitem>
          <para>Waits for a process to finish before executing.</para>
          <indexterm zone="ch-system-procps pwait" significance="normal">
            <primary sortas="b-pwait">pwait</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pwdx">
        <term><command moreinfo="none">pwdx</command></term>
        <listitem>
          <para>Reports the current working directory of a process</para>
          <indexterm zone="ch-system-procps pwdx" significance="normal">
            <primary sortas="b-pwdx">pwdx</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="slabtop">
        <term><command moreinfo="none">slabtop</command></term>
        <listitem>
          <para>Displays detailed kernel slab cache information in real time</para>
          <indexterm zone="ch-system-procps slabtop" significance="normal">
            <primary sortas="b-slabtop">slabtop</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sysctl">
        <term><command moreinfo="none">sysctl</command></term>
        <listitem>
          <para>Modifies kernel parameters at run time</para>
          <indexterm zone="ch-system-procps sysctl" significance="normal">
            <primary sortas="b-sysctl">sysctl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tload">
        <term><command moreinfo="none">tload</command></term>
        <listitem>
          <para>Prints a graph of the current system load average</para>
          <indexterm zone="ch-system-procps tload" significance="normal">
            <primary sortas="b-tload">tload</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="top">
        <term><command moreinfo="none">top</command></term>
        <listitem>
          <para>Displays a list of the most CPU intensive processes; it
          provides an ongoing look at processor activity in real time</para>
          <indexterm zone="ch-system-procps top" significance="normal">
            <primary sortas="b-top">top</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="uptime">
        <term><command moreinfo="none">uptime</command></term>
        <listitem>
          <para>Reports how long the system has been running, how many users are
          logged on, and the system load averages</para>
          <indexterm zone="ch-system-procps uptime" significance="normal">
            <primary sortas="b-uptime">uptime</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vmstat">
        <term><command moreinfo="none">vmstat</command></term>
        <listitem>
          <para>Reports virtual memory statistics, giving information about
          processes, memory, paging, block Input/Output (IO), traps, and CPU
          activity</para>
          <indexterm zone="ch-system-procps vmstat" significance="normal">
            <primary sortas="b-vmstat">vmstat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="w">
        <term><command moreinfo="none">w</command></term>
        <listitem>
          <para>Shows which users are currently logged on, where, and since
          when</para>
          <indexterm zone="ch-system-procps w" significance="normal">
            <primary sortas="b-w">w</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="watch">
        <term><command moreinfo="none">watch</command></term>
        <listitem>
          <para>Runs a given command repeatedly, displaying the first
          screen-full of its output; this allows a user to watch the output
          change over time</para>
          <indexterm zone="ch-system-procps watch" significance="normal">
            <primary sortas="b-watch">watch</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libprocps">
        <term><filename class="libraryfile" moreinfo="none">libprocps</filename></term>
        <listitem>
          <para>Contains the functions used by most programs in this
          package</para>
          <indexterm zone="ch-system-procps libprocps" significance="normal">
            <primary sortas="c-libprocps">libprocps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-util-linux" role="wrap">
  <?dbhtml filename="util-linux.html"?>

  <sect1info condition="script">
    <productname class="trade">util-linux</productname>
    <productnumber>2.37.2</productnumber>
    <address format="linespecific">https://www.kernel.org/pub/linux/utils/util-linux/v2.37/util-linux-2.37.2.tar.xz</address>
  </sect1info>

  <title>Util-linux-2.37.2</title>

  <indexterm zone="ch-system-util-linux" significance="normal">
    <primary sortas="a-Util-linux">Util-linux</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Util-linux package contains miscellaneous utility programs.
    Among them are utilities for handling file systems, consoles, partitions,
    and messages.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.1 SBU</seg>
        <seg>261 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Util-linux</title>

    <para>Prepare Util-linux for compilation:</para>

<screen revision="sysv" format="linespecific"><userinput remap="configure" moreinfo="none">./configure ADJTIME_PATH=/var/lib/hwclock/adjtime   \
            --libdir=/usr/lib    \
            --docdir=/usr/share/doc/util-linux-2.37.2 \
            --disable-chfn-chsh  \
            --disable-login      \
            --disable-nologin    \
            --disable-su         \
            --disable-setpriv    \
            --disable-runuser    \
            --disable-pylibmount \
            --disable-static     \
            --without-python     \
            --without-systemd    \
            --without-systemdsystemunitdir \
            runstatedir=/run</userinput></screen>



    <para>The --disable and --without options prevent warnings about
    building components that require packages not in LFS or are 
    inconsistent with programs installed by other packages.</para>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>If desired, run the test suite as a non-root user:</para>

    <warning><para>Running the test suite as the
    <systemitem class="username" moreinfo="none">root</systemitem> user can be harmful to
    your system.  To run it, the CONFIG_SCSI_DEBUG option for the kernel must
    be available in the currently running system and must be built as a
    module.  Building it into the kernel will prevent booting.  For complete
    coverage, other BLFS packages must be installed.  If desired, this test can
    be run after rebooting into the completed LFS system and running:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">bash tests/run.sh --srcdir=$PWD --builddir=$PWD</userinput></screen>
    </warning>

    <note><para>There is one test that fails in the chroot envronment and
    causes the tests to hang forever.  The problem does not occur outside
    of the chroot envronment.
    To work around the problem, delete the test:</para>

    <screen format="linespecific"><userinput remap="test" moreinfo="none">rm tests/ts/lsns/ioctl_ns</userinput></screen>
    </note>

<screen format="linespecific"><userinput remap="test" moreinfo="none">chown -Rv tester .
su tester -c "make -k check"</userinput></screen>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>
<!--
  <para>Finally, install the man pages:</para>

<screen><userinput remap="install">tar -xf ../util-linux-man-pages-&util-linux-version;.tar.xz - -directory /usr/share/man - -strip-components=1</userinput></screen>
-->
  </sect2>

  <sect2 id="contents-utillinux" role="content">
    <title>Contents of Util-linux</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>addpart, agetty, blkdiscard, blkid, blkzone, blockdev, cal, cfdisk, chcpu,
        chmem, choom, chrt, col, colcrt, colrm, column, ctrlaltdel, delpart, dmesg,
        eject, fallocate, fdformat, fdisk, fincore, findfs, findmnt, flock, fsck,
        fsck.cramfs, fsck.minix, fsfreeze, fstrim, getopt, hexdump, hwclock,
        i386, ionice, ipcmk, ipcrm, ipcs, isosize, kill, last, lastb (link to
        last), ldattach, linux32, linux64, logger, look, losetup, lsblk, lscpu,
        lsipc, lslocks, lslogins, lsmem, lsns, mcookie, mesg, mkfs, mkfs.bfs, mkfs.cramfs, mkfs.minix, mkswap,
        more, mount, mountpoint, namei, nsenter, partx, pivot_root, prlimit, raw,
        readprofile, rename, renice, resizepart, rev, rfkill, rtcwake, script,
        scriptreplay, setarch, setsid, setterm, sfdisk, sulogin, swaplabel,
        swapoff (link to swapon), swapon, switch_root, taskset, ul,
        umount, uname26, unshare, utmpdump, uuidd, uuidgen, uuidparse, wall, wdctl, whereis,
        wipefs, x86_64, and zramctl</seg>
        <seg>libblkid.so, libfdisk.so, libmount.so, 
        libsmartcols.so, and libuuid.so</seg>
        <seg>/usr/include/blkid, 
             /usr/include/libfdisk, 
             /usr/include/libmount, 
             /usr/include/libsmartcols, 
             /usr/include/uuid, 
             /usr/share/doc/util-linux-2.37.2, 
         and /var/lib/hwclock</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="addpart">
        <term><command moreinfo="none">addpart</command></term>
        <listitem>
          <para>Informs the Linux kernel of new partitions</para>
          <indexterm zone="ch-system-util-linux addpart" significance="normal">
            <primary sortas="b-addpart">addpart</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="agetty">
        <term><command moreinfo="none">agetty</command></term>
        <listitem>
          <para>Opens a tty port, prompts for a login name,
          and then invokes the <command moreinfo="none">login</command> program</para>
          <indexterm zone="ch-system-util-linux agetty" significance="normal">
            <primary sortas="b-agetty">agetty</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="blkdiscard">
        <term><command moreinfo="none">blkdiscard</command></term>
        <listitem>
          <para>Discards sectors on a device</para>
          <indexterm zone="ch-system-util-linux blkdiscard" significance="normal">
            <primary sortas="b-blkdiscard">blkdiscard</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="blkid">
        <term><command moreinfo="none">blkid</command></term>
        <listitem>
          <para>A command line utility to locate and print block device
          attributes</para>
          <indexterm zone="ch-system-util-linux blkid" significance="normal">
            <primary sortas="b-blkid">blkid</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="blkzone">
        <term><command moreinfo="none">blkzone</command></term>
        <listitem>
          <para>Runs zone command on the given block device</para>
          <indexterm zone="ch-system-util-linux blkzone" significance="normal">
            <primary sortas="b-blkzone">blkzone</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="blockdev">
        <term><command moreinfo="none">blockdev</command></term>
        <listitem>
          <para>Allows users to call block device ioctls from the command
          line</para>
          <indexterm zone="ch-system-util-linux blockdev" significance="normal">
            <primary sortas="b-blockdev">blockdev</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cal">
        <term><command moreinfo="none">cal</command></term>
        <listitem>
          <para>Displays a simple calendar</para>
          <indexterm zone="ch-system-util-linux cal" significance="normal">
            <primary sortas="b-cal">cal</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cfdisk">
        <term><command moreinfo="none">cfdisk</command></term>
        <listitem>
          <para>Manipulates the partition table of the given device</para>
          <indexterm zone="ch-system-util-linux cfdisk" significance="normal">
            <primary sortas="b-cfdisk">cfdisk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chcpu">
        <term><command moreinfo="none">chcpu</command></term>
        <listitem>
          <para>Modifies the state of CPUs</para>
          <indexterm zone="ch-system-util-linux chcpu" significance="normal">
            <primary sortas="b-chcpu">chcpu</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chmem">
        <term><command moreinfo="none">chmem</command></term>
        <listitem>
          <para>Configures memory</para>
          <indexterm zone="ch-system-util-linux chmem" significance="normal">
            <primary sortas="b-chmem">chmem</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="choom">
        <term><command moreinfo="none">choom</command></term>
        <listitem>
          <para>Displays and adjusts OOM-killer score</para>
          <indexterm zone="ch-system-util-linux choom" significance="normal">
            <primary sortas="b-choom">choom</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chrt">
        <term><command moreinfo="none">chrt</command></term>
        <listitem>
          <para>Manipulates real-time attributes of a process</para>
          <indexterm zone="ch-system-util-linux chrt" significance="normal">
            <primary sortas="b-chrt">chrt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="col">
        <term><command moreinfo="none">col</command></term>
        <listitem>
          <para>Filters out reverse line feeds</para>
          <indexterm zone="ch-system-util-linux col" significance="normal">
            <primary sortas="b-col">col</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="colcrt">
        <term><command moreinfo="none">colcrt</command></term>
        <listitem>
          <para>Filters <command moreinfo="none">nroff</command> output for terminals
          that lack some capabilities, such as overstriking and half-lines</para>
          <indexterm zone="ch-system-util-linux colcrt" significance="normal">
            <primary sortas="b-colcrt">colcrt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="colrm">
        <term><command moreinfo="none">colrm</command></term>
        <listitem>
          <para>Filters out the given columns</para>
          <indexterm zone="ch-system-util-linux colrm" significance="normal">
            <primary sortas="b-colrm">colrm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="column">
        <term><command moreinfo="none">column</command></term>
        <listitem>
          <para>Formats a given file into multiple columns</para>
          <indexterm zone="ch-system-util-linux column" significance="normal">
            <primary sortas="b-column">column</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ctrlaltdel">
        <term><command moreinfo="none">ctrlaltdel</command></term>
        <listitem>
          <para>Sets the function of the Ctrl+Alt+Del key combination to a
          hard or a soft reset</para>
          <indexterm zone="ch-system-util-linux ctrlaltdel" significance="normal">
            <primary sortas="b-ctrlaltdel">ctrlaltdel</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="delpart">
        <term><command moreinfo="none">delpart</command></term>
        <listitem>
          <para>Asks the Linux kernel to remove a partition</para>
          <indexterm zone="ch-system-util-linux delpart" significance="normal">
            <primary sortas="b-delpart">delpart</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dmesg">
        <term><command moreinfo="none">dmesg</command></term>
        <listitem>
          <para>Dumps the kernel boot messages</para>
          <indexterm zone="ch-system-util-linux dmesg" significance="normal">
            <primary sortas="b-dmesg">dmesg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="eject">
        <term><command moreinfo="none">eject</command></term>
        <listitem>
          <para>Ejects removable media</para>
          <indexterm zone="ch-system-util-linux eject" significance="normal">
            <primary sortas="b-eject">eject</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fallocate">
        <term><command moreinfo="none">fallocate</command></term>
        <listitem>
          <para>Preallocates space to a file</para>
          <indexterm zone="ch-system-util-linux fallocate" significance="normal">
            <primary sortas="b-fallocate">fallocate</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fdformat">
        <term><command moreinfo="none">fdformat</command></term>
        <listitem>
          <para>Low-level formats a floppy disk</para>
          <indexterm zone="ch-system-util-linux fdformat" significance="normal">
            <primary sortas="b-fdformat">fdformat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fdisk">
        <term><command moreinfo="none">fdisk</command></term>
        <listitem>
          <para>Manipulates the partition table of the given device</para>
          <indexterm zone="ch-system-util-linux fdisk" significance="normal">
            <primary sortas="b-fdisk">fdisk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fincore">
        <term><command moreinfo="none">fincore</command></term>
        <listitem>
          <para>Counts pages of file contents in core</para>
          <indexterm zone="ch-system-util-linux fincore" significance="normal">
            <primary sortas="b-fincore">fincore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="findfs">
        <term><command moreinfo="none">findfs</command></term>
        <listitem>
          <para>Finds a file system by label or Universally Unique Identifier
          (UUID)</para>
          <indexterm zone="ch-system-util-linux findfs" significance="normal">
            <primary sortas="b-findfs">findfs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="findmnt">
        <term><command moreinfo="none">findmnt</command></term>
        <listitem>
          <para>Is a command line interface to the libmount library
          for work with mountinfo, fstab and mtab files</para>
          <indexterm zone="ch-system-util-linux findmnt" significance="normal">
            <primary sortas="b-findmnt">findmnt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="flock">
        <term><command moreinfo="none">flock</command></term>
        <listitem>
          <para>Acquires a file lock and then executes a command with the lock
          held</para>
          <indexterm zone="ch-system-util-linux flock" significance="normal">
            <primary sortas="b-flock">flock</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fsck">
        <term><command moreinfo="none">fsck</command></term>
        <listitem>
          <para>Is used to check, and optionally repair, file systems</para>
          <indexterm zone="ch-system-util-linux fsck" significance="normal">
            <primary sortas="b-fsck">fsck</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fsck.cramfs">
        <term><command moreinfo="none">fsck.cramfs</command></term>
        <listitem>
          <para>Performs a consistency check on the Cramfs file system on the
          given device</para>
          <indexterm zone="ch-system-util-linux fsck.cramfs" significance="normal">
            <primary sortas="b-fsck.cramfs">fsck.cramfs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fsck.minix">
        <term><command moreinfo="none">fsck.minix</command></term>
        <listitem>
          <para>Performs a consistency check on the Minix file system on the
          given device</para>
          <indexterm zone="ch-system-util-linux fsck.minix" significance="normal">
            <primary sortas="b-fsck.minix">fsck.minix</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fsfreeze">
        <term><command moreinfo="none">fsfreeze</command></term>
        <listitem>
          <para>Is a very simple wrapper around FIFREEZE/FITHAW ioctl
          kernel driver operations</para>
          <indexterm zone="ch-system-util-linux fsfreeze" significance="normal">
            <primary sortas="b-fsfreeze">fsfreeze</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fstrim">
        <term><command moreinfo="none">fstrim</command></term>
        <listitem>
          <para>Discards unused blocks on a mounted filesystem</para>
          <indexterm zone="ch-system-util-linux fstrim" significance="normal">
            <primary sortas="b-fstrim">fstrim</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getopt">
        <term><command moreinfo="none">getopt</command></term>
        <listitem>
          <para>Parses options in the given command line</para>
          <indexterm zone="ch-system-util-linux getopt" significance="normal">
            <primary sortas="b-getopt">getopt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="hexdump">
        <term><command moreinfo="none">hexdump</command></term>
        <listitem>
          <para>Dumps the given file in hexadecimal or in another given
          format</para>
          <indexterm zone="ch-system-util-linux hexdump" significance="normal">
            <primary sortas="b-hexdump">hexdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="hwclock">
        <term><command moreinfo="none">hwclock</command></term>
        <listitem>
          <para>Reads or sets the system's hardware clock, also called
          the Real-Time Clock (RTC) or Basic Input-Output System (BIOS)
          clock</para>
          <indexterm zone="ch-system-util-linux hwclock" significance="normal">
            <primary sortas="b-hwclock">hwclock</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="i386">
        <term><command moreinfo="none">i386</command></term>
        <listitem>
          <para>A symbolic link to setarch</para>
          <indexterm zone="ch-system-util-linux i386" significance="normal">
            <primary sortas="b-i386">i386</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ionice">
        <term><command moreinfo="none">ionice</command></term>
        <listitem>
          <para>Gets or sets the io scheduling class and priority for a program</para>
          <indexterm zone="ch-system-util-linux ionice" significance="normal">
            <primary sortas="b-ionice">ionice</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ipcmk">
        <term><command moreinfo="none">ipcmk</command></term>
        <listitem>
          <para>Creates various IPC resources</para>
          <indexterm zone="ch-system-util-linux ipcmk" significance="normal">
            <primary sortas="b-ipcmk">ipcmk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ipcrm">
        <term><command moreinfo="none">ipcrm</command></term>
        <listitem>
          <para>Removes the given Inter-Process Communication (IPC) resource</para>
          <indexterm zone="ch-system-util-linux ipcrm" significance="normal">
            <primary sortas="b-ipcrm">ipcrm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ipcs">
        <term><command moreinfo="none">ipcs</command></term>
        <listitem>
          <para>Provides IPC status information</para>
          <indexterm zone="ch-system-util-linux ipcs" significance="normal">
            <primary sortas="b-ipcs">ipcs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="isosize">
        <term><command moreinfo="none">isosize</command></term>
        <listitem>
          <para>Reports the size of an iso9660 file system</para>
          <indexterm zone="ch-system-util-linux isosize" significance="normal">
            <primary sortas="b-isosize">isosize</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="kill">
        <term><command moreinfo="none">kill</command></term>
        <listitem>
          <para>Sends signals to processes</para>
          <indexterm zone="ch-system-util-linux kill" significance="normal">
            <primary sortas="b-kill">kill</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="last">
        <term><command moreinfo="none">last</command></term>
        <listitem>
          <para>Shows which users last logged in (and out), searching back 
          through the <filename moreinfo="none">/var/log/wtmp</filename> file; it also shows 
          system boots, shutdowns, and run-level changes</para>
          <indexterm zone="ch-system-util-linux last" significance="normal">
            <primary sortas="b-last">last</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lastb">
        <term><command moreinfo="none">lastb</command></term>
        <listitem>
          <para>Shows the failed login attempts, as logged in 
          <filename moreinfo="none">/var/log/btmp</filename></para>
          <indexterm zone="ch-system-util-linux lastb" significance="normal">
            <primary sortas="b-lastb">lastb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ldattach">
        <term><command moreinfo="none">ldattach</command></term>
        <listitem>
          <para>Attaches a line discipline to a serial line</para>
          <indexterm zone="ch-system-util-linux ldattach" significance="normal">
            <primary sortas="b-ldattach">ldattach</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="linux32">
        <term><command moreinfo="none">linux32</command></term>
        <listitem>
          <para>A symbolic link to setarch</para>
          <indexterm zone="ch-system-util-linux linux32" significance="normal">
            <primary sortas="b-linux32">linux32</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="linux64">
        <term><command moreinfo="none">linux64</command></term>
        <listitem>
          <para>A symbolic link to setarch</para>
          <indexterm zone="ch-system-util-linux linux64" significance="normal">
            <primary sortas="b-linux64">linux64</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="logger">
        <term><command moreinfo="none">logger</command></term>
        <listitem>
          <para>Enters the given message into the system log</para>
          <indexterm zone="ch-system-util-linux logger" significance="normal">
            <primary sortas="b-logger">logger</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="look">
        <term><command moreinfo="none">look</command></term>
        <listitem>
          <para>Displays lines that begin with the given string</para>
          <indexterm zone="ch-system-util-linux look" significance="normal">
            <primary sortas="b-look">look</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="losetup">
        <term><command moreinfo="none">losetup</command></term>
        <listitem>
          <para>Sets up and controls loop devices</para>
          <indexterm zone="ch-system-util-linux losetup" significance="normal">
            <primary sortas="b-losetup">losetup</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lsblk">
        <term><command moreinfo="none">lsblk</command></term>
        <listitem>
          <para>Lists information about all or selected block devices in
           a tree-like format</para>
          <indexterm zone="ch-system-util-linux lsblk" significance="normal">
            <primary sortas="b-lsblk">lsblk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lscpu">
        <term><command moreinfo="none">lscpu</command></term>
        <listitem>
          <para>Prints CPU architecture information</para>
          <indexterm zone="ch-system-util-linux lscpu" significance="normal">
            <primary sortas="b-lscpu">lscpu</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lsipc">
        <term><command moreinfo="none">lsipc</command></term>
        <listitem>
          <para>Prints information on IPC facilities currently employed
          in the system</para>
          <indexterm zone="ch-system-util-linux lsipc" significance="normal">
            <primary sortas="b-lsipc">lsipc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lslocks">
        <term><command moreinfo="none">lslocks</command></term>
        <listitem>
          <para>Lists local system locks</para>
          <indexterm zone="ch-system-util-linux lslocks" significance="normal">
            <primary sortas="b-lslocks">lslocks</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lslogins">
        <term><command moreinfo="none">lslogins</command></term>
        <listitem>
          <para>Lists information about users, groups and system accounts</para>
          <indexterm zone="ch-system-util-linux lslogins" significance="normal">
            <primary sortas="b-lslogins">lslogins</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lsmem">
        <term><command moreinfo="none">lsmem</command></term>
        <listitem>
          <para>Lists the ranges of available memory with their online
          status</para>
          <indexterm zone="ch-system-util-linux lsmem" significance="normal">
            <primary sortas="b-lsmem">lsmem</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lsns">
        <term><command moreinfo="none">lsns</command></term>
        <listitem>
          <para>Lists namespaces</para>
          <indexterm zone="ch-system-util-linux lsns" significance="normal">
            <primary sortas="b-lsns">lsns</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mcookie">
        <term><command moreinfo="none">mcookie</command></term>
        <listitem>
          <para>Generates magic cookies (128-bit random hexadecimal numbers) for
          <command moreinfo="none">xauth</command></para>
          <indexterm zone="ch-system-util-linux mcookie" significance="normal">
            <primary sortas="b-mcookie">mcookie</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mesg">
        <term><command moreinfo="none">mesg</command></term>
        <listitem>
          <para>Controls whether other users can send messages to the current 
          user's terminal</para>
          <indexterm zone="ch-system-util-linux mesg" significance="normal">
            <primary sortas="b-mesg">mesg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mkfs">
        <term><command moreinfo="none">mkfs</command></term>
        <listitem>
          <para>Builds a file system on a device (usually a hard disk
          partition)</para>
          <indexterm zone="ch-system-util-linux mkfs" significance="normal">
            <primary sortas="b-mkfs">mkfs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mkfs.bfs">
        <term><command moreinfo="none">mkfs.bfs</command></term>
        <listitem>
          <para>Creates a Santa Cruz Operations (SCO) bfs file system</para>
          <indexterm zone="ch-system-util-linux mkfs.bfs" significance="normal">
            <primary sortas="b-mkfs.bfs">mkfs.bfs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mkfs.cramfs">
        <term><command moreinfo="none">mkfs.cramfs</command></term>
        <listitem>
          <para>Creates a cramfs file system</para>
          <indexterm zone="ch-system-util-linux mkfs.cramfs" significance="normal">
            <primary sortas="b-mkfs.cramfs">mkfs.cramfs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mkfs.minix">
        <term><command moreinfo="none">mkfs.minix</command></term>
        <listitem>
          <para>Creates a Minix file system</para>
          <indexterm zone="ch-system-util-linux mkfs.minix" significance="normal">
            <primary sortas="b-mkfs.minix">mkfs.minix</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mkswap">
        <term><command moreinfo="none">mkswap</command></term>
        <listitem>
          <para>Initializes the given device or file to be used as a swap
          area</para>
          <indexterm zone="ch-system-util-linux mkswap" significance="normal">
            <primary sortas="b-mkswap">mkswap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="more">
        <term><command moreinfo="none">more</command></term>
        <listitem>
          <para>A filter for paging through text one screen at a time</para>
          <indexterm zone="ch-system-util-linux more" significance="normal">
            <primary sortas="b-more">more</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mount">
        <term><command moreinfo="none">mount</command></term>
        <listitem>
          <para>Attaches the file system on the given device to a specified
          directory in the file-system tree</para>
          <indexterm zone="ch-system-util-linux mount" significance="normal">
            <primary sortas="b-mount">mount</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mountpoint">
        <term><command moreinfo="none">mountpoint</command></term>
        <listitem>
          <para>Checks if the directory is a mountpoint</para>
          <indexterm zone="ch-system-util-linux mountpoint" significance="normal">
            <primary sortas="b-mountpoint">mountpoint</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="namei">
        <term><command moreinfo="none">namei</command></term>
        <listitem>
          <para>Shows the symbolic links in the given pathnames</para>
          <indexterm zone="ch-system-util-linux namei" significance="normal">
            <primary sortas="b-namei">namei</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nsenter">
        <term><command moreinfo="none">nsenter</command></term>
        <listitem>
          <para>Runs a program with namespaces of other processes</para>
          <indexterm zone="ch-system-util-linux nsenter" significance="normal">
            <primary sortas="b-nsenter">nsenter</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="partx">
        <term><command moreinfo="none">partx</command></term>
        <listitem>
          <para>Tells the kernel about the presence and numbering of on-disk
          partitions</para>
          <indexterm zone="ch-system-util-linux partx" significance="normal">
            <primary sortas="b-partx">partx</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pivot_root">
        <term><command moreinfo="none">pivot_root</command></term>
        <listitem>
          <para>Makes the given file system the new root file system of the
          current process</para>
          <indexterm zone="ch-system-util-linux pivot_root" significance="normal">
            <primary sortas="b-pivot_root">pivot_root</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="prlimit">
        <term><command moreinfo="none">prlimit</command></term>
        <listitem>
          <para>Get and set a process' resource limits</para>
          <indexterm zone="ch-system-util-linux prlimit" significance="normal">
            <primary sortas="b-prlimit">prlimit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="raw">
        <term><command moreinfo="none">raw</command></term>
        <listitem>
          <para>Bind a Linux raw character device to a block device</para>
          <indexterm zone="ch-system-util-linux raw" significance="normal">
            <primary sortas="b-raw">raw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="readprofile">
        <term><command moreinfo="none">readprofile</command></term>
        <listitem>
          <para>Reads kernel profiling information</para>
          <indexterm zone="ch-system-util-linux readprofile" significance="normal">
            <primary sortas="b-readprofile">readprofile</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rename">
        <term><command moreinfo="none">rename</command></term>
        <listitem>
          <para>Renames the given files, replacing a given string with
          another</para>
          <indexterm zone="ch-system-util-linux rename" significance="normal">
            <primary sortas="b-rename">rename</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="renice">
        <term><command moreinfo="none">renice</command></term>
        <listitem>
          <para>Alters the priority of running processes</para>
          <indexterm zone="ch-system-util-linux renice" significance="normal">
            <primary sortas="b-renice">renice</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="resizepart">
        <term><command moreinfo="none">resizepart</command></term>
        <listitem>
          <para>Asks the Linux kernel to resize a partition</para>
          <indexterm zone="ch-system-util-linux resizepart" significance="normal">
            <primary sortas="b-resizepart">resizepart</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rev">
        <term><command moreinfo="none">rev</command></term>
        <listitem>
          <para>Reverses the lines of a given file</para>
          <indexterm zone="ch-system-util-linux rev" significance="normal">
            <primary sortas="b-rev">rev</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rkfill">
        <term><command moreinfo="none">rkfill</command></term>
        <listitem>
          <para>Tool for enabling and disabling wireless devices</para>
          <indexterm zone="ch-system-util-linux rkfill" significance="normal">
            <primary sortas="b-rkfill">rkfill</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rtcwake">
        <term><command moreinfo="none">rtcwake</command></term>
        <listitem>
          <para>Used to enter a system sleep state until specified wakeup
          time</para>
          <indexterm zone="ch-system-util-linux rtcwake" significance="normal">
            <primary sortas="b-rtcwake">rtcwake</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="script">
        <term><command moreinfo="none">script</command></term>
        <listitem>
          <para>Makes a typescript of a terminal session</para>
          <indexterm zone="ch-system-util-linux script" significance="normal">
            <primary sortas="b-script">script</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="scriptreplay">
        <term><command moreinfo="none">scriptreplay</command></term>
        <listitem>
          <para>Plays back typescripts using timing information</para>
          <indexterm zone="ch-system-util-linux scriptreplay" significance="normal">
            <primary sortas="b-scriptreplay">scriptreplay</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setarch">
        <term><command moreinfo="none">setarch</command></term>
        <listitem>
          <para>Changes reported architecture in a new program environment and
          sets personality flags</para>
          <indexterm zone="ch-system-util-linux setarch" significance="normal">
            <primary sortas="b-setarch">setarch</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setsid">
        <term><command moreinfo="none">setsid</command></term>
        <listitem>
          <para>Runs the given program in a new session</para>
          <indexterm zone="ch-system-util-linux setsid" significance="normal">
            <primary sortas="b-setsid">setsid</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setterm">
        <term><command moreinfo="none">setterm</command></term>
        <listitem>
          <para>Sets terminal attributes</para>
          <indexterm zone="ch-system-util-linux setterm" significance="normal">
            <primary sortas="b-setterm">setterm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sfdisk">
        <term><command moreinfo="none">sfdisk</command></term>
        <listitem>
          <para>A disk partition table manipulator</para>
          <indexterm zone="ch-system-util-linux sfdisk" significance="normal">
            <primary sortas="b-sfdisk">sfdisk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sulogin">
        <term><command moreinfo="none">sulogin</command></term>
        <listitem>
          <para>Allows <systemitem class="username" moreinfo="none">root</systemitem> to log in;
          it is normally invoked by <command moreinfo="none">init</command> when the system goes
          into single user mode</para>
          <indexterm zone="ch-system-util-linux sulogin" significance="normal">
            <primary sortas="b-sulogin">sulogin</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="swaplabel">
        <term><command moreinfo="none">swaplabel</command></term>
        <listitem>
          <para>Allows to change swaparea UUID and label</para>
          <indexterm zone="ch-system-util-linux swaplabel" significance="normal">
            <primary sortas="b-swaplabel">swaplabel</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="swapoff">
        <term><command moreinfo="none">swapoff</command></term>
        <listitem>
          <para>Disables devices and files for paging and swapping</para>
          <indexterm zone="ch-system-util-linux swapoff" significance="normal">
            <primary sortas="b-swapoff">swapoff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="swapon">
        <term><command moreinfo="none">swapon</command></term>
        <listitem>
          <para>Enables devices and files for paging and swapping and
          lists the devices and files currently in use</para>
          <indexterm zone="ch-system-util-linux swapon" significance="normal">
            <primary sortas="b-swapon">swapon</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="switch_root">
        <term><command moreinfo="none">switch_root</command></term>
        <listitem>
          <para>Switches to another filesystem as the root of the mount tree</para>
          <indexterm zone="ch-system-util-linux switch_root" significance="normal">
            <primary sortas="b-switch_root">switch_root</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tailf">
        <term><command moreinfo="none">tailf</command></term>
        <listitem>
          <para>Tracks the growth of a log file; displays the last 10 lines
          of a log file, then continues displaying any new entries in the
          log file as they are created</para>
          <indexterm zone="ch-system-util-linux tailf" significance="normal">
            <primary sortas="b-tailf">tailf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="taskset">
        <term><command moreinfo="none">taskset</command></term>
        <listitem>
          <para>Retrieves or sets a process' CPU affinity</para>
          <indexterm zone="ch-system-util-linux taskset" significance="normal">
            <primary sortas="b-taskset">taskset</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ul">
        <term><command moreinfo="none">ul</command></term>
        <listitem>
          <para>A filter for translating underscores into escape sequences
          indicating underlining for the terminal in use</para>
          <indexterm zone="ch-system-util-linux ul" significance="normal">
            <primary sortas="b-ul">ul</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="umount">
        <term><command moreinfo="none">umount</command></term>
        <listitem>
          <para>Disconnects a file system from the system's file tree</para>
          <indexterm zone="ch-system-util-linux umount" significance="normal">
            <primary sortas="b-umount">umount</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="uname26">
        <term><command moreinfo="none">uname26</command></term>
        <listitem>
          <para>A symbolic link to setarch</para>
          <indexterm zone="ch-system-util-linux uname26" significance="normal">
            <primary sortas="b-uname26">uname26</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="unshare">
        <term><command moreinfo="none">unshare</command></term>
        <listitem>
          <para>Runs a program with some namespaces unshared from parent</para>
          <indexterm zone="ch-system-util-linux unshare" significance="normal">
            <primary sortas="b-unshare">unshare</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="utmpdump">
        <term><command moreinfo="none">utmpdump</command></term>
        <listitem>
          <para>Displays the content of the given login file in a more
          user-friendly format</para>
          <indexterm zone="ch-system-util-linux utmpdump" significance="normal">
            <primary sortas="b-utmpdump">utmpdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="uuidd">
        <term><command moreinfo="none">uuidd</command></term>
        <listitem>
          <para>A daemon used by the UUID library to generate time-based
          UUIDs in a secure and guaranteed-unique fashion</para>
          <indexterm zone="ch-system-util-linux uuidd" significance="normal">
            <primary sortas="b-uuidd">uuidd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="uuidgen">
        <term><command moreinfo="none">uuidgen</command></term>
        <listitem>
          <para>Creates new UUIDs. Each new UUID can reasonably be considered
          unique among all UUIDs created, on the local system and on other
          systems, in the past and in the future</para>
          <indexterm zone="ch-system-util-linux uuidgen" significance="normal">
            <primary sortas="b-uuidgen">uuidgen</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="uuidparse">
        <term><command moreinfo="none">uuidparse</command></term>
        <listitem>
          <para>An utility to parse unique identifiers</para>
          <indexterm zone="ch-system-util-linux uuidparse" significance="normal">
            <primary sortas="b-uuidparse">uuidparse</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="wall">
        <term><command moreinfo="none">wall</command></term>
        <listitem>
          <para>Displays the contents of a file or, by default, its standard
          input, on the terminals of all currently logged in users</para>
          <indexterm zone="ch-system-util-linux wall" significance="normal">
            <primary sortas="b-wall">wall</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="wdctl">
        <term><command moreinfo="none">wdctl</command></term>
        <listitem>
          <para>Shows hardware watchdog status</para>
          <indexterm zone="ch-system-util-linux wdctl" significance="normal">
            <primary sortas="b-wdctl">wdctl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="whereis">
        <term><command moreinfo="none">whereis</command></term>
        <listitem>
          <para>Reports the location of the binary, source, and man page
          for the given command</para>
          <indexterm zone="ch-system-util-linux whereis" significance="normal">
            <primary sortas="b-whereis">whereis</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="wipefs">
        <term><command moreinfo="none">wipefs</command></term>
        <listitem>
          <para>Wipes a filesystem signature from a device</para>
          <indexterm zone="ch-system-util-linux wipefs" significance="normal">
            <primary sortas="b-wipefs">wipefs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="x86_64">
        <term><command moreinfo="none">x86_64</command></term>
        <listitem>
          <para>A symbolic link to setarch</para>
          <indexterm zone="ch-system-util-linux x86_64" significance="normal">
            <primary sortas="b-x86_64">x86_64</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zramctl">
        <term><command moreinfo="none">zramctl</command></term>
        <listitem>
          <para>A program to set up and control zram (compressed ram disk) 
          devices</para>
          <indexterm zone="ch-system-util-linux zramctl" significance="normal">
            <primary sortas="b-zramctl">zramctl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libblkid">
        <term><filename class="libraryfile" moreinfo="none">libblkid</filename></term>
        <listitem>
          <para>Contains routines for device identification and token
          extraction</para>
          <indexterm zone="ch-system-util-linux libblkid" significance="normal">
            <primary sortas="c-libblkid">libblkid</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libfdisk">
        <term><filename class="libraryfile" moreinfo="none">libfdisk</filename></term>
        <listitem>
          <para>Contains routines for manipulating partition tables</para>
          <indexterm zone="ch-system-util-linux libfdisk" significance="normal">
            <primary sortas="c-libfdisk">libfdisk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmount">
        <term><filename class="libraryfile" moreinfo="none">libmount</filename></term>
        <listitem>
          <para>Contains routines for block device mounting and
          unmounting</para>
          <indexterm zone="ch-system-util-linux libmount" significance="normal">
            <primary sortas="c-libmount">libmount</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libsmartcols">
        <term><filename class="libraryfile" moreinfo="none">libsmartcols</filename></term>
        <listitem>
          <para>Contains routines for aiding screen output in tabular form</para>
          <indexterm zone="ch-system-util-linux libsmartcols" significance="normal">
            <primary sortas="c-libsmartcols">libsmartcols</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libuuid">
        <term><filename class="libraryfile" moreinfo="none">libuuid</filename></term>
        <listitem>
          <para>Contains routines for generating unique identifiers for objects
          that may be accessible beyond the local system</para>
          <indexterm zone="ch-system-util-linux libuuid" significance="normal">
            <primary sortas="c-libuuid">libuuid</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

  <!-- Both sysv and systemd builds -->
  <sect1 id="ch-system-e2fsprogs" role="wrap">
  <?dbhtml filename="e2fsprogs.html"?>

  <sect1info condition="script">
    <productname class="trade">e2fsprogs</productname>
    <productnumber>1.46.4</productnumber>
    <address format="linespecific">https://downloads.sourceforge.net/project/e2fsprogs/e2fsprogs/v1.46.4/e2fsprogs-1.46.4.tar.gz</address>
  </sect1info>

  <title>E2fsprogs-1.46.4</title>

  <indexterm zone="ch-system-e2fsprogs" significance="normal">
    <primary sortas="a-E2fsprogs">E2fsprogs</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The e2fsprogs package contains the utilities for handling the
    <systemitem class="filesystem" moreinfo="none">ext2</systemitem> file system. It also
    supports the <systemitem class="filesystem" moreinfo="none">ext3</systemitem> and
    <systemitem class="filesystem" moreinfo="none">ext4</systemitem> journaling
    file systems.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>4.4 SBU on a spinning disk, 1.5 SBU on an SSD</seg>
        <seg>93 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of E2fsprogs</title>

    <para>The e2fsprogs documentation recommends that the package be built in
    a subdirectory of the source tree: </para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare e2fsprogs for compilation:</para>

<screen format="linespecific"><userinput remap="configure" moreinfo="none">../configure --prefix=/usr           \
             --sysconfdir=/etc       \
             --enable-elf-shlibs     \
             --disable-libblkid      \
             --disable-libuuid       \
             --disable-uuidd         \
             --disable-fsck</userinput></screen>

    <variablelist>
      <title>The meaning of the configure options:</title>

      <varlistentry>
        <term><parameter moreinfo="none">--enable-elf-shlibs</parameter></term>
        <listitem>
          <para>This creates the shared libraries which some programs
          in this package use.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">--disable-*</parameter></term>
        <listitem>
          <para>This prevents e2fsprogs from building and installing the
          <systemitem class="library" moreinfo="none">libuuid</systemitem> and
          <systemitem class="library" moreinfo="none">libblkid</systemitem> libraries, the
          <systemitem class="daemon" moreinfo="none">uuidd</systemitem> daemon, and the
          <command moreinfo="none">fsck</command> wrapper, as util-linux installs more
          recent versions.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>To run the tests, issue:</para>

<screen format="linespecific"><userinput remap="test" moreinfo="none">make check</userinput></screen>

    <para>One test, u_direct_io, is known to fail on some systems.</para>

<!-- This is a ridiculous amount now! And is it still true?
     Does not appear to be true for version 1.46.3.  Time with tests
     26 seconds with tests (With lots of cores and ram and an ssd disk).

    <para>One of the e2fsprogs tests will attempt to allocate 256 MB of memory.
    If you do not have significantly more RAM than this, be sure to enable
    sufficient swap space for the test. See <xref
    linkend="ch-partitioning-creatingfilesystem"/> and <xref
    linkend="ch-partitioning-mounting"/>
    for details on creating and enabling swap space.</para>

    <para>On a spinning disk, the tests take a little more than 4 SBUs. They
    can be much shorter on an SSD (down to about 1.5 SBUs).</para>
-->
    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

    <para>Remove useless static libraries:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">rm -fv /usr/lib/{libcom_err,libe2p,libext2fs,libss}.a</userinput></screen>

    <para>This package installs a gzipped
    <filename class="extension" moreinfo="none">.info</filename> file but doesn't update the
    system-wide <filename moreinfo="none">dir</filename> file. Unzip this file and then update
    the system <filename moreinfo="none">dir</filename> file using the following
    commands:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">gunzip -v /usr/share/info/libext2fs.info.gz
install-info --dir-file=/usr/share/info/dir /usr/share/info/libext2fs.info</userinput></screen>

    <para>If desired, create and install some additional documentation by
    issuing the following commands:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">makeinfo -o      doc/com_err.info ../lib/et/com_err.texinfo
install -v -m644 doc/com_err.info /usr/share/info
install-info --dir-file=/usr/share/info/dir /usr/share/info/com_err.info</userinput></screen>
  </sect2>

  <sect2 id="contents-e2fsprogs" role="content">
    <title>Contents of E2fsprogs</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>badblocks, chattr, compile_et, debugfs, dumpe2fs, e2freefrag,
        e2fsck, e2image, e2label, e2mmpstatus, e2scrub, e2scrub_all, e2undo,
        e4crypt, e4defrag, filefrag, fsck.ext2,
        fsck.ext3, fsck.ext4, logsave, lsattr, mk_cmds, mke2fs,
        mkfs.ext2, mkfs.ext3, mkfs.ext4, mklost+found,
        resize2fs, and tune2fs</seg>
        <seg>libcom_err.so, libe2p.so, libext2fs.so, and libss.so</seg>
        <seg>/usr/include/e2p, /usr/include/et, /usr/include/ext2fs,
        /usr/include/ss, /usr/lib/e2fsprogs, /usr/share/et, and
        /usr/share/ss</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="badblocks">
        <term><command moreinfo="none">badblocks</command></term>
        <listitem>
          <para>Searches a device (usually a disk partition) for bad
          blocks</para>
          <indexterm zone="ch-system-e2fsprogs badblocks" significance="normal">
            <primary sortas="b-badblocks">badblocks</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="chattr">
        <term><command moreinfo="none">chattr</command></term>
        <listitem>
          <para>Changes the attributes of files on an <systemitem class="filesystem" moreinfo="none">ext2</systemitem> file system; it also
          changes <systemitem class="filesystem" moreinfo="none">ext3</systemitem>
          file systems, the journaling version of <systemitem class="filesystem" moreinfo="none">ext2</systemitem> file systems</para>
          <indexterm zone="ch-system-e2fsprogs chattr" significance="normal">
            <primary sortas="b-chattr">chattr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="compile_et">
        <term><command moreinfo="none">compile_et</command></term>
        <listitem>
          <para>An error table compiler; it converts a table of error-code
          names and messages into a C source file suitable for use with the
          <filename class="libraryfile" moreinfo="none">com_err</filename> library</para>
          <indexterm zone="ch-system-e2fsprogs compile_et" significance="normal">
            <primary sortas="b-compile_et">compile_et</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="debugfs">
        <term><command moreinfo="none">debugfs</command></term>
        <listitem>
          <para>A file system debugger; it can be used to examine and change
          the state of an <systemitem class="filesystem" moreinfo="none">ext2</systemitem>
          file system</para>
          <indexterm zone="ch-system-e2fsprogs debugfs" significance="normal">
            <primary sortas="b-debugfs">debugfs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dumpe2fs">
        <term><command moreinfo="none">dumpe2fs</command></term>
        <listitem>
          <para>Prints the super block and blocks group information for the
          file system present on a given device</para>
          <indexterm zone="ch-system-e2fsprogs dumpe2fs" significance="normal">
            <primary sortas="b-dumpe2fs">dumpe2fs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="e2freefrag">
        <term><command moreinfo="none">e2freefrag</command></term>
        <listitem>
          <para>Reports free space fragmentation information</para>
          <indexterm zone="ch-system-e2fsprogs e2freefrag" significance="normal">
            <primary sortas="b-e2freefrag">e2freefrag</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="e2fsck">
        <term><command moreinfo="none">e2fsck</command></term>
        <listitem>
          <para>Is used to check, and optionally repair <systemitem class="filesystem" moreinfo="none">ext2</systemitem> file systems and <systemitem class="filesystem" moreinfo="none">ext3</systemitem> file systems</para>
          <indexterm zone="ch-system-e2fsprogs e2fsck" significance="normal">
            <primary sortas="b-e2fsck">e2fsck</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="e2image">
        <term><command moreinfo="none">e2image</command></term>
        <listitem>
          <para>Is used to save critical <systemitem class="filesystem" moreinfo="none">ext2</systemitem> file system data to a file</para>
          <indexterm zone="ch-system-e2fsprogs e2image" significance="normal">
            <primary sortas="b-e2image">e2image</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="e2label">
        <term><command moreinfo="none">e2label</command></term>
        <listitem>
          <para>Displays or changes the file system label on the <systemitem class="filesystem" moreinfo="none">ext2</systemitem> file system present on a given
          device</para>
          <indexterm zone="ch-system-e2fsprogs e2label" significance="normal">
            <primary sortas="b-e2label">e2label</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="e2mmpstatus">
        <term><command moreinfo="none">e2mmpstatus</command></term>
        <listitem>
          <para>Checks MMP status of an ext4 filesystem</para>
          <indexterm zone="ch-system-e2fsprogs e2mmpstatus" significance="normal">
            <primary sortas="b-e2mmpstatus">e2mmpstatus</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="e2scrub">
        <term><command moreinfo="none">e2scrub</command></term>
        <listitem>
          <para>Checks the contents of a mounted ext[234] filesystem</para>
          <indexterm zone="ch-system-e2fsprogs e2scrub" significance="normal">
            <primary sortas="b-e2scrub">e2scrub</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="e2scrub_all">
        <term><command moreinfo="none">e2scrub_all</command></term>
        <listitem>
          <para>Checks all mounted ext[234] filesystems for errors</para>
          <indexterm zone="ch-system-e2fsprogs e2scrub_all" significance="normal">
            <primary sortas="b-e2scrub_all">e2scrub_all</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="e2undo">
        <term><command moreinfo="none">e2undo</command></term>
        <listitem>
          <para>Replays the undo log undo_log for an ext2/ext3/ext4 filesystem
          found on a device [This can be used to undo a failed operation by an
          e2fsprogs program.]</para>
          <indexterm zone="ch-system-e2fsprogs e2undo" significance="normal">
            <primary sortas="b-e2undo">e2undo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="e4crypt">
        <term><command moreinfo="none">e4crypt</command></term>
        <listitem>
          <para>Ext4 filesystem encryption utility</para>
          <indexterm zone="ch-system-e2fsprogs e4crypt" significance="normal">
            <primary sortas="b-e4crypt">e4crypt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="e4defrag">
        <term><command moreinfo="none">e4defrag</command></term>
        <listitem>
          <para>Online defragmenter for ext4 filesystems</para>
          <indexterm zone="ch-system-e2fsprogs e4defrag" significance="normal">
            <primary sortas="b-e4defrag">e4defrag</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="filefrag">
        <term><command moreinfo="none">filefrag</command></term>
        <listitem>
          <para>Reports on how badly fragmented a particular file might be</para>
          <indexterm zone="ch-system-e2fsprogs filefrag" significance="normal">
            <primary sortas="b-filefrag">filefrag</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fsck.ext2">
        <term><command moreinfo="none">fsck.ext2</command></term>
        <listitem>
          <para>By default checks <systemitem class="filesystem" moreinfo="none">ext2</systemitem>
          file systems and is a hard link to <command moreinfo="none">e2fsck</command></para>
          <indexterm zone="ch-system-e2fsprogs fsck.ext2" significance="normal">
            <primary sortas="b-fsck.ext2">fsck.ext2</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fsck.ext3">
        <term><command moreinfo="none">fsck.ext3</command></term>
        <listitem>
          <para>By default checks <systemitem class="filesystem" moreinfo="none">ext3</systemitem>
          file systems and is a hard link to <command moreinfo="none">e2fsck</command></para>
          <indexterm zone="ch-system-e2fsprogs fsck.ext3" significance="normal">
            <primary sortas="b-fsck.ext3">fsck.ext3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fsck.ext4">
        <term><command moreinfo="none">fsck.ext4</command></term>
        <listitem>
          <para>By default checks <systemitem class="filesystem" moreinfo="none">ext4</systemitem>
          file systems and is a hard link to <command moreinfo="none">e2fsck</command></para>
          <indexterm zone="ch-system-e2fsprogs fsck.ext4" significance="normal">
            <primary sortas="b-fsck.ext4">fsck.ext4</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="logsave">
        <term><command moreinfo="none">logsave</command></term>
        <listitem>
          <para>Saves the output of a command in a log file</para>
          <indexterm zone="ch-system-e2fsprogs logsave" significance="normal">
            <primary sortas="b-logsave">logsave</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lsattr">
        <term><command moreinfo="none">lsattr</command></term>
        <listitem>
          <para>Lists the attributes of files on a second extended file
          system</para>
          <indexterm zone="ch-system-e2fsprogs lsattr" significance="normal">
            <primary sortas="b-lsattr">lsattr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mk_cmds">
        <term><command moreinfo="none">mk_cmds</command></term>
        <listitem>
          <para>Converts a table of command names and help messages into a C
          source file suitable for use with the <filename class="libraryfile" moreinfo="none">libss</filename> subsystem library</para>
          <indexterm zone="ch-system-e2fsprogs mk_cmds" significance="normal">
            <primary sortas="b-mk_cmds">mk_cmds</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mke2fs">
        <term><command moreinfo="none">mke2fs</command></term>
        <listitem>
          <para>Creates an <systemitem class="filesystem" moreinfo="none">ext2</systemitem>
          or <systemitem class="filesystem" moreinfo="none">ext3</systemitem> file system on
          the given device</para>
          <indexterm zone="ch-system-e2fsprogs mke2fs" significance="normal">
            <primary sortas="b-mke2fs">mke2fs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mkfs.ext2">
        <term><command moreinfo="none">mkfs.ext2</command></term>
        <listitem>
          <para>By default creates <systemitem class="filesystem" moreinfo="none">ext2</systemitem>
          file systems and is a hard link to <command moreinfo="none">mke2fs</command></para>
          <indexterm zone="ch-system-e2fsprogs mkfs.ext2" significance="normal">
            <primary sortas="b-mkfs.ext2">mkfs.ext2</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mkfs.ext3">
        <term><command moreinfo="none">mkfs.ext3</command></term>
        <listitem>
          <para>By default creates <systemitem class="filesystem" moreinfo="none">ext3</systemitem>
          file systems and is a hard link to <command moreinfo="none">mke2fs</command></para>
          <indexterm zone="ch-system-e2fsprogs mkfs.ext3" significance="normal">
            <primary sortas="b-mkfs.ext3">mkfs.ext3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mkfs.ext4">
        <term><command moreinfo="none">mkfs.ext4</command></term>
        <listitem>
          <para>By default creates <systemitem class="filesystem" moreinfo="none">ext4</systemitem>
          file systems and is a hard link to <command moreinfo="none">mke2fs</command></para>
          <indexterm zone="ch-system-e2fsprogs mkfs.ext4" significance="normal">
            <primary sortas="b-mkfs.ext4">mkfs.ext4</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mklost-found">
        <term><command moreinfo="none">mklost+found</command></term>
        <listitem>
          <para>Used to create a <filename class="directory" moreinfo="none">lost+found</filename>
          directory on an <systemitem class="filesystem" moreinfo="none">ext2</systemitem> file
          system; it pre-allocates disk blocks to this directory to lighten the
          task of <command moreinfo="none">e2fsck</command></para>
          <indexterm zone="ch-system-e2fsprogs mklost-found" significance="normal">
            <primary sortas="b-mklost+found">mklost+found</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="resize2fs">
        <term><command moreinfo="none">resize2fs</command></term>
        <listitem>
          <para>Can be used to enlarge or shrink an <systemitem class="filesystem" moreinfo="none">ext2</systemitem> file system</para>
          <indexterm zone="ch-system-e2fsprogs resize2fs" significance="normal">
            <primary sortas="b-resize2fs">resize2fs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tune2fs">
        <term><command moreinfo="none">tune2fs</command></term>
        <listitem>
          <para>Adjusts tunable file system parameters on an <systemitem class="filesystem" moreinfo="none">ext2</systemitem> file system</para>
          <indexterm zone="ch-system-e2fsprogs tune2fs" significance="normal">
            <primary sortas="b-tune2fs">tune2fs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcom_err">
        <term><filename class="libraryfile" moreinfo="none">libcom_err</filename></term>
        <listitem>
          <para>The common error display routine</para>
          <indexterm zone="ch-system-e2fsprogs libcom_err" significance="normal">
            <primary sortas="c-libcom_err">libcom_err</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libe2p">
        <term><filename class="libraryfile" moreinfo="none">libe2p</filename></term>
        <listitem>
          <para>Used by <command moreinfo="none">dumpe2fs</command>, <command moreinfo="none">chattr</command>,
          and <command moreinfo="none">lsattr</command></para>
          <indexterm zone="ch-system-e2fsprogs libe2p" significance="normal">
            <primary sortas="c-libe2p">libe2p</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libext2fs">
        <term><filename class="libraryfile" moreinfo="none">libext2fs</filename></term>
        <listitem>
          <para>Contains routines to enable user-level programs to manipulate an
          <systemitem class="filesystem" moreinfo="none">ext2</systemitem> file system</para>
          <indexterm zone="ch-system-e2fsprogs libext2fs" significance="normal">
            <primary sortas="c-libext2fs">libext2fs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libss">
        <term><filename class="libraryfile" moreinfo="none">libss</filename></term>
        <listitem>
          <para>Used by <command moreinfo="none">debugfs</command></para>
          <indexterm zone="ch-system-e2fsprogs libss" significance="normal">
            <primary sortas="c-libss">libss</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

  <!-- sysv only -->
  <sect1 id="ch-system-sysklogd" role="wrap" revision="sysv">
  <?dbhtml filename="sysklogd.html"?>

  <sect1info condition="script">
    <productname class="trade">sysklogd</productname>
    <productnumber>1.5.1</productnumber>
    <address format="linespecific">https://www.infodrom.org/projects/sysklogd/download/sysklogd-1.5.1.tar.gz</address>
  </sect1info>

  <title>Sysklogd-1.5.1</title>

  <indexterm zone="ch-system-sysklogd" significance="normal">
    <primary sortas="a-Sysklogd">Sysklogd</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The sysklogd package contains programs for logging system messages,
    such as those given by the kernel when unusual things happen.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>0.6 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Sysklogd</title>

    <para>First, fix problems that causes a segmentation fault under
    some conditions in klogd and fix an obsolete program construct:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">sed -i '/Error loading kernel symbols/{n;n;d}' ksym_mod.c
sed -i 's/union wait/int/' syslogd.c</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>This package does not come with a test suite.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make BINDIR=/sbin install</userinput></screen>

  </sect2>

  <sect2 id="conf-sysklogd" role="configuration">
    <title>Configuring Sysklogd</title>

    <indexterm zone="conf-sysklogd" significance="normal">
      <primary sortas="a-Sysklogd">Sysklogd</primary>
      <secondary>configuring</secondary>
    </indexterm>

    <indexterm zone="conf-sysklogd" significance="normal">
      <primary sortas="e-/etc/syslog.conf">/etc/syslog.conf</primary>
    </indexterm>

    <para>Create a new <filename moreinfo="none">/etc/syslog.conf</filename> file by running the
    following:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/syslog.conf &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/syslog.conf

auth,authpriv.* -/var/log/auth.log
*.*;auth,authpriv.none -/var/log/sys.log
daemon.* -/var/log/daemon.log
kern.* -/var/log/kern.log
mail.* -/var/log/mail.log
user.* -/var/log/user.log
*.emerg *

# End /etc/syslog.conf</literal>
EOF</userinput></screen>

  </sect2>

  <sect2 id="contents-sysklogd" role="content">
    <title>Contents of Sysklogd</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>klogd and syslogd</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="klogd">
        <term><command moreinfo="none">klogd</command></term>
        <listitem>
          <para>A system daemon for intercepting and logging kernel messages</para>
          <indexterm zone="ch-system-sysklogd klogd" significance="normal">
            <primary sortas="b-klogd">klogd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="syslogd">
        <term><command moreinfo="none">syslogd</command></term>
        <listitem>
          <para>Logs the messages that system programs offer for logging [Every
          logged message contains at least a date stamp and a hostname, and
          normally the program's name too, but that depends on how trusting the
          logging daemon is told to be.]</para>
          <indexterm zone="ch-system-sysklogd syslogd" significance="normal">
            <primary sortas="b-syslogd">syslogd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-system-sysvinit" role="wrap" revision="sysv">
  <?dbhtml filename="sysvinit.html"?>

  <sect1info condition="script">
    <productname class="trade">sysvinit</productname>
    <productnumber>2.99</productnumber>
    <address format="linespecific">https://download.savannah.gnu.org/releases/sysvinit/sysvinit-2.99.tar.xz</address>
  </sect1info>

  <title>Sysvinit-2.99</title>

  <indexterm zone="ch-system-sysvinit" significance="normal">
    <primary sortas="a-Sysvinit">Sysvinit</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Sysvinit package contains programs for controlling the startup,
    running, and shutdown of the system.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>1.4 MB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Sysvinit</title>

<!--
    <para>When run-levels are changed (for example, when halting the
    system), <command>init</command> sends termination signals to those
    processes that <command>init</command> itself started and that should
    not be running in the new run-level.  While doing this,
    <command>init</command> outputs messages like <quote>Sending processes
    the TERM signal</quote> which seem to imply that it is sending these
    signals to all currently running processes. To avoid this
    misinterpretation, modify the source so that these messages read like
    <quote>Sending processes configured via /etc/inittab the TERM signal</quote>
    instead:</para>

<screen><userinput remap="pre">sed -i 's@Sending processes@&amp; configured via /etc/inittab@g' src/init.c</userinput></screen>

    <para>Maintained versions of the <command>wall</command>,
    <command>mountpoint</command>, <command>last</command>,
    <command>mesg</command>, <command>sulogin</command>, and
    <command>utmpdump</command> programs were installed earlier by Util-linux.
    Suppress the installation of Sysvinit's versions of these programs and
    their man pages:</para>

<screen><userinput remap="make">sed -ri -e '/utmpdump/d'   \
        -e '/mountpoint/d' \
        -e '/mesg/d'       \
        -e 's/= sulogin(\.8)?/=/' src/Makefile</userinput></screen>
-->
    <para>First, apply a patch that removes several programs installed by other
    packages, clarifies a message, and fixes a compiler warning:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">patch -Np1 -i ../sysvinit-2.99-consolidated-1.patch</userinput></screen>

    <para>Compile the package:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>This package does not come with a test suite.</para>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-sysvinit" role="content">
    <title>Contents of Sysvinit</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>bootlogd, fstab-decode, halt, init, killall5, 
        poweroff (link to halt), reboot (link to halt), runlevel,
        shutdown, and telinit (link to init)</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="bootlogd">
        <term><command moreinfo="none">bootlogd</command></term>
        <listitem>
          <para>Logs boot messages to a log file</para>
          <indexterm zone="ch-system-sysvinit bootlogd" significance="normal">
            <primary sortas="b-bootlogd">bootlogd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fstab-decode">
        <term><command moreinfo="none">fstab-decode</command></term>
        <listitem>
          <para>Run a command with fstab-encoded arguments</para>
          <indexterm zone="ch-system-sysvinit fstab-decode" significance="normal">
            <primary sortas="b-fstab-decode">fstab-decode</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="halt-sysv">
        <term><command moreinfo="none">halt</command></term>
        <listitem>
          <para>Normally invokes <command moreinfo="none">shutdown</command> with the
          <parameter moreinfo="none">-h</parameter> option, except when already in run-level 0,
          then it tells the kernel to halt the system; it notes in the
          file <filename moreinfo="none">/var/log/wtmp</filename> that the system is being
          brought down</para>
          <indexterm zone="ch-system-sysvinit halt-sysv" significance="normal">
            <primary sortas="b-halt">halt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="init-sysv">
        <term><command moreinfo="none">init</command></term>
        <listitem>
          <para>The first process to be started when the kernel has initialized
          the hardware which takes over the boot process and starts all the
          proceses specified in its configuration file</para>
          <indexterm zone="ch-system-sysvinit init-sysv" significance="normal">
            <primary sortas="b-init">init</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="killall5">
        <term><command moreinfo="none">killall5</command></term>
        <listitem>
          <para>Sends a signal to all processes, except the processes in its own
          session so it will not kill its parent shell</para>
          <indexterm zone="ch-system-sysvinit killall5" significance="normal">
            <primary sortas="b-killall5">killall5</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="poweroff-sysv">
        <term><command moreinfo="none">poweroff</command></term>
        <listitem>
          <para>Tells the kernel to halt the system and switch off the computer
          (see <command moreinfo="none">halt</command>)</para>
          <indexterm zone="ch-system-sysvinit poweroff-sysv" significance="normal">
            <primary sortas="b-poweroff">poweroff</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="reboot-sysv">
        <term><command moreinfo="none">reboot</command></term>
        <listitem>
          <para>Tells the kernel to reboot the system (see
          <command moreinfo="none">halt</command>)</para>
          <indexterm zone="ch-system-sysvinit reboot-sysv" significance="normal">
            <primary sortas="b-reboot">reboot</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="runlevel-sysv">
        <term><command moreinfo="none">runlevel</command></term>
        <listitem>
          <para>Reports the previous and the current run-level, as noted in the
          last run-level record in <filename moreinfo="none">/run/utmp</filename></para>
          <indexterm zone="ch-system-sysvinit runlevel-sysv" significance="normal">
            <primary sortas="b-runlevel">runlevel</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="shutdown-sysv">
        <term><command moreinfo="none">shutdown</command></term>
        <listitem>
          <para>Brings the system down in a secure way, signaling all processes
          and notifying all logged-in users</para>
          <indexterm zone="ch-system-sysvinit shutdown-sysv" significance="normal">
            <primary sortas="b-shutdown">shutdown</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="telinit-sysv">
        <term><command moreinfo="none">telinit</command></term>
        <listitem>
          <para>Tells <command moreinfo="none">init</command> which run-level to change to</para>
          <indexterm zone="ch-system-sysvinit telinit-sysv" significance="normal">
            <primary sortas="b-telinit">telinit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

  <sect1 id="ch-system-aboutdebug">
  <?dbhtml filename="aboutdebug.html"?>

  <title>About Debugging Symbols</title>

  <para>Most programs and libraries are, by default, compiled with
  debugging symbols included (with <command moreinfo="none">gcc</command>'s
  <parameter moreinfo="none">-g</parameter> option). This means that when debugging a
  program or library that was compiled with debugging information,
  the debugger can provide not only memory addresses, but also
  the names of the routines and variables.</para>

  <para>However, the inclusion of these debugging symbols enlarges a
  program or library significantly. The following is an example of the
  amount of space these symbols occupy:</para>

  <itemizedlist>
    <listitem>
      <para>A <command moreinfo="none">bash</command> binary with debugging symbols:
      1200 KB</para>
    </listitem>
    <listitem>
      <para>A <command moreinfo="none">bash</command> binary without debugging symbols:
      480 KB</para>
    </listitem>
    <listitem>
      <para>Glibc and GCC files (<filename class="directory" moreinfo="none">/lib</filename>
      and <filename class="directory" moreinfo="none">/usr/lib</filename>) with debugging
      symbols: 87 MB</para>
    </listitem>
    <listitem>
      <para>Glibc and GCC files without debugging symbols: 16 MB</para>
    </listitem>
  </itemizedlist>

  <para>Sizes may vary depending on which compiler and C library were used,
  but when comparing programs with and without debugging symbols, the
  difference will usually be a factor between two and five.</para>

  <para>Because most users will never use a debugger on their system software,
  a lot of disk space can be regained by removing these symbols. The next
  section shows how to strip all debugging symbols from the programs and
  libraries.</para>

</sect1>
  <sect1 id="ch-system-stripping">
  <?dbhtml filename="stripping.html"?>

  <title>Stripping</title>

  <para>This section is optional.  If the intended user is not a 
  programmer and does not plan to do
  any debugging on the system software, the system size can be decreased
  by about 2 GB by removing the debugging symbols from binaries and
  libraries. This causes no inconvenience other than not being able to
  debug the software fully anymore.</para>

  <para>Most people who use the commands mentioned below do not
  experience any difficulties. However, it is easy to make a typo and
  render the new system unusable, so before running the
  <command moreinfo="none">strip</command> commands, it is a good idea to make a
  backup of the LFS system in its current state.</para>

  <para>The debugging symbols for selected libraries are placed
  in separate files.  This debugging information is needed if running 
  regression tests that use <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0//general/valgrind.html">valgrind</ulink> or <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0//general/gdb.html">gdb</ulink> later in BLFS.
  </para>

  <para>Note that <command moreinfo="none">strip</command> will overwrite the binary or library
  file it is processing.  This can crash the processes using code or data from
  the file.  If the process running <command moreinfo="none">strip</command> itself is
  affected, the binary or library being stripped can be destroyed and can
  make the system completely unusable.  To avoid it, we'll copy some libraries
  and binaries into <filename class="directory" moreinfo="none">/tmp</filename>, strip them
  there, and install them back with the <command moreinfo="none">install</command> command.
  Read the related entry in <xref linkend="pkgmgmt-upgrade-issues"/> for the
  rationale to use the <command moreinfo="none">install</command> command here.</para>

  <note><para>The ELF loader's name is ld-linux-x86-64.so.2 on 64-bit systems
  and ld-linux.so.2 on 32-bit systems.  The contruct below selects the 
  correct name for the current architecture.</para></note>

<!-- also of interest are libgfortan, libgo, libgomp, and libobjc from GCC -->

<!--<screen><userinput>save_lib="ld-2.25.so libc-2.25.so libpthread-2.25.so libthread_db-1.0.so"-->
      <screen format="linespecific"><userinput moreinfo="none">save_usrlib="$(cd /usr/lib; ls ld-linux*)
             libc.so.6
             libthread_db.so.1
             libquadmath.so.0.0.0 
             libstdc++.so.6.0.29
             libitm.so.1.0.0 
             libatomic.so.1.2.0" 

cd /usr/lib

for LIB in $save_usrlib; do
    objcopy --only-keep-debug $LIB $LIB.dbg
    cp $LIB /tmp/$LIB
    strip --strip-unneeded /tmp/$LIB
    objcopy --add-gnu-debuglink=$LIB.dbg /tmp/$LIB
    install -vm755 /tmp/$LIB /usr/lib
    rm /tmp/$LIB
done

online_usrbin="bash find strip"
online_usrlib="libbfd-2.37.so
               libhistory.so.8.1
               libncursesw.so.6.2
               libm.so.6
               libreadline.so.8.1
               libz.so.1.2.11
               $(cd /usr/lib; find libnss*.so* -type f)"

for BIN in $online_usrbin; do
    cp /usr/bin/$BIN /tmp/$BIN
    strip --strip-unneeded /tmp/$BIN
    install -vm755 /tmp/$BIN /usr/bin
    rm /tmp/$BIN
done

for LIB in $online_usrlib; do
    cp /usr/lib/$LIB /tmp/$LIB
    strip --strip-unneeded /tmp/$LIB
    install -vm755 /tmp/$LIB /usr/lib
    rm /tmp/$LIB
done

for i in $(find /usr/lib -type f -name \*.so* ! -name \*dbg) \
         $(find /usr/lib -type f -name \*.a)                 \
         $(find /usr/{bin,sbin,libexec} -type f); do
    case "$online_usrbin $online_usrlib $save_usrlib" in
        *$(basename $i)* ) 
            ;;
        * ) strip --strip-unneeded $i 
            ;;
    esac
done

unset BIN LIB save_usrlib online_usrbin online_usrlib
</userinput></screen>

  <para>A large number of files will be reported as having their file
  format not recognized. These warnings can be safely ignored. They
  indicate that those files are scripts instead of binaries.</para>

</sect1>
  <sect1 id="ch-system-revisedchroot">
  <?dbhtml filename="revisedchroot.html"?>

  <title>Cleaning Up</title>

  <para>Finally, clean up some extra files left around from running tests:</para>

<screen format="linespecific"><userinput moreinfo="none">rm -rf /tmp/*</userinput></screen>

  <para>Now log out and reenter the chroot environment with an updated
  chroot command.  From now on, use this updated chroot command any time 
  you need to reenter the chroot environment after exiting:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">logout

chroot "$LFS" /usr/bin/env -i          \
    HOME=/root TERM="$TERM"            \
    PS1='(lfs chroot) \u:\w\$ '        \
    PATH=/usr/bin:/usr/sbin            \
    /bin/bash --login</userinput></screen>

  <para>Here the <parameter moreinfo="none">+h</parameter> option is not used anymore, since
  all the previous programs have been replaced: hashing is therefore
  possible.</para>

  <para>If the virtual kernel file systems have been unmounted, either manually
  or through a reboot, ensure that the virtual kernel file systems are mounted
  when reentering the chroot. This process was explained in <xref linkend="ch-tools-bindmount"/> and <xref linkend="ch-tools-kernfsmount"/>.</para>

  <para>There are also several files installed in the /usr/lib and /usr/libexec
  directories with a file name extension of .la. These are "libtool archive"
  files. As already said, they are only useful when linking with static
  libraries. They are unneeded, and potentially harmful, when using dynamic
  shared libraries, specially when using also non-autotools build systems.
  To remove them, run:</para>

<screen format="linespecific"><userinput moreinfo="none">find /usr/lib /usr/libexec -name \*.la -delete</userinput></screen>

   <para>For more information about libtool archive files, see the <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0//introduction/la-files.html">BLFS section "About Libtool
   Archive (.la) files"</ulink>.</para>

   <para>The compiler built in <xref linkend="chapter-temporary-tools"/> and
   <xref linkend="chapter-chroot-temporary-tools"/> is still partially
   installed and not needed anymore. Remove it with:</para>

<screen format="linespecific"><userinput moreinfo="none">find /usr -depth -name $(uname -m)-lfs-linux-gnu\* | xargs rm -rf</userinput></screen>

   <para>Finally, remove the temporary 'tester' user account created at the 
   beginning of the previous chapter.</para>

<screen format="linespecific"><userinput moreinfo="none">userdel -r tester</userinput></screen>
</sect1>

</chapter>
<chapter id="chapter-config" xreflabel="Chapter&#xA0;9" xml:base="chapter09/chapter09.xml">
  <?dbhtml dir="chapter09"?>
  <?dbhtml filename="chapter09.html"?>

  <title>System Configuration</title>

  <!-- sysv -->
  <sect1 id="ch-config-introduction" revision="sysv">
  <?dbhtml filename="introduction.html"?>

  <title>Introduction</title>

    <para>Booting a Linux system involves several tasks.  The process must
    mount both virtual and real file systems, initialize devices, activate swap,
    check file systems for integrity, mount any swap partitions or files, set
    the system clock, bring up networking, start any daemons required by the
    system, and accomplish any other custom tasks needed by the user.  This
    process must be organized to ensure the tasks are performed in the correct
    order but, at the same time, be executed as fast as possible.</para>

  <sect2 id="sysv-desc">
    <title>System V</title>

    <para>System V is the classic boot process that has been used in Unix and
    Unix-like systems such as Linux since about 1983.  It consists of a small
    program, <command moreinfo="none">init</command>, that sets up basic programs such as
    <command moreinfo="none">login</command> (via getty) and runs a script.  This script,
    usually named <command moreinfo="none">rc</command>,  controls the execution of a set of
    additional scripts that perform the tasks required to initialize the
    system.</para>

    <para>The <command moreinfo="none">init</command> program is controlled by the 
    <filename moreinfo="none">/etc/inittab</filename> file and is organized into run levels that
    can be run by the user:</para>

<literallayout format="linespecific" class="normal">0 â halt
1 â Single user mode
2 â Multiuser, without networking
3 â Full multiuser mode
4 â User definable
5 â Full multiuser mode with display manager
6 â reboot</literallayout>

    <para>The usual default run level is 3 or 5.</para>

    <bridgehead renderas="sect3">Advantages</bridgehead>

    <itemizedlist>
      <listitem>
          <para>Established, well understood system.</para>
      </listitem>

      <listitem>
          <para>Easy to customize.</para>
      </listitem>

    </itemizedlist>


    <bridgehead renderas="sect3">Disadvantages</bridgehead>

    <itemizedlist>
      <listitem>
          <para>May be slower to boot.  A medium speed base LFS system 
          takes 8-12 seconds where the boot time is measured from the 
          first kernel message to the login prompt.  Network 
          connectivity is typically established about 2 seconds 
          after the login prompt.</para>
      </listitem>

      <listitem>
          <para>Serial processing of boot tasks. This is related to the previous
          point.  A delay in any process such as a file system check, will
          delay the entire boot process.</para>
      </listitem>

      <listitem>
          <para>Does not directly support advanced features like
          control groups (cgroups), and per-user fair share scheduling.</para>
      </listitem>

      <listitem>
          <para>Adding scripts requires manual, static sequencing decisions.</para>
      </listitem>

    </itemizedlist>

  </sect2>

</sect1>
  <sect1 id="ch-config-bootscripts" role="wrap" revision="sysv">
  <?dbhtml filename="bootscripts.html"?>

  <sect1info condition="script">
    <productname class="trade">bootscripts</productname>
    <productnumber>20210608</productnumber>
    <address format="linespecific">https://www.linuxfromscratch.org/lfs/downloads/11.0/lfs-bootscripts-20210608.tar.xz</address>
  </sect1info>

  <title>LFS-Bootscripts-20210608</title>

  <indexterm zone="ch-config-bootscripts" significance="normal">
    <primary sortas="a-Bootscripts">Bootscripts</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The LFS-Bootscripts package contains a set of scripts to start/stop
    the LFS system at bootup/shutdown.  
    The configuration files and procedures needed to
    customize the boot process are described in the following sections.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>less than 0.1 SBU</seg>
        <seg>440 KB</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of LFS-Bootscripts</title>

    <para>Install the package:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-bootscripts" role="content">
    <title>Contents of LFS-Bootscripts</title>
    <segmentedlist>
      <segtitle>Installed scripts</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>checkfs, cleanfs, console, functions, halt, ifdown,
        ifup, localnet, modules, mountfs, mountvirtfs, network, rc, reboot,
        sendsignals, setclock, ipv4-static, swap, sysctl, sysklogd, template,
        udev, and udev_retry</seg>
        <seg>/etc/rc.d, /etc/init.d (symbolic link), /etc/sysconfig,
        /lib/services, /lib/lsb (symbolic link)</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="checkfs-bootscripts">
        <term><command moreinfo="none">checkfs</command></term>
        <listitem>
          <para>Checks the integrity of the file systems before they are mounted
          (with the exception of journal and network based file systems)</para>
          <indexterm zone="ch-config-bootscripts checkfs-bootscripts" significance="normal">
            <primary sortas="d-checkfs">checkfs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cleanfs-bootscripts">
        <term><command moreinfo="none">cleanfs</command></term>
        <listitem>
          <para>Removes files that should not be preserved between reboots, such
          as those in <filename class="directory" moreinfo="none">/run/</filename> and
          <filename class="directory" moreinfo="none">/var/lock/</filename>; it re-creates
          <filename moreinfo="none">/run/utmp</filename> and removes the possibly present
          <filename moreinfo="none">/etc/nologin</filename>, <filename moreinfo="none">/fastboot</filename>, and
          <filename moreinfo="none">/forcefsck</filename> files</para>
          <indexterm zone="ch-config-bootscripts cleanfs-bootscripts" significance="normal">
            <primary sortas="d-cleanfs">cleanfs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="console-bootscripts">
        <term><command moreinfo="none">console</command></term>
        <listitem>
          <para>Loads the correct keymap table for the desired keyboard layout;
          it also sets the screen font</para>
          <indexterm zone="ch-config-bootscripts console-bootscripts" significance="normal">
            <primary sortas="d-console">console</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="functions-bootscripts">
        <term><command moreinfo="none">functions</command></term>
        <listitem>
          <para>Contains common functions, such as error and status checking,
          that are used by several bootscripts</para>
          <indexterm zone="ch-config-bootscripts functions-bootscripts" significance="normal">
            <primary sortas="d-functions">functions</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="halt-bootscripts">
        <term><command moreinfo="none">halt</command></term>
        <listitem>
          <para>Halts the system</para>
          <indexterm zone="ch-config-bootscripts halt-bootscripts" significance="normal">
            <primary sortas="d-halt">halt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ifdown-bootscripts">
        <term><command moreinfo="none">ifdown</command></term>
        <listitem>
          <para>Stops a network device</para>
          <indexterm zone="ch-config-bootscripts ifdown-bootscripts" significance="normal">
            <primary sortas="d-ifdown">ifdown</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ifup-bootscripts">
        <term><command moreinfo="none">ifup</command></term>
        <listitem>
          <para>Initializes a network device</para>
          <indexterm zone="ch-config-bootscripts ifup-bootscripts" significance="normal">
            <primary sortas="d-ifup">ifup</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="localnet-bootscripts">
        <term><command moreinfo="none">localnet</command></term>
        <listitem>
          <para>Sets up the system's hostname and local loopback device</para>
          <indexterm zone="ch-config-bootscripts localnet-bootscripts" significance="normal">
            <primary sortas="d-localnet">localnet</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="modules-bootscripts">
        <term><command moreinfo="none">modules</command></term>
        <listitem>
          <para>Loads kernel modules listed in
          <filename moreinfo="none">/etc/sysconfig/modules</filename>, using arguments
          that are also given there</para>
          <indexterm zone="ch-config-bootscripts modules-bootscripts" significance="normal">
            <primary sortas="d-modules">modules</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mountfs-bootscripts">
        <term><command moreinfo="none">mountfs</command></term>
        <listitem>
          <para>Mounts all file systems, except ones that are marked
          <emphasis>noauto</emphasis> or are network based</para>
          <indexterm zone="ch-config-bootscripts mountfs-bootscripts" significance="normal">
            <primary sortas="d-mountfs">mountfs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mountvirtfs-bootscripts">
        <term><command moreinfo="none">mountvirtfs</command></term>
        <listitem>
          <para>Mounts virtual kernel file systems, such as <systemitem class="filesystem" moreinfo="none">proc</systemitem></para>
          <indexterm zone="ch-config-bootscripts mountvirtfs-bootscripts" significance="normal">
            <primary sortas="d-mountvirtfs">mountvirtfs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="network-bootscripts">
        <term><command moreinfo="none">network</command></term>
        <listitem>
          <para>Sets up network interfaces, such as network cards, and sets up
          the default gateway (where applicable)</para>
          <indexterm zone="ch-config-bootscripts network-bootscripts" significance="normal">
            <primary sortas="d-network">network</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rc-bootscripts">
        <term><command moreinfo="none">rc</command></term>
        <listitem>
          <para>The master run-level control script; it is responsible for
          running all the other bootscripts one-by-one, in a sequence determined
          by the name of the symbolic links being processed</para>
          <indexterm zone="ch-config-bootscripts rc-bootscripts" significance="normal">
            <primary sortas="d-rc">rc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="reboot-bootscripts">
        <term><command moreinfo="none">reboot</command></term>
        <listitem>
          <para>Reboots the system</para>
          <indexterm zone="ch-config-bootscripts reboot-bootscripts" significance="normal">
            <primary sortas="d-reboot">reboot</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sendsignals-bootscripts">
        <term><command moreinfo="none">sendsignals</command></term>
        <listitem>
          <para>Makes sure every process is terminated before the system reboots
          or halts</para>
          <indexterm zone="ch-config-bootscripts sendsignals-bootscripts" significance="normal">
            <primary sortas="d-sendsignals">sendsignals</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="setclock-bootscripts">
        <term><command moreinfo="none">setclock</command></term>
        <listitem>
          <para>Resets the kernel clock to local time in case the hardware clock
          is not set to UTC time</para>
          <indexterm zone="ch-config-bootscripts setclock-bootscripts" significance="normal">
            <primary sortas="d-setclock">setclock</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ipv4-static-bootscripts">
        <term><command moreinfo="none">ipv4-static</command></term>
        <listitem>
          <para>Provides the functionality needed to assign a static Internet
          Protocol (IP) address to a network interface</para>
          <indexterm zone="ch-config-bootscripts ipv4-static-bootscripts" significance="normal">
            <primary sortas="d-ipv4-static">ipv4-static</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="swap-bootscripts">
        <term><command moreinfo="none">swap</command></term>
        <listitem>
          <para>Enables and disables swap files and partitions</para>
          <indexterm zone="ch-config-bootscripts swap-bootscripts" significance="normal">
            <primary sortas="d-swap">swap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sysctl-bootscripts">
        <term><command moreinfo="none">sysctl</command></term>
        <listitem>
          <para>Loads system configuration values from
          <filename moreinfo="none">/etc/sysctl.conf</filename>, if that file exists,
          into the running kernel</para>
          <indexterm zone="ch-config-bootscripts sysctl-bootscripts" significance="normal">
            <primary sortas="d-sysctl">sysctl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sysklogd-bootscripts">
        <term><command moreinfo="none">sysklogd</command></term>
        <listitem>
          <para>Starts and stops the system and kernel log daemons</para>
          <indexterm zone="ch-config-bootscripts sysklogd-bootscripts" significance="normal">
            <primary sortas="d-sysklogd">sysklogd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="template-bootscripts">
        <term><command moreinfo="none">template</command></term>
        <listitem>
          <para>A template to create custom bootscripts for other
          daemons</para>
          <indexterm zone="ch-config-bootscripts template-bootscripts" significance="normal">
            <primary sortas="d-template">template</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="udev-bootscripts">
        <term><command moreinfo="none">udev</command></term>
        <listitem>
          <para>Prepares the <filename class="directory" moreinfo="none">/dev</filename>
          directory and starts Udev</para>
          <indexterm zone="ch-config-bootscripts udev-bootscripts" significance="normal">
            <primary sortas="d-udev">udev</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="udev-retry-bootscripts">
        <term><command moreinfo="none">udev_retry</command></term>
        <listitem>
          <para>Retries failed udev uevents, and copies generated rules
          files from <filename class="directory" moreinfo="none">/run/udev</filename> to
          <filename class="directory" moreinfo="none">/etc/udev/rules.d</filename> if required</para>
          <indexterm zone="ch-config-bootscripts udev-retry-bootscripts" significance="normal">
            <primary sortas="d-udev-retry">udev_retry</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

  <!-- systemd -->
  
  

  <!-- common -->
  <sect1 id="ch-config-udev">
  <?dbhtml filename="udev.html"?>

  <title>Overview of Device and Module Handling</title>

  <indexterm zone="ch-config-udev" significance="normal">
    <primary sortas="a-Udev">Udev</primary>
    <secondary>usage</secondary>
  </indexterm>

  <para>In <xref linkend="chapter-building-system"/>, we installed the udev
  package when <phrase revision="sysv">eudev</phrase>
   was built. Before we go into the
  details regarding how this works, a brief history of previous methods of
  handling devices is in order.</para>

  <para>Linux systems in general traditionally used a static device creation
  method, whereby a great many device nodes were created under <filename class="directory" moreinfo="none">/dev</filename> (sometimes literally thousands of nodes),
  regardless of whether the corresponding hardware devices actually existed. This
  was typically done via a <command moreinfo="none">MAKEDEV</command> script, which contains a
  number of calls to the <command moreinfo="none">mknod</command> program with the relevant
  major and minor device numbers for every possible device that might exist in
  the world.</para>

  <para>Using the udev method, only those devices which are detected by the
  kernel get device nodes created for them. Because these device nodes will be
  created each time the system boots, they will be stored on a <systemitem class="filesystem" moreinfo="none">devtmpfs</systemitem> file system (a virtual file system
  that resides entirely in system memory). Device nodes do not require much
  space, so the memory that is used is negligible.</para>

  <sect2>
    <title>History</title>

    <para>In February 2000, a new filesystem called <systemitem class="filesystem" moreinfo="none">devfs</systemitem> was merged into the 2.3.46 kernel
    and was made available during the 2.4 series of stable kernels. Although
    it was present in the kernel source itself, this method of creating devices
    dynamically never received overwhelming support from the core kernel
    developers.</para>

    <para>The main problem with the approach adopted by <systemitem class="filesystem" moreinfo="none">devfs</systemitem> was the way it handled device
    detection, creation, and naming. The latter issue, that of device node
    naming, was perhaps the most critical. It is generally accepted that if
    device names are allowed to be configurable, then the device naming policy
    should be up to a system administrator, not imposed on them by any
    particular developer(s). The <systemitem class="filesystem" moreinfo="none">devfs</systemitem> file system also suffered from race
    conditions that were inherent in its design and could not be fixed without a
    substantial revision to the kernel. It was marked as deprecated for a long
    period â due to a lack of maintenance â and was finally removed
    from the kernel in June, 2006.</para>

    <para>With the development of the unstable 2.5 kernel tree, later released
    as the 2.6 series of stable kernels, a new virtual filesystem called
    <systemitem class="filesystem" moreinfo="none">sysfs</systemitem> came to be. The job of
    <systemitem class="filesystem" moreinfo="none">sysfs</systemitem> is to export a view of
    the system's hardware configuration to userspace processes. With this
    userspace-visible representation, the possibility of developing a userspace
    replacement for <systemitem class="filesystem" moreinfo="none">devfs</systemitem> became
    much more realistic.</para>

  </sect2>

  <sect2>
    <title>Udev Implementation</title>

    <sect3>
      <title>Sysfs</title>

      <para>The <systemitem class="filesystem" moreinfo="none">sysfs</systemitem> filesystem
      was mentioned briefly above. One may wonder how <systemitem class="filesystem" moreinfo="none">sysfs</systemitem> knows about the devices present on
      a system and what device numbers should be used for them. Drivers that
      have been compiled into the kernel directly register their objects with a
      <systemitem class="filesystem" moreinfo="none">sysfs</systemitem> (devtmpfs internally)
      as they are detected by the kernel. For drivers compiled as modules, this
      registration will happen when the module is loaded. Once the <systemitem class="filesystem" moreinfo="none">sysfs</systemitem> filesystem is mounted (on /sys),
      data which the drivers register with <systemitem class="filesystem" moreinfo="none">sysfs</systemitem> are available to userspace
      processes and to udevd for processing (including modifications to device
      nodes).</para>

    </sect3>

    <sect3>
      <title>Device Node Creation</title>

      <para>Device files are created by the kernel by the <systemitem class="filesystem" moreinfo="none">devtmpfs</systemitem> filesystem.  Any driver that
      wishes to register a device node will go through the <systemitem class="filesystem" moreinfo="none">devtmpfs</systemitem> (via the driver core) to do it.
      When a <systemitem class="filesystem" moreinfo="none">devtmpfs</systemitem> instance is
      mounted on <filename class="directory" moreinfo="none">/dev</filename>, the device node
      will initially be created with a fixed name, permissions, and
      owner.</para>

      <para>A short time later, the kernel will send a uevent to <command moreinfo="none">
      udevd</command>.  Based on the rules specified in the files within the
      <filename class="directory" moreinfo="none">/etc/udev/rules.d</filename>, <filename class="directory" moreinfo="none">/usr/lib/udev/rules.d</filename>, and <filename class="directory" moreinfo="none">/run/udev/rules.d</filename> directories, <command moreinfo="none">
      udevd</command> will create additional symlinks to the device node, or
      change its permissions, owner, or group, or modify the internal
      <command moreinfo="none">udevd</command> database entry (name) for that object.</para>

      <para>The rules in these three directories are numbered and all three
      directories are merged together. If <command moreinfo="none">udevd</command> can't find a
      rule for the device it is creating, it will leave the permissions and
      ownership at whatever <systemitem class="filesystem" moreinfo="none">devtmpfs</systemitem> used initially.</para> </sect3>
      
    <sect3 id="module-loading">
      <title>Module Loading</title>

      <para>Device drivers compiled as modules may have aliases built into them.
      Aliases are visible in the output of the <command moreinfo="none">modinfo</command>
      program and are usually related to the bus-specific identifiers of devices
      supported by a module. For example, the <emphasis>snd-fm801</emphasis>
      driver supports PCI devices with vendor ID 0x1319 and device ID 0x0801,
      and has an alias of <quote>pci:v00001319d00000801sv*sd*bc04sc01i*</quote>.
      For most devices, the bus driver exports the alias of the driver that
      would handle the device via <systemitem class="filesystem" moreinfo="none">sysfs</systemitem>. E.g., the
      <filename moreinfo="none">/sys/bus/pci/devices/0000:00:0d.0/modalias</filename> file
      might contain the string
      <quote>pci:v00001319d00000801sv00001319sd00001319bc04sc01i00</quote>.
      The default rules provided with udev will cause <command moreinfo="none">udevd</command>
      to call out to <command moreinfo="none">/sbin/modprobe</command> with the contents of the
      <envar>MODALIAS</envar> uevent environment variable (which should be the
      same as the contents of the <filename moreinfo="none">modalias</filename> file in sysfs),
      thus loading all modules whose aliases match this string after wildcard
      expansion.</para>

      <para>In this example, this means that, in addition to
      <emphasis>snd-fm801</emphasis>, the obsolete (and unwanted)
      <emphasis>forte</emphasis> driver will be loaded if it is
      available. See below for ways in which the loading of unwanted drivers can
      be prevented.</para>

      <para>The kernel itself is also able to load modules for network
      protocols, filesystems, and NLS support on demand.</para>

    </sect3>

    <sect3>
      <title>Handling Hotpluggable/Dynamic Devices</title>

      <para>When you plug in a device, such as a Universal Serial Bus (USB) MP3
      player, the kernel recognizes that the device is now connected and
      generates a uevent. This uevent is then handled by
      <command moreinfo="none">udevd</command> as described above.</para>

    </sect3>

  </sect2>

  <sect2>
    <title>Problems with Loading Modules and Creating Devices</title>

    <para>There are a few possible problems when it comes to automatically
    creating device nodes.</para>

    <sect3>
      <title>A kernel module is not loaded automatically</title>

      <para>Udev will only load a module if it has a bus-specific alias and the
      bus driver properly exports the necessary aliases to <systemitem class="filesystem" moreinfo="none">sysfs</systemitem>. In other cases, one should
      arrange module loading by other means. With Linux-5.13.12, udev is
      known to load properly-written drivers for INPUT, IDE, PCI, USB, SCSI,
      SERIO, and FireWire devices.</para>

      <para>To determine if the device driver you require has the necessary
      support for udev, run <command moreinfo="none">modinfo</command> with the module name as
      the argument.  Now try locating the device directory under
      <filename class="directory" moreinfo="none">/sys/bus</filename> and check whether there is
      a <filename moreinfo="none">modalias</filename> file there.</para>

      <para>If the <filename moreinfo="none">modalias</filename> file exists in <systemitem class="filesystem" moreinfo="none">sysfs</systemitem>, the driver supports the device and
      can talk to it directly, but doesn't have the alias, it is a bug in the
      driver. Load the driver without the help from udev and expect the issue
      to be fixed later.</para>

      <para>If there is no <filename moreinfo="none">modalias</filename> file in the relevant
      directory under <filename class="directory" moreinfo="none">/sys/bus</filename>, this
      means that the kernel developers have not yet added modalias support to
      this bus type. With Linux-5.13.12, this is the case with ISA
      busses. Expect this issue to be fixed in later kernel versions.</para>

      <para>Udev is not intended to load <quote>wrapper</quote> drivers such as
      <emphasis>snd-pcm-oss</emphasis> and non-hardware drivers such as
      <emphasis>loop</emphasis> at all.</para>

    </sect3>

    <sect3>
      <title>A kernel module is not loaded automatically, and udev is not
      intended to load it</title>

      <para>If the <quote>wrapper</quote> module only enhances the
      functionality provided by some other module (e.g.,
      <emphasis>snd-pcm-oss</emphasis> enhances the functionality of
      <emphasis>snd-pcm</emphasis> by making the sound cards available to OSS
      applications), configure <command moreinfo="none">modprobe</command> to load the wrapper
      after udev loads the wrapped module. To do this, add a
      <quote>softdep</quote> line to the corresponding
      <filename moreinfo="none">/etc/modprobe.d/<replaceable>&lt;filename&gt;</replaceable>.conf</filename>
      file. For example:</para>

<screen role="nodump" format="linespecific"><literal moreinfo="none">softdep snd-pcm post: snd-pcm-oss</literal></screen>

      <para>Note that the <quote>softdep</quote> command also allows
      <literal moreinfo="none">pre:</literal> dependencies, or a mixture of both
      <literal moreinfo="none">pre:</literal> and <literal moreinfo="none">post:</literal> dependencies.  See 
      the <filename moreinfo="none">modprobe.d(5)</filename> manual page for more information
      on <quote>softdep</quote> syntax and capabilities.</para>

      <para revision="sysv">If the module in question is not a wrapper and is 
      useful by itself, configure the <command moreinfo="none">modules</command> bootscript to 
      load this module on system boot. To do this, add the module name to the
      <filename moreinfo="none">/etc/sysconfig/modules</filename> file on a separate line.
      This works for wrapper modules too, but is suboptimal in that case.</para>

    </sect3>

    <sect3>
      <title>Udev loads some unwanted module</title>

      <para>Either don't build the module, or blacklist it in a
      <filename moreinfo="none">/etc/modprobe.d/blacklist.conf</filename> file as done with the
      <emphasis>forte</emphasis> module in the example below:</para>

<screen role="nodump" format="linespecific"><literal moreinfo="none">blacklist forte</literal></screen>

      <para>Blacklisted modules can still be loaded manually with the
      explicit <command moreinfo="none">modprobe</command> command.</para>

    </sect3>

    <sect3>
      <title>Udev creates a device incorrectly, or makes a wrong symlink</title>

      <para>This usually happens if a rule unexpectedly matches a device. For
      example, a poorly-written rule can match both a SCSI disk (as desired)
      and the corresponding SCSI generic device (incorrectly) by vendor.
      Find the offending rule and make it more specific, with the help of the
      <command moreinfo="none">udevadm info</command> command.</para>

    </sect3>

    <sect3>
      <title>Udev rule works unreliably</title>

      <para>This may be another manifestation of the previous problem. If not,
      and your rule uses <systemitem class="filesystem" moreinfo="none">sysfs</systemitem>
      attributes, it may be a kernel timing issue, to be fixed in later kernels.
      For now, you can work around it by creating a rule that waits for the used
      <systemitem class="filesystem" moreinfo="none">sysfs</systemitem> attribute and appending
      it to the <filename moreinfo="none">/etc/udev/rules.d/10-wait_for_sysfs.rules</filename>
      file (create this file if it does not exist). Please notify the LFS
      Development list if you do so and it helps.</para>

    </sect3>

    <sect3>
      <title>Udev does not create a device</title>

      <para>Further text assumes that the driver is built statically into the
      kernel or already loaded as a module, and that you have already checked
      that udev doesn't create a misnamed device.</para>

      <para>Udev has no information needed to create a device node if a kernel
      driver does not export its data to
      <systemitem class="filesystem" moreinfo="none">sysfs</systemitem>. This is most common
      with third party drivers from outside the kernel tree. Create a static
      device node in <filename moreinfo="none">/usr/lib/udev/devices</filename> with the
      appropriate major/minor numbers (see the file
      <filename moreinfo="none">devices.txt</filename> inside the kernel documentation or the
      documentation provided by the third party driver vendor). The static
      device node will be copied to <filename class="directory" moreinfo="none">/dev</filename>
      by <command moreinfo="none">udev</command>.</para>

    </sect3>

    <sect3>
      <title>Device naming order changes randomly after rebooting</title>

      <para>This is due to the fact that udev, by design, handles uevents and
      loads modules in parallel, and thus in an unpredictable order. This will
      never be <quote>fixed</quote>. You should not rely upon the kernel device
      names being stable. Instead, create your own rules that make symlinks with
      stable names based on some stable attributes of the device, such as a
      serial number or the output of various *_id utilities installed by udev.
      See <xref linkend="ch-config-symlinks"/> and
      <xref linkend="ch-config-network"/> for examples.</para>

    </sect3>

  </sect2>

  <sect2>
    <title>Useful Reading</title>

    <para>Additional helpful documentation is available at the following
    sites:</para>

    <itemizedlist>

      <listitem>
        <para>A Userspace Implementation of <systemitem class="filesystem" moreinfo="none">devfs</systemitem>
        <ulink url="http://www.kroah.com/linux/talks/ols_2003_udev_paper/Reprint-Kroah-Hartman-OLS2003.pdf"/></para>
      </listitem>

      <listitem>
        <para>The <systemitem class="filesystem" moreinfo="none">sysfs</systemitem> Filesystem
        <ulink url="http://www.kernel.org/pub/linux/kernel/people/mochel/doc/papers/ols-2005/mochel.pdf"/></para>
      </listitem>

<!--  No longer available
      <listitem>
        <para>Pointers to further reading
        <ulink url="http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev.html"/>
        </para>
      </listitem>
-->
    </itemizedlist>

  </sect2>

</sect1>
  <sect1 id="ch-config-symlinks">
  <?dbhtml filename="symlinks.html"?>

  <title>Managing Devices</title>

  <sect2 revision="sysv">

    <title>Network Devices</title>

    <para>Udev, by default, names network devices according to Firmware/BIOS
    data or physical characteristics like the bus, slot, or MAC address.  The
    purpose of this naming convention is to ensure that network devices are
    named consistently and not based on the time the network card was
    discovered.  For example, on a computer having two network cards made by
    Intel and Realtek, the network card manufactured by Intel may become eth0
    and the Realtek card becomes eth1. In some cases, after a reboot the cards
    could get renumbered the other way around.</para>
    
    <para>In the new naming scheme, typical network device names would then
    be something like enp5s0 or wlp3s0.  If this naming convention is not
    desired, the traditional naming scheme or a custom scheme can be
    implemented.</para>

    <sect3>
      <title>Disabling Persistent Naming on the Kernel Command Line</title>
   
      <para>The traditional naming scheme using eth0, eth1, etc can be
      restored by adding <userinput moreinfo="none">net.ifnames=0</userinput> on the 
      kernel command line.  This is most appropriate for those systems
      that have only one ethernet device of the same type.  Laptops
      often have multiple ethernet connections that are named eth0 and 
      wlan0 and are also candidates for this method.  The command line 
      is passed in the GRUB configuration file. 
      See <xref linkend="grub-cfg"/>.</para>
    </sect3>

    <sect3>
      <title>Creating Custom Udev Rules</title>
   
      <para>The naming scheme can be customized by creating custom udev
      rules.  A script has been included that generates the initial rules.
      Generate these rules by running:</para>

<screen role="install" format="linespecific"><userinput moreinfo="none">bash /usr/lib/udev/init-net-rules.sh</userinput></screen>

      <para> Now, inspect the
      <filename moreinfo="none">/etc/udev/rules.d/70-persistent-net.rules</filename> file, to
      find out which name was assigned to which network device:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">cat /etc/udev/rules.d/70-persistent-net.rules</userinput></screen>

      <note><para>In some cases such as when MAC addresses have been assigned to
      a network card manually or in a virtual environment such as Qemu or Xen,
      the network rules file may not have been generated because addresses
      are not consistently assigned.  In these cases, this method cannot
      be used.</para></note>
  
      <para>The file begins with a comment block followed by two lines for each
      NIC. The first line for each NIC is a commented description showing its
      hardware IDs (e.g. its PCI vendor and device IDs, if it's a PCI card),
      along with its driver in parentheses, if the driver can be found. Neither
      the hardware ID nor the driver is used to determine which name to give an
      interface; this information is only for reference. The second line is the
      udev rule that matches this NIC and actually assigns it a name.</para>
  
      <para>All udev rules are made up of several keys, separated by commas and
      optional whitespace. This rule's keys and an explanation of each of them
      are as follows:</para>
  
      <itemizedlist>
        <listitem>
          <para><literal moreinfo="none">SUBSYSTEM=="net"</literal> - This tells udev to ignore
          devices that are not network cards.</para>
        </listitem>
        <listitem>
          <para><literal moreinfo="none">ACTION=="add"</literal> - This tells udev to ignore this
          rule for a uevent that isn't an add ("remove" and "change" uevents also
          happen, but don't need to rename network interfaces).</para>
        </listitem>
        <listitem>
          <para><literal moreinfo="none">DRIVERS=="?*"</literal> - This exists so that udev will
          ignore VLAN or bridge sub-interfaces (because these sub-interfaces do
          not have drivers). These sub-interfaces are skipped because the name
          that would be assigned would collide with their parent devices.</para>
        </listitem>
        <listitem>
          <para><literal moreinfo="none">ATTR{address}</literal> - The value of this key is the
          NIC's MAC address.</para>
        </listitem>
        <listitem>
          <para><literal moreinfo="none">ATTR{type}=="1"</literal> - This ensures the rule only
          matches the primary interface in the case of certain wireless drivers
          which create multiple virtual interfaces. The secondary interfaces are
          skipped for the same reason that VLAN and bridge sub-interfaces are
          skipped: there would be a name collision otherwise.</para>
        </listitem>
        <listitem>
          <para><literal moreinfo="none">NAME</literal> - The value of this key is the name that
          udev will assign to this interface.</para>
        </listitem>
      </itemizedlist>
  
      <para>The value of <literal moreinfo="none">NAME</literal> is the important part. Make sure
      you know which name has been assigned to each of your network cards before
      proceeding, and be sure to use that <literal moreinfo="none">NAME</literal> value when
      creating your configuration files below.</para>

    </sect3>

  </sect2>

  <sect2 revision="sysv">

    <title>CD-ROM symlinks</title>

    <para>Some software that you may want to install later (e.g., various
    media players) expect the <filename class="symlink" moreinfo="none">/dev/cdrom</filename>
    and <filename class="symlink" moreinfo="none">/dev/dvd</filename> symlinks to exist, and
    to point to a CD-ROM or DVD-ROM device. Also, it may be convenient to put
    references to those symlinks into <filename moreinfo="none">/etc/fstab</filename>. Udev
    comes with a script that will generate rules files to create these symlinks
    for you, depending on the capabilities of each device, but you need to
    decide which of two modes of operation you wish to have the script use.</para>

    <para>First, the script can operate in <quote>by-path</quote> mode (used by
    default for USB and FireWire devices), where the rules it creates depend on
    the physical path to the CD or DVD device. Second, it can operate in
    <quote>by-id</quote> mode (default for IDE and SCSI devices), where the
    rules it creates depend on identification strings stored on the CD or DVD
    device itself. The path is determined by udev's <command moreinfo="none">path_id</command>
    script, and the identification strings are read from the hardware by its
    <command moreinfo="none">ata_id</command> or <command moreinfo="none">scsi_id</command> programs, depending
    on which type of device you have.</para>

    <para>There are advantages to each approach; the correct approach to use
    will depend on what kinds of device changes may happen. If you expect the
    physical path to the device (that is, the ports and/or slots that it plugs
    into) to change, for example because you plan on moving the drive to a
    different IDE port or a different USB connector, then you should use the
    <quote>by-id</quote> mode. On the other hand, if you expect the device's
    identification to change, for example because it may die, and you would
    replace it with a different device with the same capabilities and which
    is plugged into the same connectors, then you should use the
    <quote>by-path</quote> mode.</para>

    <para>If either type of change is possible with your drive, then choose a
    mode based on the type of change you expect to happen more often.</para>

<!-- If you use by-id mode, the symlinks will survive even the transition
     to libata for IDE drives, but that is not for the book. -->

    <important><para>External devices (for example, a USB-connected CD drive)
    should not use by-path persistence, because each time the device is plugged
    into a new external port, its physical path will change. All
    externally-connected devices will have this problem if you write udev rules
    to recognize them by their physical path; the problem is not limited to CD
    and DVD drives.</para></important>

    <para>If you wish to see the values that the udev scripts will use, then
    for the appropriate CD-ROM device, find the corresponding directory under
    <filename class="directory" moreinfo="none">/sys</filename> (e.g., this can be
    <filename class="directory" moreinfo="none">/sys/block/hdd</filename>) and
    run a command similar to the following:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">udevadm test /sys/block/hdd</userinput></screen>

    <para>Look at the lines containing the output of various *_id programs.
    The <quote>by-id</quote> mode will use the ID_SERIAL value if it exists and
    is not empty, otherwise it will use a combination of ID_MODEL and
    ID_REVISION. The <quote>by-path</quote> mode will use the ID_PATH value.</para>

    <para>If the default mode is not suitable for your situation, then the
    following modification can be made to the
    <filename moreinfo="none">/etc/udev/rules.d/83-cdrom-symlinks.rules</filename> file,
    as follows (where <replaceable>mode</replaceable> is one of
    <quote>by-id</quote> or <quote>by-path</quote>):</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">sed -e 's/"write_cd_rules"/"write_cd_rules <replaceable>mode</replaceable>"/' \
    -i /etc/udev/rules.d/83-cdrom-symlinks.rules</userinput></screen>

    <para>Note that it is not necessary to create the rules files or symlinks
    at this time because you have bind-mounted the host's
    <filename class="directory" moreinfo="none">/dev</filename> directory into the LFS system
    and we assume the symlinks exist on the host. The rules and symlinks will
    be created the first time you boot your LFS system.</para>

    <para>However, if you have multiple CD-ROM devices, then the symlinks
    generated at that time may point to different devices than they point to on
    your host because devices are not discovered in a predictable order. The
    assignments created when you first boot the LFS system will be stable, so
    this is only an issue if you need the symlinks on both systems to point to
    the same device. If you need that, then inspect (and possibly edit) the
    generated <filename moreinfo="none">/etc/udev/rules.d/70-persistent-cd.rules</filename>
    file after booting, to make sure the assigned symlinks match what you need.</para>

  </sect2>

  <sect2>

    <title>Dealing with duplicate devices</title>

    <para>As explained in <xref linkend="ch-config-udev"/>, the order in
    which devices with the same function appear in
    <filename class="directory" moreinfo="none">/dev</filename> is essentially random.
    E.g., if you have a USB web camera and a TV tuner, sometimes
    <filename moreinfo="none">/dev/video0</filename> refers to the camera and
    <filename moreinfo="none">/dev/video1</filename> refers to the tuner, and sometimes
    after a reboot the order changes.
    For all classes of hardware except sound cards and network cards, this is
    fixable by creating udev rules for custom persistent symlinks.
    The case of network cards is covered separately in
    <xref linkend="ch-config-network"/>, and sound card configuration can
    be found in <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/devices.html">BLFS</ulink>.</para>

    <para>For each of your devices that is likely to have this problem
    (even if the problem doesn't exist in your current Linux distribution),
    find the corresponding directory under
    <filename class="directory" moreinfo="none">/sys/class</filename> or
    <filename class="directory" moreinfo="none">/sys/block</filename>.
    For video devices, this may be
    <filename class="directory" moreinfo="none">/sys/class/video4linux/video<replaceable>X</replaceable></filename>.
    Figure out the attributes that identify the device uniquely (usually,
    vendor and product IDs and/or serial numbers work):</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">udevadm info -a -p /sys/class/video4linux/video0</userinput></screen>

    <para>Then write rules that create the symlinks, e.g.:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/udev/rules.d/83-duplicate_devs.rules &lt;&lt; "EOF"
<literal moreinfo="none">
# Persistent symlinks for webcam and tuner
KERNEL=="video*", ATTRS{idProduct}=="1910", ATTRS{idVendor}=="0d81", SYMLINK+="webcam"
KERNEL=="video*", ATTRS{device}=="0x036f",  ATTRS{vendor}=="0x109e", SYMLINK+="tvtuner"
</literal>
EOF</userinput></screen>

    <para>The result is that <filename moreinfo="none">/dev/video0</filename> and
    <filename moreinfo="none">/dev/video1</filename> devices still refer randomly to the tuner
    and the web camera (and thus should never be used directly), but there are
    symlinks <filename moreinfo="none">/dev/tvtuner</filename> and
    <filename moreinfo="none">/dev/webcam</filename> that always point to the correct
    device.</para>

 </sect2>

</sect1>

  <!-- sysv -->
  <sect1 id="ch-config-network" revision="sysv">
  <?dbhtml filename="network.html"?>

  <title>General Network Configuration</title>

  <indexterm zone="ch-config-network" significance="normal">
    <primary sortas="d-network">network</primary>
  <secondary>configuring</secondary></indexterm>

  <sect2>
    <title>Creating Network Interface Configuration Files</title>

    <para>Which interfaces are brought up and down by the network script
    usually depends on the files in <filename class="directory" moreinfo="none">/etc/sysconfig/</filename>.  This directory should
    contain a file for each interface to be configured, such as
    <filename moreinfo="none">ifconfig.xyz</filename>, where <quote>xyz</quote> should describe
    the network card.  The interface name (e.g. eth0) is usually appropriate.
    Inside this file are attributes to this interface, such as its IP
    address(es), subnet masks, and so forth.  It is necessary that the stem of
    the filename be <emphasis>ifconfig</emphasis>.</para>

    <note><para>If the procedure in the previous section was not used, udev
    will assign network card interface names based on system physical
    characteristics such as enp2s1. If you are not sure what your interface
    name is, you can always run <command moreinfo="none">ip link</command> or <command moreinfo="none">ls
    /sys/class/net</command> after you have booted your system.  
    </para></note>

    <para>The following command creates a sample file for the
    <emphasis>eth0</emphasis> device with a static IP address:</para>
<!-- jhalfs relies on the values for IFACE, IP, etc. If you want to change
     them, please inform the jhalfs maintainer(s). -->
<screen format="linespecific"><userinput moreinfo="none">cd /etc/sysconfig/
cat &gt; ifconfig.<replaceable>eth0</replaceable> &lt;&lt; "EOF"
<literal moreinfo="none">ONBOOT=<replaceable>yes</replaceable>
IFACE=<replaceable>eth0</replaceable>
SERVICE=<replaceable>ipv4-static</replaceable>
IP=<replaceable>192.168.1.2</replaceable>
GATEWAY=<replaceable>192.168.1.1</replaceable>
PREFIX=<replaceable>24</replaceable>
BROADCAST=<replaceable>192.168.1.255</replaceable></literal>
EOF</userinput></screen>

    <para>The values in italics must be changed in every file to match
    the proper setup.</para>

    <para>If the <envar>ONBOOT</envar> variable is set to <quote>yes</quote> the
    System V network script will bring up the Network Interface Card (NIC) during
    the system boot process. If set to anything but <quote>yes</quote> the NIC
    will be ignored by the network script and not be automatically brought up.
    The interface can be manually started or stopped with the
    <command moreinfo="none">ifup</command> and <command moreinfo="none">ifdown</command> commands.</para>

    <para>The <envar>IFACE</envar> variable defines the interface name,
    for example, eth0.  It is required for all network device configuration
    files. The filename extension must match this value.</para>

    <para>The <envar>SERVICE</envar> variable defines the method used for
    obtaining the IP address. The LFS-Bootscripts package has a modular IP
    assignment format, and creating additional files in the <filename class="directory" moreinfo="none">/lib/services/</filename> directory allows other IP
    assignment methods. This is commonly used for Dynamic Host Configuration
    Protocol (DHCP), which is addressed in the BLFS book.</para>

    <para>The <envar>GATEWAY</envar> variable should contain the default
    gateway IP address, if one is present. If not, then comment out the
    variable entirely.</para>

    <para>The <envar>PREFIX</envar> variable contains the number of
    bits used in the subnet. Each octet in an IP address is 8 bits. If the
    subnet's netmask is 255.255.255.0, then it is using the first three octets
    (24 bits) to specify the network number. If the netmask is 255.255.255.240,
    it would be using the first 28 bits.  Prefixes longer than 24 bits are
    commonly used by DSL and cable-based Internet Service Providers (ISPs).
    In this example (PREFIX=24), the netmask is 255.255.255.0. Adjust the
    <envar>PREFIX</envar> variable according to your specific subnet.
    If omitted, the PREFIX defaults to 24.</para>

    <para>For more information see the <command moreinfo="none">ifup</command> man page.</para>

  </sect2>
  <sect2 id="resolv.conf">
    <title>Creating the /etc/resolv.conf File</title>

    <indexterm zone="resolv.conf" significance="normal">
      <primary sortas="e-/etc/resolv.conf">/etc/resolv.conf</primary>
    </indexterm>

    <para>The system will need some means of obtaining Domain Name Service
    (DNS) name resolution to resolve Internet domain names to IP addresses, and
    vice versa. This is best achieved by placing the IP address of the DNS
    server, available from the ISP or network administrator, into
    <filename moreinfo="none">/etc/resolv.conf</filename>. Create the file by running the
    following:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/resolv.conf &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/resolv.conf

domain <replaceable>&lt;Your Domain Name&gt;</replaceable>
nameserver <replaceable>&lt;IP address of your primary nameserver&gt;</replaceable>
nameserver <replaceable>&lt;IP address of your secondary nameserver&gt;</replaceable>

# End /etc/resolv.conf</literal>
EOF</userinput></screen>

    <para>The <varname>domain</varname> statement can be omitted
    or replaced with a <varname>search</varname> statement.  See the man page for
    resolv.conf for more details.</para>

    <para>Replace <replaceable>&lt;IP address of the nameserver&gt;</replaceable>
    with the IP address of the DNS most appropriate for the setup. There will
    often be more than one entry (requirements demand secondary servers for
    fallback capability). If you only need or want one DNS server, remove the
    second <emphasis>nameserver</emphasis> line from the file. The IP address
    may also be a router on the local network.</para>

    <note>
      <para>The Google Public IPv4 DNS addresses are 8.8.8.8 and 8.8.4.4.</para>
    </note>

  </sect2>

  <sect2 id="ch-config-hostname">
    <title>Configuring the system hostname</title>

    <indexterm zone="ch-config-hostname" significance="normal">
      <primary sortas="d-hostname">hostname</primary>
      <secondary>configuring</secondary>
    </indexterm>

     <para>During the boot process, the file <filename moreinfo="none">/etc/hostname</filename>
     is used for establishing the system's hostname.</para>

     <para>Create the <filename moreinfo="none">/etc/hostname</filename> file and enter a
     hostname by running:</para>

<screen format="linespecific"><userinput moreinfo="none">echo "<replaceable>&lt;lfs&gt;</replaceable>" &gt; /etc/hostname</userinput></screen>

     <para><replaceable>&lt;lfs&gt;</replaceable> needs to be replaced with the
     name given to the computer. Do not enter the Fully Qualified Domain Name
     (FQDN) here. That information is put in the
     <filename moreinfo="none">/etc/hosts</filename> file.</para>

  </sect2>

  <sect2 id="ch-config-hosts">
     <title>Customizing the /etc/hosts File</title>

     <indexterm zone="ch-config-hosts" significance="normal">
       <primary sortas="e-/etc/hosts">/etc/hosts</primary>
     </indexterm>
   
     <indexterm zone="ch-config-hosts" significance="normal">
       <primary sortas="d-localnet">localnet</primary>
       <secondary>/etc/hosts</secondary>
     </indexterm>
   
     <indexterm zone="ch-config-hosts" significance="normal">
       <primary sortas="d-network">network</primary>
       <secondary>/etc/hosts</secondary>
     </indexterm>
   
     <para>Decide on the IP address, fully-qualified domain name (FQDN), and
     possible aliases for use in the <filename moreinfo="none">/etc/hosts</filename> file. The
     syntax is:</para>
   
<screen format="linespecific"><literal moreinfo="none">IP_address myhost.example.org aliases</literal></screen>

     <para>Unless the computer is to be visible to the Internet (i.e., there is
     a registered domain and a valid block of assigned IP addressesâmost
     users do not have this), make sure that the IP address is in the private
     network IP address range. Valid ranges are:</para>

<screen format="linespecific"><literal moreinfo="none">Private Network Address Range      Normal Prefix
10.0.0.1 - 10.255.255.254           8
172.x.0.1 - 172.x.255.254           16
192.168.y.1 - 192.168.y.254         24</literal></screen>

     <para>x can be any number in the range 16-31. y can be any number in the
     range 0-255.</para>
   
     <para>A valid private IP address could be 192.168.1.1. A valid FQDN for
     this IP could be lfs.example.org.</para>
   
     <para>Even if not using a network card, a valid FQDN is still required.
     This is necessary for certain programs to operate correctly.</para>
   
     <para>Create the  <filename moreinfo="none">/etc/hosts</filename> file by running:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/hosts &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/hosts

127.0.0.1 localhost.localdomain localhost
127.0.1.1 <replaceable>&lt;FQDN&gt;</replaceable> <replaceable>&lt;HOSTNAME&gt;</replaceable>
<replaceable>&lt;192.168.1.1&gt;</replaceable> <replaceable>&lt;FQDN&gt;</replaceable> <replaceable>&lt;HOSTNAME&gt;</replaceable> <replaceable>[alias1] [alias2 ...]</replaceable>
::1       localhost ip6-localhost ip6-loopback
ff02::1   ip6-allnodes
ff02::2   ip6-allrouters

# End /etc/hosts</literal>
EOF</userinput></screen>

     <para>The <replaceable>&lt;192.168.1.1&gt;</replaceable>,
     <replaceable>&lt;FQDN&gt;</replaceable>, and 
     <replaceable>&lt;HOSTNAME&gt;</replaceable> values need to be
     changed for specific uses or requirements (if assigned an IP address by a
     network/system administrator and the machine will be connected to an
     existing network). The optional alias name(s) can be omitted.</para>

<!--  This is not very useful

     <para>If a network card is not going to be configured, create the
     <filename>/etc/hosts</filename> file by running:</para>

<screen role="nodump"><userinput>cat &gt; /etc/hosts &lt;&lt; "EOF"
<literal># Begin /etc/hosts (no network card version)

127.0.0.1 localhost
127.0.1.1 <replaceable>&lt;FQDN&gt;</replaceable> <replaceable>&lt;HOSTNAME&gt;</replaceable>
::1       localhost ip6-localhost ip6-loopback
ff02::1   ip6-allnodes
ff02::2   ip6-allrouters

# End /etc/hosts (no network card version)</literal>
EOF</userinput></screen> -->

   </sect2>

</sect1>
  <sect1 id="ch-config-usage" revision="sysv">
  <?dbhtml filename="usage.html"?>

  <title>System V Bootscript Usage and Configuration</title>

  <indexterm zone="ch-config-usage" significance="normal">
    <primary sortas="a-Bootscripts">Bootscripts</primary>
    <secondary>usage</secondary>
  </indexterm>

  <sect2>
    <title>How Do the System V Bootscripts Work?</title>

    <para>Linux uses a special booting facility named SysVinit that is based on a
    concept of <emphasis>run-levels</emphasis>. It can be quite different from one
    system to another, so it cannot be assumed that because things worked in one
    particular Linux distribution, they should work the same in LFS too. LFS has its
    own way of doing things, but it respects generally accepted standards.</para>
  
    <para>SysVinit (which will be referred to as <quote>init</quote> from now on)
    works using a run-levels scheme. There are seven (numbered 0 to 6) run-levels
    (actually, there are more run-levels, but they are for special cases and are
    generally not used. See <filename moreinfo="none">init(8)</filename> for more details), and
    each one of those corresponds to the actions the computer is supposed to
    perform when it starts up. The default run-level is 3. Here are the
    descriptions of the different run-levels as they are implemented:</para>

<literallayout format="linespecific" class="normal">0: halt the computer
1: single-user mode
2: multi-user mode without networking
3: multi-user mode with networking
4: reserved for customization, otherwise does the same as 3
5: same as 4, it is usually used for GUI login (like X's <command moreinfo="none">xdm</command> or KDE's <command moreinfo="none">kdm</command>)
6: reboot the computer</literallayout>

  </sect2>

  <sect2 id="conf-sysvinit" role="configuration">
  <title>Configuring Sysvinit</title>

  <indexterm zone="conf-sysvinit" significance="normal">
    <primary sortas="a-Sysvinit">Sysvinit</primary>
    <secondary>configuring</secondary>
  </indexterm>

  <indexterm zone="conf-sysvinit" significance="normal">
    <primary sortas="e-/etc/inittab">/etc/inittab</primary>
  </indexterm>

  <para>During the kernel initialization, the first program that is run
  is either specified on the command line or, by default
  <command moreinfo="none">init</command>.  This program reads the initialization file
  <filename moreinfo="none">/etc/inittab</filename>.  Create this file with:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/inittab &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/inittab

id:3:initdefault:

si::sysinit:/etc/rc.d/init.d/rc S

l0:0:wait:/etc/rc.d/init.d/rc 0
l1:S1:wait:/etc/rc.d/init.d/rc 1
l2:2:wait:/etc/rc.d/init.d/rc 2
l3:3:wait:/etc/rc.d/init.d/rc 3
l4:4:wait:/etc/rc.d/init.d/rc 4
l5:5:wait:/etc/rc.d/init.d/rc 5
l6:6:wait:/etc/rc.d/init.d/rc 6

ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now

su:S016:once:/sbin/sulogin

1:2345:respawn:/sbin/agetty --noclear tty1 9600
2:2345:respawn:/sbin/agetty tty2 9600
3:2345:respawn:/sbin/agetty tty3 9600
4:2345:respawn:/sbin/agetty tty4 9600
5:2345:respawn:/sbin/agetty tty5 9600
6:2345:respawn:/sbin/agetty tty6 9600

# End /etc/inittab</literal>
EOF</userinput></screen>

  <para>An explanation of this initialization file is in the man page for
  <emphasis>inittab</emphasis>.  For LFS, the key command that is run is
  <command moreinfo="none">rc</command>. The initialization file above will instruct
  <command moreinfo="none">rc</command> to run all the scripts starting with an S in the
  <filename class="directory" moreinfo="none">/etc/rc.d/rcS.d</filename> directory
  followed by all the scripts starting with an S in the <filename class="directory" moreinfo="none">/etc/rc.d/rc?.d</filename> directory where the question
  mark is specified by the initdefault value.</para>

  <para>As a convenience, the <command moreinfo="none">rc</command> script reads a library of
  functions in <filename class="directory" moreinfo="none">/lib/lsb/init-functions</filename>.
  This library also reads an optional configuration file,
  <filename moreinfo="none">/etc/sysconfig/rc.site</filename>.  Any of the system
  configuration file parameters described in subsequent sections can be
  alternatively placed in this file allowing consolidation of all system
  parameters in this one file.</para>

  <para>As a debugging convenience, the functions script also logs all output
  to <filename moreinfo="none">/run/var/bootlog</filename>.  Since the <filename class="directory" moreinfo="none">/run</filename> directory is a tmpfs, this file is not
  persistent across boots, however it is appended to the more permanent file
  <filename moreinfo="none">/var/log/boot.log</filename> at the end of the boot process.</para>

  <sect3 id="init-levels">
  <title>Changing Run Levels</title>

  <para>Changing run-levels is done with <command moreinfo="none">init
  <replaceable>&lt;runlevel&gt;</replaceable></command>, where
  <replaceable>&lt;runlevel&gt;</replaceable> is the target run-level. For example, to
  reboot the computer, a user could issue the <command moreinfo="none">init 6</command> command,
  which is an alias for the <command moreinfo="none">reboot</command> command. Likewise,
  <command moreinfo="none">init 0</command> is an alias for the <command moreinfo="none">halt</command>
  command.</para>

  <para>There are a number of directories under <filename class="directory" moreinfo="none">/etc/rc.d</filename> that look like <filename class="directory" moreinfo="none">rc?.d</filename> (where ? is the number of the run-level) and
  <filename class="directory" moreinfo="none">rcsysinit.d</filename>, all containing a number of
  symbolic links. Some begin with a <emphasis>K</emphasis>, the others begin with
  an <emphasis>S</emphasis>, and all of them have two numbers following the
  initial letter. The K means to stop (kill) a service and the S means to start a
  service. The numbers determine the order in which the scripts are run, from 00
  to 99âthe lower the number the earlier it gets executed. When
  <command moreinfo="none">init</command> switches to another run-level, the appropriate services
  are either started or stopped, depending on the runlevel chosen.</para>

  <para>The real scripts are in <filename class="directory" moreinfo="none">/etc/rc.d/init.d</filename>. They do the actual work, and
  the symlinks all point to them. K links and S links point to
  the same script in <filename class="directory" moreinfo="none">/etc/rc.d/init.d</filename>.
  This is because the scripts can be called with different parameters like
  <parameter moreinfo="none">start</parameter>, <parameter moreinfo="none">stop</parameter>,
  <parameter moreinfo="none">restart</parameter>, <parameter moreinfo="none">reload</parameter>, and
  <parameter moreinfo="none">status</parameter>. When a K link is encountered, the appropriate
  script is run with the <parameter moreinfo="none">stop</parameter> argument. When an S link
  is encountered, the appropriate script is run with the
  <parameter moreinfo="none">start</parameter> argument.</para>

  <para>There is one exception to this explanation. Links that start
  with an <emphasis>S</emphasis> in the <filename class="directory" moreinfo="none">rc0.d</filename> and <filename class="directory" moreinfo="none">rc6.d</filename> directories will not cause anything
  to be started. They will be called with the parameter
  <parameter moreinfo="none">stop</parameter> to stop something. The logic behind this
  is that when a user is going to reboot or halt the system, nothing
  needs to be started.  The system only needs to be stopped.</para>

  <para>These are descriptions of what the arguments make the scripts
  do:</para>

  <variablelist>

    <varlistentry>
      <term><parameter moreinfo="none">start</parameter></term>
      <listitem>
        <para>The service is started.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">stop</parameter></term>
      <listitem>
        <para>The service is stopped.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">restart</parameter></term>
      <listitem>
        <para>The service is stopped and then started again.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">reload</parameter></term>
      <listitem>
        <para>The configuration of the service is updated.
        This is used after the configuration file of a service was modified, when
        the service does not need to be restarted.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter moreinfo="none">status</parameter></term>
      <listitem>
        <para>Tells if the service is running and with which PIDs.</para>
      </listitem>
    </varlistentry>

  </variablelist>

  <para>Feel free to modify the way the boot process works (after all,
  it is your own LFS system). The files given here are an example of how
  it can be done.</para>

  </sect3>
  </sect2>

  <sect2>
    <title>Udev Bootscripts</title>

      <para>The <filename moreinfo="none">/etc/rc.d/init.d/udev</filename> initscript starts
      <command moreinfo="none">udevd</command>, triggers any "coldplug" devices that have
      already been created by the kernel and waits for any rules to complete.
      The script also unsets the uevent handler from the default of
      <filename moreinfo="none">/sbin/hotplug </filename>.  This is done because the kernel no
      longer needs to call out to an external binary.  Instead
      <command moreinfo="none">udevd</command> will listen on a netlink socket for uevents that
      the kernel raises.</para>

      <para>The <command moreinfo="none">/etc/rc.d/init.d/udev_retry</command> initscript takes
      care of re-triggering events for subsystems whose rules may rely on
      filesystems that are not mounted until the <command moreinfo="none">mountfs</command>
      script is run (in particular, <filename class="directory" moreinfo="none">/usr</filename>
      and <filename class="directory" moreinfo="none">/var</filename> may cause this).  This
      script runs after the <command moreinfo="none">mountfs</command> script, so those rules
      (if re-triggered) should succeed the second time around.  It is
      configured from the <filename moreinfo="none">/etc/sysconfig/udev_retry</filename> file;
      any words in this file other than comments are considered subsystem names
      to trigger at retry time.  To find the subsystem of a device, use
      <command moreinfo="none">udevadm info --attribute-walk &lt;device&gt;</command> where
      &lt;device&gt; is an absolute path in /dev or /sys such as /dev/sr0 or
      /sys/class/rtc.</para>

      <para>For information on kernel module loading and udev, see 
      <xref linkend="module-loading"/>.</para>
  </sect2>

  <sect2 id="ch-config-clock">
    <title>Configuring the System Clock</title>

    <indexterm zone="ch-config-clock" significance="normal">
      <primary sortas="d-setclock">setclock</primary>
    <secondary>configuring</secondary></indexterm>

    <para>The <command moreinfo="none">setclock</command> script reads the time from the hardware
    clock, also known as the BIOS or the Complementary Metal Oxide Semiconductor
    (CMOS) clock. If the hardware clock is set to UTC, this script will convert the
    hardware clock's time to the local time using the
    <filename moreinfo="none">/etc/localtime</filename> file (which tells the
    <command moreinfo="none">hwclock</command> program which timezone to use). There is no
    way to detect whether or not the hardware clock is set to UTC, so this
    needs to be configured manually.</para>

    <para>The <command moreinfo="none">setclock</command> program is run via
    <application moreinfo="none">udev</application> when the kernel detects the hardware
    capability upon boot.  It can also be run manually with the stop parameter to
    store the system time to the CMOS clock.</para>

    <para>If you cannot remember whether or not the hardware clock is set to UTC,
    find out by running the <userinput moreinfo="none">hwclock --localtime --show</userinput>
    command. This will display what the current time is according to the hardware
    clock. If this time matches whatever your watch says, then the hardware clock is
    set to local time. If the output from <command moreinfo="none">hwclock</command> is not local
    time, chances are it is set to UTC time. Verify this by adding or subtracting
    the proper amount of hours for the timezone to the time shown by
    <command moreinfo="none">hwclock</command>. For example, if you are currently in the MST
    timezone, which is also known as GMT -0700, add seven hours to the local
    time.</para>

    <para>Change the value of the <envar>UTC</envar> variable below
    to a value of <parameter moreinfo="none">0</parameter> (zero) if the hardware clock
    is <emphasis>NOT</emphasis> set to UTC time.</para>

    <para>Create a new file <filename moreinfo="none">/etc/sysconfig/clock</filename> by running
    the following:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/sysconfig/clock &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/sysconfig/clock

UTC=1

# Set this to any options you might need to give to hwclock,
# such as machine hardware clock type for Alphas.
CLOCKPARAMS=

# End /etc/sysconfig/clock</literal>
EOF</userinput></screen>

    <para>A good hint explaining how to deal with time on LFS is available
    at <ulink url="https://www.linuxfromscratch.org/hints/downloads/files/time.txt"/>. It explains issues such as
    time zones, UTC, and the <envar>TZ</envar> environment variable.</para>

    <note><para>The CLOCKPARAMS and UTC paramaters may also be set
    in the <filename moreinfo="none">/etc/sysconfig/rc.site</filename> file.</para></note>

  </sect2>

  <sect2 id="ch-config-console">
  <?dbhtml filename="console.html"?>

  <title>Configuring the Linux Console</title>

  <indexterm zone="ch-config-console" significance="normal">
    <primary sortas="d-console">console</primary>
    <secondary>configuring</secondary>
  </indexterm>

  <para>This section discusses how to configure the <command moreinfo="none">console</command>
  bootscript that sets up the keyboard map, console font, and console kernel log
  level. If non-ASCII characters (e.g., the copyright sign, the British pound
  sign and Euro symbol) will not be used and the keyboard is a U.S. one, much
  of this section can be skipped. Without the configuration file, (or
  equivalent settings in <filename moreinfo="none">rc.site</filename>), the
  <command moreinfo="none">console</command> bootscript will do nothing.</para>

  <para>The <command moreinfo="none">console</command> script reads the
  <filename moreinfo="none">/etc/sysconfig/console</filename> file for configuration
  information.  Decide which keymap and screen font will be used. Various
  language-specific HOWTOs can also help with this, see <ulink url="http://www.tldp.org/HOWTO/HOWTO-INDEX/other-lang.html"/>. If still in
  doubt, look in the <filename class="directory" moreinfo="none">/usr/share/keymaps</filename>
  and <filename class="directory" moreinfo="none">/usr/share/consolefonts</filename> directories
  for valid keymaps and screen fonts. Read <filename moreinfo="none">loadkeys(1)</filename> and
  <filename moreinfo="none">setfont(8)</filename> manual pages to determine the correct
  arguments for these programs.</para>

  <para>The <filename moreinfo="none">/etc/sysconfig/console</filename> file should contain lines
  of the form: VARIABLE="value". The following variables are recognized:</para>
  <variablelist>

    <varlistentry>
      <term>LOGLEVEL</term>
      <listitem>
        <para>This variable specifies the log level for kernel messages sent
        to the console as set by <command moreinfo="none">dmesg -n</command>. Valid levels are
        from "1" (no messages) to "8". The default level is "7".</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>KEYMAP</term>
      <listitem>
        <para>This variable specifies the arguments for the
        <command moreinfo="none">loadkeys</command> program, typically, the name of keymap
        to load, e.g., <quote>it</quote>. If this variable is not set, the
        bootscript will not run the <command moreinfo="none">loadkeys</command> program,
        and the default kernel keymap will be used.  Note that a few keymaps
        have multiple versions with the same name (cz and its variants in
        qwerty/ and qwertz/, es in olpc/ and qwerty/, and trf in fgGIod/ and
        qwerty/). In these cases the parent directory should also be specified
        (e.g. qwerty/es) to ensure the proper keymap is loaded.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>KEYMAP_CORRECTIONS</term>
      <listitem>
        <para>This (rarely used) variable
        specifies the arguments for the second call to the
        <command moreinfo="none">loadkeys</command> program. This is useful if the stock keymap
        is not completely satisfactory and a small adjustment has to be made. E.g.,
        to include the Euro sign into a keymap that normally doesn't have it,
        set this variable to <quote>euro2</quote>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>FONT</term>
      <listitem>
        <para>This variable specifies the arguments for the
        <command moreinfo="none">setfont</command> program. Typically, this includes the font
        name, <quote>-m</quote>, and the name of the application character
        map to load. E.g., in order to load the <quote>lat1-16</quote> font
        together with the <quote>8859-1</quote> application character map
        (as it is appropriate in the USA),
        <!-- because of the copyright sign -->
        set this variable to <quote>lat1-16 -m 8859-1</quote>.
        In UTF-8 mode, the kernel uses the application character map for
        conversion of composed 8-bit key codes in the keymap to UTF-8, and thus
        the argument of the "-m" parameter should be set to the encoding of the
        composed key codes in the keymap.</para>

      </listitem>
    </varlistentry>

    <varlistentry>
      <term>UNICODE</term>
      <listitem>
        <para>Set this variable to <quote>1</quote>, <quote>yes</quote> or
        <quote>true</quote> in order to put the
        console into UTF-8 mode. This is useful in UTF-8 based locales and
        harmful otherwise.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>LEGACY_CHARSET</term>
      <listitem>
        <para>For many keyboard layouts, there is no stock Unicode keymap in
        the Kbd package. The <command moreinfo="none">console</command> bootscript will
        convert an available keymap to UTF-8 on the fly if this variable is
        set to the encoding of the available non-UTF-8 keymap.</para>
      </listitem>
    </varlistentry>

  </variablelist>

  <para>Some examples:</para>

  <itemizedlist>

    <listitem>
      <para>For a non-Unicode setup, only the KEYMAP and FONT variables are
      generally needed. E.g., for a Polish setup, one would use:</para>
<screen role="nodump" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/sysconfig/console &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/sysconfig/console

KEYMAP="pl2"
FONT="lat2a-16 -m 8859-2"

# End /etc/sysconfig/console</literal>
EOF</userinput></screen>
    </listitem>

    <listitem>
      <para>As mentioned above, it is sometimes necessary to adjust a
      stock keymap slightly. The following example adds the Euro symbol to the
      German keymap:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/sysconfig/console &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/sysconfig/console

KEYMAP="de-latin1"
KEYMAP_CORRECTIONS="euro2"
FONT="lat0-16 -m 8859-15"
UNICODE="1"

# End /etc/sysconfig/console</literal>
EOF</userinput></screen>
    </listitem>

    <listitem>
      <para>The following is a Unicode-enabled example for Bulgarian, where a
      stock UTF-8 keymap exists:</para>
<!-- This is what is used by jhalfs for creating the console file: whenever
     you change the following, please inform the jhalfs maintainer(s). -->
<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/sysconfig/console &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/sysconfig/console

UNICODE="1"
KEYMAP="bg_bds-utf8"
FONT="LatArCyrHeb-16"

# End /etc/sysconfig/console</literal>
EOF</userinput></screen>
    </listitem>

    <listitem>
      <para>Due to the use of a 512-glyph LatArCyrHeb-16 font in the previous
      example, bright colors are no longer available on the Linux console unless
      a framebuffer is used. If one wants to have bright colors without a
      framebuffer and can live without characters not belonging to his language,
      it is still possible to use a language-specific 256-glyph font, as
      illustrated below:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/sysconfig/console &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/sysconfig/console

UNICODE="1"
KEYMAP="bg_bds-utf8"
FONT="cyr-sun16"

# End /etc/sysconfig/console</literal>
EOF</userinput></screen>
    </listitem>

    <listitem>
      <para>The following example illustrates keymap autoconversion from
      ISO-8859-15 to UTF-8 and enabling dead keys in Unicode mode:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/sysconfig/console &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/sysconfig/console

UNICODE="1"
KEYMAP="de-latin1"
KEYMAP_CORRECTIONS="euro2"
LEGACY_CHARSET="iso-8859-15"
FONT="LatArCyrHeb-16 -m 8859-15"

# End /etc/sysconfig/console</literal>
EOF</userinput></screen>
    </listitem>

    <listitem>
      <para>Some keymaps have dead keys (i.e., keys that don't produce a
      character by themselves, but put an accent on the character produced
      by the next key) or define composition rules (such as: <quote>press
      Ctrl+. A E to get Ã</quote> in the default keymap).
      Linux-5.13.12 interprets dead keys and composition rules in the
      keymap correctly only when the source characters to be composed together
      are not multibyte. This deficiency doesn't affect keymaps for European
      languages, because there accents are added to unaccented ASCII
      characters, or two ASCII characters are composed together. However, in
      UTF-8 mode it is a problem; e.g., for the Greek language, where one
      sometimes needs to put an accent on the letter <quote>alpha</quote>.
      The solution is either to avoid the use of UTF-8, or to install the
      X window system that doesn't have this limitation in its input
      handling.</para>
    </listitem>

    <listitem>
      <para>For Chinese, Japanese, Korean, and some other languages, the Linux
      console cannot be configured to display the needed characters. Users
      who need such languages should install the X Window System, fonts that
      cover the necessary character ranges, and the proper input method (e.g.,
      SCIM, supports a wide variety of languages).</para>
    </listitem>

  </itemizedlist>

  <!-- Added because folks keep posting their console file with X questions
  to blfs-support list -->
  <note>
    <para>The <filename moreinfo="none">/etc/sysconfig/console</filename> file only controls
    the Linux text console localization. It has nothing to do with setting
    the proper keyboard layout and terminal fonts in the X Window System, with
    ssh sessions, or with a serial console. In such situations, limitations
    mentioned in the last two list items above do not apply.</para>
  </note>

  </sect2>

  <sect2 id="ch-config-createfiles">
    <title>Creating Files at Boot</title>
  
    <indexterm zone="ch-config-createfiles" significance="normal">
      <primary sortas="d-createfiles">File creation at boot</primary>
      <secondary>configuring</secondary>
    </indexterm>
  
    <para>At times, it is desirable to create files at boot time.  For instance,
    the <filename class="directory" moreinfo="none">/tmp/.ICE-unix</filename> directory
    is often needed.  This can be done by creating an entry in the
    <filename moreinfo="none">/etc/sysconfig/createfiles</filename> configuration script.
    The format of this file is embedded in the comments of the default 
    configuration file.</para>
  </sect2>

  <sect2 id="ch-config-sysklogd">
    <title>Configuring the sysklogd Script</title>
  
    <indexterm zone="ch-config-sysklogd" significance="normal">
      <primary sortas="d-sysklogd">sysklogd</primary>
      <secondary>configuring</secondary>
    </indexterm>
  
    <para>The <filename moreinfo="none">sysklogd</filename> script invokes the
    <command moreinfo="none">syslogd</command> program as a part of System V initialization.  The
    <parameter moreinfo="none">-m 0</parameter> option turns off the periodic timestamp mark that
    <command moreinfo="none">syslogd</command> writes to the log files every 20 minutes by
    default.  If you want to turn on this periodic timestamp mark, edit
    <filename moreinfo="none">/etc/sysconfig/rc.site</filename> and define the variable
    SYSKLOGD_PARMS to the desired value.  For instance, to remove all parameters,
    set the variable to a null value:</para>

<screen role="nodump" format="linespecific">SYSKLOGD_PARMS=</screen>

    <para>See <userinput moreinfo="none">man syslogd</userinput> for more options.</para>

  </sect2>

  <sect2 id="ch-config-site">
    <title>The rc.site File</title>
  
    <indexterm zone="ch-config-site" significance="normal">
      <primary sortas="a-rc.site">rc.site</primary>
    </indexterm>
  
    <para>The optional <filename moreinfo="none">/etc/sysconfig/rc.site</filename> file contains
    settings that are automatically set for each SystemV boot script.  It can
    alternatively set the values specified in the <filename moreinfo="none">hostname</filename>,
    <filename moreinfo="none">console</filename>, and <filename moreinfo="none">clock</filename> files in the
    <filename class="directory" moreinfo="none">/etc/sysconfig/</filename> directory.  If the
    associated variables are present in both these separate files and
    <filename moreinfo="none">rc.site</filename>, the values in the script specific files have
    precedence. </para>
  
    <para><filename moreinfo="none">rc.site</filename> also contains parameters that can
    customize other aspects of the boot process.  Setting the IPROMPT variable
    will enable selective running of bootscripts.  Other options are described
    in the file comments.  The default version of the file is as follows:</para>
  
    <!-- Use role to fix a pdf generation problem -->
    <screen role="auto" format="linespecific"># rc.site
# Optional parameters for boot scripts.

# Distro Information
# These values, if specified here, override the defaults
#DISTRO="Linux From Scratch" # The distro name
#DISTRO_CONTACT="lfs-dev@linuxfromscratch.org" # Bug report address
#DISTRO_MINI="LFS" # Short name used in filenames for distro config

# Define custom colors used in messages printed to the screen

# Please consult `man console_codes` for more information
# under the "ECMA-48 Set Graphics Rendition" section
#
# Warning: when switching from a 8bit to a 9bit font,
# the linux console will reinterpret the bold (1;) to
# the top 256 glyphs of the 9bit font.  This does
# not affect framebuffer consoles

# These values, if specified here, override the defaults
#BRACKET="\\033[1;34m" # Blue
#FAILURE="\\033[1;31m" # Red
#INFO="\\033[1;36m"    # Cyan
#NORMAL="\\033[0;39m"  # Grey
#SUCCESS="\\033[1;32m" # Green
#WARNING="\\033[1;33m" # Yellow

# Use a colored prefix
# These values, if specified here, override the defaults
#BMPREFIX="      "
#SUCCESS_PREFIX="${SUCCESS}  *  ${NORMAL} "
#FAILURE_PREFIX="${FAILURE}*****${NORMAL} "
#WARNING_PREFIX="${WARNING} *** ${NORMAL} "

# Manually seet the right edge of message output (characters)
# Useful when resetting console font during boot to override
# automatic screen width detection
#COLUMNS=120

# Interactive startup
#IPROMPT="yes" # Whether to display the interactive boot prompt
#itime="3"    # The amount of time (in seconds) to display the prompt

# The total length of the distro welcome string, without escape codes
#wlen=$(echo "Welcome to ${DISTRO}" | wc -c )
#welcome_message="Welcome to ${INFO}${DISTRO}${NORMAL}"

# The total length of the interactive string, without escape codes
#ilen=$(echo "Press 'I' to enter interactive startup" | wc -c )
#i_message="Press '${FAILURE}I${NORMAL}' to enter interactive startup"

# Set scripts to skip the file system check on reboot
#FASTBOOT=yes

# Skip reading from the console
#HEADLESS=yes

# Write out fsck progress if yes
#VERBOSE_FSCK=no

# Speed up boot without waiting for settle in udev
#OMIT_UDEV_SETTLE=y

# Speed up boot without waiting for settle in udev_retry
#OMIT_UDEV_RETRY_SETTLE=yes

# Skip cleaning /tmp if yes
#SKIPTMPCLEAN=no

# For setclock
#UTC=1
#CLOCKPARAMS=

# For consolelog (Note that the default, 7=debug, is noisy)
#LOGLEVEL=7

# For network
#HOSTNAME=mylfs

# Delay between TERM and KILL signals at shutdown
#KILLDELAY=3

# Optional sysklogd parameters
#SYSKLOGD_PARMS="-m 0"

# Console parameters
#UNICODE=1
#KEYMAP="de-latin1"
#KEYMAP_CORRECTIONS="euro2"
#FONT="lat0-16 -m 8859-15"
#LEGACY_CHARSET=

</screen>
  
    <sect3>
      <title>Customizing the Boot and Shutdown Scripts</title>
  
      <para>The LFS boot scripts boot and shut down a system in a fairly
      efficient manner, but there are a few tweaks that you can make in the
      rc.site file to improve speed even more and to adjust messages according
      to your preferences. To do this, adjust the settings in
      the <filename moreinfo="none">/etc/sysconfig/rc.site</filename> file above.</para>
  
      <itemizedlist>
  
      <listitem><para>During the boot script <filename moreinfo="none">udev</filename>, there is
      a call to <command moreinfo="none">udev settle</command> that requires some time to
      complete. This time may or may not be required depending on devices present
      in the system.  If you only have simple partitions and a single ethernet
      card, the boot process will probably not need to wait for this command.  To
      skip it, set the variable OMIT_UDEV_SETTLE=y.</para></listitem>
  
      <listitem><para>The boot script <filename moreinfo="none">udev_retry</filename> also runs
      <command moreinfo="none">udev settle</command> by default.  This command is only needed by
      default if the <filename class="directory" moreinfo="none">/var</filename> directory is
      separately mounted.  This is because the clock needs the file
      <filename moreinfo="none">/var/lib/hwclock/adjtime</filename>.  Other customizations may
      also need to wait for udev to complete, but in many installations it is not
      needed.  Skip the command by setting the variable OMIT_UDEV_RETRY_SETTLE=y.
      </para></listitem>
  
      <listitem><para>By default, the file system checks are silent.  This can
      appear to be a delay during the bootup process.  To turn on the
      <command moreinfo="none">fsck</command> output, set the variable VERBOSE_FSCK=y.
      </para></listitem>
  
      <listitem><para>When rebooting, you may want to skip the filesystem check,
      <command moreinfo="none">fsck</command>, completely.  To do this, either create the file
      <filename moreinfo="none">/fastboot</filename> or reboot the system with the command
      <command moreinfo="none">/sbin/shutdown -f -r now</command>.  On the other hand, you can
      force all file systems to be checked by creating
      <filename moreinfo="none">/forcefsck</filename> or running <command moreinfo="none">shutdown</command> with
      the <parameter moreinfo="none">-F</parameter> parameter instead of <parameter moreinfo="none">-f</parameter>.
      </para>
  
      <para>Setting the variable FASTBOOT=y will disable <command moreinfo="none">fsck</command>
      during the boot process until it is removed.  This is not recommended
      on a permanent basis.</para></listitem>
  
      <listitem><para>Normally, all files in the <filename class="directory" moreinfo="none">/tmp</filename> directory are deleted at boot time.
      Depending on the number of files or directories present, this can cause a
      noticeable delay in the boot process.  To skip removing these files set the
      variable SKIPTMPCLEAN=y.</para></listitem>
  
      <listitem><para>During shutdown, the <command moreinfo="none">init</command> program sends
      a TERM signal to each program it has started (e.g. agetty), waits for a set
      time (default 3 seconds), and sends each process a KILL signal and waits
      again.  This process is repeated in the <command moreinfo="none">sendsignals</command>
      script for any processes that are not shut down by their own scripts.  The
      delay for <command moreinfo="none">init</command> can be set by passing a parameter.  For
      example to remove the delay in <command moreinfo="none">init</command>, pass the -t0
      parameter when shutting down or rebooting (e.g.  <command moreinfo="none">/sbin/shutdown
      -t0 -r now</command>).  The delay for the  <command moreinfo="none">sendsignals</command>
      script can be skipped by setting the parameter
      KILLDELAY=0.</para></listitem>
  
      </itemizedlist>
  
    </sect3>
  </sect2>
</sect1>
  <sect1 id="ch-config-profile" revision="sysv">
  <?dbhtml filename="profile.html"?>

  <title>The Bash Shell Startup Files</title>

  <indexterm zone="ch-config-profile" significance="normal">
    <primary sortas="e-/etc/profile">/etc/profile</primary>
  </indexterm>

  <para>The shell program <command moreinfo="none">/bin/bash</command> (hereafter referred to
  as <quote>the shell</quote>) uses a collection of startup files to help
  create an environment to run in. Each file has a specific use and may affect
  login and interactive environments differently. The files in the <filename class="directory" moreinfo="none">/etc</filename> directory provide global settings. If an
  equivalent file exists in the home directory, it may override the global
  settings.</para>

  <para>An interactive login shell is started after a successful login, using
  <command moreinfo="none">/bin/login</command>, by reading the <filename moreinfo="none">/etc/passwd</filename>
  file. An interactive non-login shell is started at the command-line (e.g.,
  <prompt moreinfo="none">[prompt]$</prompt><command moreinfo="none">/bin/bash</command>). A non-interactive
  shell is usually present when a shell script is running. It is non-interactive
  because it is processing a script and not waiting for user input between
  commands.</para>

  <para>For more information, see <command moreinfo="none">info bash</command> under the
  <emphasis>Bash Startup Files and Interactive Shells</emphasis> section.</para>

  <para>The files <filename moreinfo="none">/etc/profile</filename> and
  <filename moreinfo="none">~/.bash_profile</filename> are read when the shell is
  invoked as an interactive login shell.</para>

  <para>The base <filename moreinfo="none">/etc/profile</filename> below sets some
  environment variables necessary for native language support. Setting
  them properly results in:</para>

  <itemizedlist>
    <listitem>
      <para>The output of programs translated into the native language</para>
    </listitem>
    <listitem>
      <para>Correct classification of characters into letters, digits and other
      classes. This is necessary for <command moreinfo="none">bash</command> to properly accept
      non-ASCII characters in command lines in non-English locales</para>
    </listitem>
    <listitem>
      <para>The correct alphabetical sorting order for the country</para>
    </listitem>
    <listitem>
      <para>Appropriate default paper size</para>
    </listitem>
    <listitem>
      <para>Correct formatting of monetary, time, and date values</para>
    </listitem>
  </itemizedlist>

  <para>Replace <replaceable>&lt;ll&gt;</replaceable> below with the two-letter code
  for the desired language (e.g., <quote>en</quote>) and
  <replaceable>&lt;CC&gt;</replaceable> with the two-letter code for the appropriate
  country (e.g., <quote>GB</quote>). <replaceable>&lt;charmap&gt;</replaceable> should
  be replaced with the canonical charmap for your chosen locale. Optional
  modifiers such as <quote>@euro</quote> may also be present.</para>

  <para>The list of all locales supported by Glibc can be obtained by running
  the following command:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">locale -a</userinput></screen>

  <para>Charmaps can have a number of aliases, e.g., <quote>ISO-8859-1</quote>
  is also referred to as <quote>iso8859-1</quote> and <quote>iso88591</quote>.
  Some applications cannot handle the various synonyms correctly (e.g., require
  that <quote>UTF-8</quote> is written as <quote>UTF-8</quote>, not
  <quote>utf8</quote>), so it is safest in most
  cases to choose the canonical name for a particular locale. To determine
  the canonical name, run the following command, where <replaceable>&lt;locale
  name&gt;</replaceable> is the output given by <command moreinfo="none">locale -a</command> for
  your preferred locale (<quote>en_GB.iso88591</quote> in our example).</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">LC_ALL=<replaceable>&lt;locale name&gt;</replaceable> locale charmap</userinput></screen>

  <para>For the <quote>en_GB.iso88591</quote> locale, the above command
  will print:</para>

<screen format="linespecific"><computeroutput moreinfo="none">ISO-8859-1</computeroutput></screen>

  <para>This results in a final locale setting of <quote>en_GB.ISO-8859-1</quote>.
  It is important that the locale found using the heuristic above is tested prior
  to it being added to the Bash startup files:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">LC_ALL=&lt;locale name&gt; locale language
LC_ALL=&lt;locale name&gt; locale charmap
LC_ALL=&lt;locale name&gt; locale int_curr_symbol
LC_ALL=&lt;locale name&gt; locale int_prefix</userinput></screen>

  <para>The above commands should print the language name, the character
  encoding used by the locale, the local currency, and the prefix to dial
  before the telephone number in order to get into the country. If any of the
  commands above fail with a message similar to the one shown below, this means
  that your locale was either not installed in <xref linkend="ch-system-glibc"/> 
  or is not supported by the default installation of Glibc.</para>

<screen format="linespecific"><computeroutput moreinfo="none">locale: Cannot set LC_* to default locale: No such file or directory</computeroutput></screen>

  <para>If this happens, you should either install the desired locale using the
  <command moreinfo="none">localedef</command> command, or consider choosing a different locale.
  Further instructions assume that there are no such error messages from
  Glibc.</para>

  <!-- FIXME: the xlib example will became obsolete real soon -->
  <!--<para>Some packages beyond LFS may also lack support for your chosen locale. One
  example is the X library (part of the X Window System), which outputs the
  following error message if the locale does not exactly match one of the character
  map names in its internal files:</para>

<screen><computeroutput>Warning: locale not supported by Xlib, locale set to C</computeroutput></screen>

  <para>In several cases Xlib expects that the character map will be listed in
  uppercase notation with canonical dashes. For instance, "ISO-8859-1" rather
  than "iso88591". It is also  possible to find an appropriate specification by
  removing the charmap part of the locale specification.  This can be checked
  by running the <command>locale charmap</command> command in both locales.
  For example, one would have to change "de_DE.ISO-8859-15@euro" to
  "de_DE@euro" in order to get this locale recognized by Xlib.</para>
-->
  <para>Other packages can also function incorrectly (but may not necessarily
  display any error messages) if the locale name does not meet their expectations.
  In those cases, investigating how other Linux distributions support your locale
  might provide some useful information.</para>

  <para>Once the proper locale settings have been determined, create the
  <filename moreinfo="none">/etc/profile</filename> file:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/profile &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/profile

export LANG=<replaceable>&lt;ll&gt;_&lt;CC&gt;.&lt;charmap&gt;&lt;@modifiers&gt;</replaceable>

# End /etc/profile</literal>
EOF</userinput></screen>

  <para>The <quote>C</quote> (default) and <quote>en_US.utf8</quote> (the recommended
  one for United States English users) locales are different. <quote>C</quote>
  uses the US-ASCII 7-bit character set, and treats bytes with the high bit set
  as invalid characters. That's why, e.g., the <command moreinfo="none">ls</command> command
  substitutes them with question marks in that locale. Also, an attempt to send
  mail with such characters from Mutt or Pine results in non-RFC-conforming
  messages being sent (the charset in the outgoing mail is indicated as <quote>unknown
  8-bit</quote>). So you can use the <quote>C</quote> locale only if you are sure that
  you will never need 8-bit characters.</para>

  <para>UTF-8 based locales are not supported well by some programs.
  Work is in progress to document and, if possible, fix such problems, see
  <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/introduction/locale-issues.html"/>.</para>

</sect1>

  <!-- systemd -->
  
  
  

  <!-- common -->
  <sect1 id="ch-config-inputrc">
  <?dbhtml filename="inputrc.html"?>

  <title>Creating the /etc/inputrc File</title>

  <indexterm zone="ch-config-inputrc" significance="normal">
    <primary sortas="e-/etc/inputrc">/etc/inputrc</primary>
  </indexterm>

  <para>The <filename moreinfo="none">inputrc</filename> file is the configuration file for
  the readline library, which provides editing capabilities while the user is
  entering  a line from the terminal. It works by translating keyboard inputs
  into specific actions.  Readline is used by bash and most other shells as
  well as many other applications.</para>

  <para>Most people do not need user-specific functionality so the command
  below creates a global <filename moreinfo="none">/etc/inputrc</filename> used by everyone who
  logs in. If you later decide you need to override the defaults on a per user
  basis, you can create a <filename moreinfo="none">.inputrc</filename> file in the user's home
  directory with the modified mappings.</para>

  <para>For more information on how to edit the <filename moreinfo="none">inputrc</filename>
  file, see <command moreinfo="none">info bash</command> under the <emphasis>Readline Init
  File</emphasis> section. <command moreinfo="none">info readline</command> is also a good
  source of information.</para>

  <para>Below is a generic global <filename moreinfo="none">inputrc</filename> along with comments
  to explain what the various options do. Note that comments cannot be on the same
  line as commands. Create the file using the following command:</para>

<screen format="linespecific"><userinput moreinfo="none">cat &gt; /etc/inputrc &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/inputrc
# Modified by Chris Lynn &lt;roryo@roryo.dynup.net&gt;

# Allow the command prompt to wrap to the next line
set horizontal-scroll-mode Off

# Enable 8bit input
set meta-flag On
set input-meta On

# Turns off 8th bit stripping
set convert-meta Off

# Keep the 8th bit for display
set output-meta On

# none, visible or audible
set bell-style none

# All of the following map the escape sequence of the value
# contained in the 1st argument to the readline specific functions
"\eOd": backward-word
"\eOc": forward-word

# for linux console
"\e[1~": beginning-of-line
"\e[4~": end-of-line
"\e[5~": beginning-of-history
"\e[6~": end-of-history
"\e[3~": delete-char
"\e[2~": quoted-insert

# for xterm
"\eOH": beginning-of-line
"\eOF": end-of-line

# for Konsole
"\e[H": beginning-of-line
"\e[F": end-of-line

# End /etc/inputrc</literal>
EOF</userinput></screen>

</sect1>
  <sect1 id="ch-config-shells" xreflabel="Creating the /etc/shells File">
  <?dbhtml filename="etcshells.html"?>

  <title>Creating the /etc/shells File</title>

  <indexterm zone="ch-config-shells" significance="normal">
    <primary sortas="e-etc-shells">/etc/shells</primary>
  </indexterm>

  <para>The <filename moreinfo="none">shells</filename> file contains a list of
  login shells on the system. Applications use this file to determine
  whether a shell is valid. For each shell a single line should be
  present, consisting of the shell's path relative to the root of the
  directory structure (/).</para>

  <para>For example, this file is consulted by <command moreinfo="none">chsh</command>
  to determine whether an unprivileged user may change the login shell for her
  own account. If the command name is not listed, the user will be denied the
  ability to change shells.</para>

  <para>It is a requirement for applications such as
  <application moreinfo="none">GDM</application> which does not populate the
  face browser if it can't find <filename moreinfo="none">/etc/shells</filename>, or
  FTP daemons which traditionally disallow access to users
  with shells not included in this file.</para>

<screen role="root" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/shells &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/shells

/bin/sh
/bin/bash

# End /etc/shells</literal>
EOF</userinput></screen>

</sect1>

  <!-- systemd -->
  

</chapter>
<chapter id="chapter-bootable" xreflabel="Chapter&#xA0;10" xml:base="chapter10/chapter10.xml">
  <?dbhtml dir="chapter10"?>
  <?dbhtml filename="chapter10.html"?>

  <title>Making the LFS System Bootable</title>

  <sect1 id="ch-bootable-introduction">
  <?dbhtml filename="introduction.html"?>

  <title>Introduction</title>

  <para>It is time to make the LFS system bootable. This chapter
  discusses creating the <filename moreinfo="none">/etc/fstab</filename> file, building a
  kernel for the new LFS system, and installing the GRUB boot loader so
  that the LFS system can be selected for booting at startup.</para>

</sect1>
  <sect1 id="ch-bootable-fstab">
  <?dbhtml filename="fstab.html"?>

  <title>Creating the /etc/fstab File</title>

  <indexterm zone="ch-bootable-fstab" significance="normal">
    <primary sortas="e-/etc/fstab">/etc/fstab</primary>
  </indexterm>

  <para>The <filename moreinfo="none">/etc/fstab</filename> file is used by some programs to
  determine where file systems are to be mounted by default, in which order, and
  which must be checked (for integrity errors) prior to mounting. Create a new
  file systems table like this:</para>

<screen revision="sysv" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/fstab &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/fstab

# file system  mount-point  type     options             dump  fsck
#                                                              order

/dev/<replaceable>&lt;xxx&gt;</replaceable>     /            <replaceable>&lt;fff&gt;</replaceable>    defaults            1     1
/dev/<replaceable>&lt;yyy&gt;</replaceable>     swap         swap     pri=1               0     0
proc           /proc        proc     nosuid,noexec,nodev 0     0
sysfs          /sys         sysfs    nosuid,noexec,nodev 0     0
devpts         /dev/pts     devpts   gid=5,mode=620      0     0
tmpfs          /run         tmpfs    defaults            0     0
devtmpfs       /dev         devtmpfs mode=0755,nosuid    0     0

# End /etc/fstab</literal>
EOF</userinput></screen>



  <para>Replace <replaceable>&lt;xxx&gt;</replaceable>,
  <replaceable>&lt;yyy&gt;</replaceable>, and <replaceable>&lt;fff&gt;</replaceable>
  with the values appropriate for the system, for example, <filename class="partition" moreinfo="none">sda2</filename>, <filename class="partition" moreinfo="none">sda5</filename>, and <systemitem class="filesystem" moreinfo="none">ext4</systemitem>. For details on the six
  fields in this file, see <command moreinfo="none">man 5 fstab</command>.</para>

  <para>Filesystems with MS-DOS or Windows origin (i.e. vfat, ntfs, smbfs,
  cifs, iso9660, udf) need a special option, utf8, in order for non-ASCII
  characters in file names to be interpreted properly. For non-UTF-8 locales,
  the value of <option>iocharset</option> should be set to be the same as the
  character set of the locale, adjusted in such a way that the kernel
  understands it.  This works if the relevant character set definition (found
  under File systems -&gt; Native Language Support when configuring the kernel)
  has been compiled into the kernel or built as a module. However, if the
  character set of the locale is UTF-8, the corresponding option
  <option>iocharset=utf8</option> would make the file system case sensitive. To
  fix this, use the special option <option>utf8</option> instead of
  <option>iocharset=utf8</option>, for UTF-8 locales. The
  <quote>codepage</quote> option is also needed for vfat and smbfs filesystems.
  It should be set to the codepage number used under MS-DOS in your country.
  For example, in order to mount USB flash drives, a ru_RU.KOI8-R user would
  need the following in the options portion of its mount line in
  <filename moreinfo="none">/etc/fstab</filename>:</para>

<screen format="linespecific"><literal moreinfo="none">noauto,user,quiet,showexec,codepage=866,iocharset=koi8r</literal></screen>

  <para>The corresponding options fragment for ru_RU.UTF-8 users is:</para>

<screen format="linespecific"><literal moreinfo="none">noauto,user,quiet,showexec,codepage=866,utf8</literal></screen>

  <para>Note that using <option>iocharset</option> is the default for
  <literal moreinfo="none">iso8859-1</literal> (which keeps the file system case
  insensitive), and the <option>utf8</option> option tells
  the kernel to convert the file names using UTF-8 so they can be
  interpreted in the UTF-8 locale.</para>

  <!--note>
    <para>In the latter case, the kernel emits the following message:</para>

<screen><computeroutput>FAT: utf8 is not a recommended IO charset for FAT filesystems,
    filesystem will be case sensitive!</computeroutput></screen>

    <para>This negative recommendation should be ignored, since all other values
    of the <quote>iocharset</quote> option result in wrong display of filenames in
    UTF-8 locales.</para>
  </note-->

  <para>It is also possible to specify default codepage and iocharset values for
  some filesystems during kernel configuration. The relevant parameters
  are named
  <quote>Default NLS Option</quote> (<option>CONFIG_NLS_DEFAULT)</option>,
  <quote>Default Remote NLS Option</quote> (<option>CONFIG_SMB_NLS_DEFAULT</option>),
  <quote>Default codepage for FAT</quote> (<option>CONFIG_FAT_DEFAULT_CODEPAGE</option>), and
  <quote>Default iocharset for FAT</quote> (<option>CONFIG_FAT_DEFAULT_IOCHARSET</option>).
  There is no way to specify these settings for the
  ntfs filesystem at kernel compilation time.</para>

  <para>It is possible to make the ext3 filesystem reliable across power
  failures for some hard disk types.  To do this, add the
  <option>barrier=1</option> mount option to the appropriate entry in
  <filename moreinfo="none">/etc/fstab</filename>.  To check if the disk drive supports
  this option, run
  <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/hdparm.html">hdparm</ulink>
  on the applicable disk drive.  For example, if:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">hdparm -I /dev/sda | grep NCQ</userinput></screen>

  <para>returns non-empty output, the option is supported.</para>

  <para>Note: Logical Volume Management (LVM) based partitions cannot use the
  <option>barrier</option> option.</para>

</sect1>
  <sect1 id="ch-bootable-kernel" role="wrap">
  <?dbhtml filename="kernel.html"?>

  <sect1info condition="script">
    <productname class="trade">kernel</productname>
    <productnumber>5.13.12</productnumber>
    <address format="linespecific">https://www.kernel.org/pub/linux/kernel/v5.x/linux-5.13.12.tar.xz</address>
  </sect1info>

  <title>Linux-5.13.12</title>

  <indexterm zone="ch-bootable-kernel" significance="normal">
    <primary sortas="a-Linux">Linux</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Linux package contains the Linux kernel.</para>

    <segmentedlist>
      <segtitle>Approximate build time</segtitle>
      <segtitle>Required disk space</segtitle>

      <seglistitem>
        <seg>1.5 - 130.0 SBU (typically about 12 SBU)</seg>
        <seg>1200 - 8800 MB (typically about 1700 MB)</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of the kernel</title>

    <para>Building the kernel involves a few stepsâconfiguration,
    compilation, and installation. Read the <filename moreinfo="none">README</filename> file
    in the kernel source tree for alternative methods to the way this book
    configures the kernel.</para>

    <para>Prepare for compilation by running the following command:</para>

<screen format="linespecific"><userinput remap="pre" moreinfo="none">make mrproper</userinput></screen>

    <para>This ensures that the kernel tree is absolutely clean. The
    kernel team recommends that this command be issued prior to each
    kernel compilation. Do not rely on the source tree being clean after
    un-tarring.</para>

    <para>There are several ways to configure the kernel options. Usually,
    This is done through a menu-driven interface, for example:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">make menuconfig</userinput></screen>

    <variablelist>
      <title>The meaning of optional make environment variables:</title>

      <varlistentry>
        <term><parameter moreinfo="none">LANG=&lt;host_LANG_value&gt; LC_ALL=</parameter></term>
        <listitem>
          <para>This establishes the locale setting to the one used on the
          host.  This may be needed for a proper menuconfig ncurses interface
          line drawing on a UTF-8 linux text console.</para>

          <para>If used, be sure to replace
          <replaceable>&lt;host_LANG_value&gt;</replaceable> by the value of
          the <envar>$LANG</envar> variable from your host.  You can
          alternatively use instead the host's value of <envar>$LC_ALL</envar>
          or <envar>$LC_CTYPE</envar>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><command moreinfo="none">make menuconfig</command></term>
        <listitem>
          <para>This launches an ncurses menu-driven interface. For other
          (graphical) interfaces, type <command moreinfo="none">make help</command>.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <!-- Support for compiling a keymap into the kernel is deliberately removed -->

    <para>For general information on kernel configuration see <ulink url="https://www.linuxfromscratch.org/hints/downloads/files/kernel-configuration.txt"/>.  BLFS has some information
    regarding particular kernel configuration requirements of packages outside
    of LFS at <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/longindex.html#kernel-config-index"/>.  Additional
    information about configuring and building the kernel can be found at
    <ulink url="http://www.kroah.com/lkn/"/> </para>

    <note>
    
      <para>A good starting place for setting up the kernel configuration is to
      run <command moreinfo="none">make defconfig</command>. This will set the base
      configuration to a good state that takes your current system architecture
      into account.</para>

      <para>Be sure to enable/disable/set the following features or the system might
      not work correctly or boot at all:</para>

      <screen role="nodump" revision="sysv" format="linespecific">Device Drivers  ---&gt;
  Generic Driver Options  ---&gt;
   [ ] Support for uevent helper [CONFIG_UEVENT_HELPER]
   [*] Maintain a devtmpfs filesystem to mount at /dev [CONFIG_DEVTMPFS]</screen>

      
    </note>

    

    <para revision="sysv">There are several other options that may be desired
    depending on the requirements for the system. For a list of options needed
    for BLFS packages, see the <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/longindex.html#kernel-config-index">BLFS
    Index of Kernel Settings</ulink>
    (https://www.linuxfromscratch.org/blfs/view/11.0/longindex.html#kernel-config-index).</para>

    <note>
      <para>If your host hardware is using UEFI and you wish to boot the
      LFS system with it, you should adjust some kernel configuration
      following <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/grub-setup.html#uefi-kernel">
      the BLFS page</ulink>.</para>
    </note>

    <variablelist>
      <title>The rationale for the above configuration items:</title>

      <varlistentry>
        <term><parameter moreinfo="none">Support for uevent helper</parameter></term>
        <listitem>
          <para>Having this option set may interfere with device
          management when using Udev/Eudev. </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter moreinfo="none">Maintain a devtmpfs</parameter></term>
        <listitem>
          <para>This will create automated device nodes which are populated by the
          kernel, even without Udev running.  Udev then runs on top of this,
          managing permissions and adding symlinks.  This configuration
          item is required for all users of Udev/Eudev.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Alternatively, <command moreinfo="none">make oldconfig</command> may be more
    appropriate in some situations. See the <filename moreinfo="none">README</filename>
    file for more information.</para>

    <para>If desired, skip kernel configuration by copying the kernel
    config file, <filename moreinfo="none">.config</filename>, from the host system
    (assuming it is available) to the unpacked <filename class="directory" moreinfo="none">linux-5.13.12</filename> directory. However,
    we do not recommend this option. It is often better to explore all the
    configuration menus and create the kernel configuration from
    scratch.</para>

    <para>Compile the kernel image and modules:</para>

<screen format="linespecific"><userinput remap="make" moreinfo="none">make</userinput></screen>

    <para>If using kernel modules, module configuration in <filename class="directory" moreinfo="none">/etc/modprobe.d</filename> may be required.
    Information pertaining to modules and kernel configuration is
    located in <xref linkend="ch-config-udev"/> and in the kernel
    documentation in the <filename class="directory" moreinfo="none">linux-5.13.12/Documentation</filename> directory.
    Also, <filename moreinfo="none">modprobe.d(5)</filename> may be of interest.</para>

    <para>Unless module support has been disabled in the kernel configuration,
    install the modules with:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">make modules_install</userinput></screen>

    <para>After kernel compilation is complete, additional steps are
    required to complete the installation. Some files need to be copied to
    the <filename class="directory" moreinfo="none">/boot</filename> directory.</para>

    <caution>
      <para>If the host system has a separate /boot partition, the files copied
      below should go there. The easiest way to do that is to bind /boot on the
      host (outside chroot) to /mnt/lfs/boot before proceeding.  As the root
      user in the <emphasis>host system</emphasis>:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">mount --bind /boot /mnt/lfs/boot</userinput></screen>
    </caution>

    <para>The path to the kernel image may vary depending on the platform being
    used. The filename below can be changed to suit your taste, but the stem of
    the filename should be <emphasis>vmlinuz</emphasis> to be compatible with
    the automatic setup of the boot process described in the next section.  The
    following command assumes an x86 architecture:</para>

<screen revision="sysv" format="linespecific"><userinput remap="install" moreinfo="none">cp -iv arch/x86/boot/bzImage /boot/vmlinuz-5.13.12-lfs-11.0</userinput></screen>



    <para><filename moreinfo="none">System.map</filename> is a symbol file for the kernel.
    It maps the function entry points of every function in the kernel API,
    as well as the addresses of the kernel data structures for the running
    kernel.  It is used as a resource when investigating kernel problems.
    Issue the following command to install the map file:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">cp -iv System.map /boot/System.map-5.13.12</userinput></screen>

    <para>The kernel configuration file <filename moreinfo="none">.config</filename>
    produced by the <command moreinfo="none">make menuconfig</command> step
    above contains all the configuration selections for the kernel
    that was just compiled. It is a good idea to keep this file for future
    reference:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">cp -iv .config /boot/config-5.13.12</userinput></screen>

    <para>Install the documentation for the Linux kernel:</para>

<screen format="linespecific"><userinput remap="install" moreinfo="none">install -d /usr/share/doc/linux-5.13.12
cp -r Documentation/* /usr/share/doc/linux-5.13.12</userinput></screen>

    <para>It is important to note that the files in the kernel source
    directory are not owned by <emphasis>root</emphasis>. Whenever a
    package is unpacked as user <emphasis>root</emphasis> (like we did
    inside chroot), the files have the user and group IDs of whatever
    they were on the packager's computer. This is usually not a problem
    for any other package to be installed because the source tree is
    removed after the installation. However, the Linux source tree is
    often retained for a long time.  Because of this, there is a chance
    that whatever user ID the packager used will be assigned to somebody
    on the machine. That person would then have write access to the kernel
    source.</para>

    <note>
      <para>In many cases, the configuration of the kernel will need to be 
      updated for packages that will be installed later in BLFS.  Unlike
      other packages, it is not necessary to remove the kernel source tree
      after the newly built kernel is installed.</para>  
    
      <para>If the kernel source tree is going to be retained, run
      <command moreinfo="none">chown -R 0:0</command> on the <filename class="directory" moreinfo="none">linux-5.13.12</filename> directory to ensure
      all files are owned by user <emphasis>root</emphasis>.</para>
    </note>

    <warning>
      <para>Some kernel documentation recommends creating a symlink from
      <filename class="symlink" moreinfo="none">/usr/src/linux</filename> pointing to the kernel
      source directory.  This is specific to kernels prior to the 2.6 series and
      <emphasis>must not</emphasis> be created on an LFS system as it can cause
      problems for packages you may wish to build once your base LFS system is
      complete.</para>
    </warning>

    <warning>
      <para>The headers in the system's <filename class="directory" moreinfo="none">include</filename> directory (<filename class="directory" moreinfo="none">/usr/include</filename>) should
      <emphasis>always</emphasis> be the ones against which Glibc was compiled,
      that is, the sanitised headers installed in <xref linkend="ch-tools-linux-headers"/>.  Therefore, they should
      <emphasis>never</emphasis> be replaced by either the raw kernel headers
      or any other kernel sanitized headers.</para>
    </warning>

  </sect2>

  <sect2 id="conf-modprobe" role="configuration">
    <title>Configuring Linux Module Load Order</title>

    <indexterm zone="conf-modprobe" significance="normal">
      <primary sortas="e-/etc/modprobe.d/usb.conf">/etc/modprobe.d/usb.conf</primary>
    </indexterm>

    <para>Most of the time Linux modules are loaded automatically, but
    sometimes it needs some specific direction.  The program that loads
    modules, <command moreinfo="none">modprobe</command> or <command moreinfo="none">insmod</command>, uses
    <filename moreinfo="none">/etc/modprobe.d/usb.conf</filename> for this purpose.  This file
    needs to be created so that if the USB drivers (ehci_hcd, ohci_hcd and
    uhci_hcd) have been built as modules, they will be loaded in the correct
    order; ehci_hcd needs to be loaded prior to ohci_hcd and uhci_hcd in order
    to avoid a warning being output at boot time.</para>

    <para>Create a new file <filename moreinfo="none">/etc/modprobe.d/usb.conf</filename> by running
    the following:</para>

<screen format="linespecific"><userinput moreinfo="none">install -v -m755 -d /etc/modprobe.d
cat &gt; /etc/modprobe.d/usb.conf &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /etc/modprobe.d/usb.conf

install ohci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i ohci_hcd ; true
install uhci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i uhci_hcd ; true

# End /etc/modprobe.d/usb.conf</literal>
EOF</userinput></screen>

  </sect2>

  <sect2 id="contents-kernel" role="content">
    <title>Contents of Linux</title>

    <segmentedlist>
      <segtitle>Installed files</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>config-5.13.12,
        <phrase revision="sysv">vmlinuz-5.13.12-lfs-11.0,</phrase>
        
        and System.map-5.13.12</seg>
        <seg>/lib/modules, /usr/share/doc/linux-5.13.12</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="config">
        <term><filename moreinfo="none">config-5.13.12</filename></term>
        <listitem>
          <para>Contains all the configuration selections for the kernel</para>
          <indexterm zone="ch-bootable-kernel config" significance="normal">
            <primary sortas="e-/boot/config">/boot/config-5.13.12</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lfskernel">
        <term revision="sysv"><filename moreinfo="none">vmlinuz-5.13.12-lfs-11.0</filename></term>
        
        <listitem>
          <para>The engine of the Linux system. When turning on the computer,
          the kernel is the first part of the operating system that gets loaded.
          It detects and initializes all components of the computer's hardware,
          then makes these components available as a tree of files to the
          software and turns a single CPU into a multitasking machine capable
          of running scores of programs seemingly at the same time</para>
          <indexterm zone="ch-bootable-kernel lfskernel" significance="normal">
            <primary sortas="b-lfskernel">lfskernel-5.13.12</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="System.map">
        <term><filename moreinfo="none">System.map-5.13.12</filename></term>
        <listitem>
          <para>A list of addresses and symbols; it maps the entry points and
          addresses of all the functions and data structures in the
          kernel</para>
          <indexterm zone="ch-bootable-kernel System.map" significance="normal">
            <primary sortas="e-/boot/System.map">/boot/System.map-5.13.12</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
  <sect1 id="ch-bootable-grub" role="wrap">
  <?dbhtml filename="grub.html"?>

  <sect1info condition="script">
    <productname class="trade">grub</productname>
    <productnumber>2.06</productnumber>
    <address format="linespecific">https://ftp.gnu.org/gnu/grub/grub-2.06.tar.xz</address>
  </sect1info>

  <title>Using GRUB to Set Up the Boot Process</title>

  <note>
    <para>
      If your system has UEFI support and you wish to boot LFS with UEFI,
      you should skip this page, and config GRUB with UEFI support
      using the instructions provided in
      <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/grub-setup.html">the BLFS page</ulink>.
    </para>
  </note>

  <sect2>
    <title>Introduction</title>

    <warning><para>Configuring GRUB incorrectly can render your system
    inoperable without an alternate boot device such as a CD-ROM or bootable
    USB drive. This section is not required to boot your LFS system.  You may
    just want to modify your current boot loader, e.g. Grub-Legacy, GRUB2, or
    LILO.</para></warning>

    <para> Ensure that an emergency boot disk is ready to <quote>rescue</quote>
    the computer if the computer becomes unusable (un-bootable).  If you do not
    already have a boot device, you can create one.  In order for the procedure
    below to work, you need to jump ahead to BLFS and install
    <userinput moreinfo="none">xorriso</userinput> from the <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/multimedia/libisoburn.html">
    libisoburn</ulink> package.</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">cd /tmp 
grub-mkrescue --output=grub-img.iso 
xorriso -as cdrecord -v dev=/dev/cdrw blank=as_needed grub-img.iso</userinput></screen>

  </sect2>

  <sect2>
    <title>GRUB Naming Conventions</title>

    <para>GRUB uses its own naming structure for drives and partitions in
    the form of <emphasis>(hdn,m)</emphasis>, where <emphasis>n</emphasis>
    is the hard drive number and <emphasis>m</emphasis> is the partition
    number. The hard drive number starts from zero, but the partition number
    starts from one for normal partitions and five for extended partitions.
    Note that this is different from earlier versions where
    both numbers started from zero. For example, partition <filename class="partition" moreinfo="none">sda1</filename> is <emphasis>(hd0,1)</emphasis> to
    GRUB and <filename class="partition" moreinfo="none">sdb3</filename> is
    <emphasis>(hd1,3)</emphasis>. In contrast to Linux, GRUB does not
    consider CD-ROM drives to be hard drives. For example, if using a CD
    on <filename class="partition" moreinfo="none">hdb</filename> and a second hard drive
    on <filename class="partition" moreinfo="none">hdc</filename>, that second hard drive
    would still be <emphasis>(hd1)</emphasis>.</para>

  </sect2>

  <sect2>
    <title>Setting Up the Configuration</title>

    <para>GRUB works by writing data to the first physical track of the
    hard disk.  This area is not part of any file system.  The programs
    there access GRUB modules in the boot partition.  The default location
    is /boot/grub/.</para>

    <para>The location of the boot partition is a choice of the user that
    affects the configuration.  One recommendation is to have a separate small
    (suggested size is 200 MB) partition just for boot information.  That way
    each build, whether LFS or some commercial distro, can access the same boot
    files and access can be made from any booted system.  If you choose to do
    this, you will need to mount the separate partition, move all files in the
    current <filename class="directory" moreinfo="none">/boot</filename> directory (e.g. the
    linux kernel you just built in the previous section) to the new partition.
    You will then need to unmount the partition and remount it as <filename class="directory" moreinfo="none">/boot</filename>.  If you do this, be sure to update
    <filename moreinfo="none">/etc/fstab</filename>.</para>

    <para>Using the current lfs partition will also work, but configuration
    for multiple systems is more difficult.</para>

    <para>Using the above information, determine the appropriate
    designator for the root partition (or boot partition, if a separate
    one is used). For the following example, it is assumed that the root
    (or separate boot) partition is <filename class="partition" moreinfo="none">sda2</filename>.</para>

    <para>Install the GRUB files into <filename class="directory" moreinfo="none">/boot/grub</filename> and set up the boot track:</para>

    <warning>
      <para>The following command will overwrite the current boot loader. Do not
      run the command if this is not desired, for example, if using a third party
      boot manager to manage the Master Boot Record (MBR).</para>
    </warning>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">grub-install /dev/sda</userinput></screen>

    <note>
      <para>If the system has been booted using UEFI,
      <command moreinfo="none">grub-install</command> will try to install files for the
      <emphasis>x86_64-efi</emphasis> target, but those files
      have not been installed in <xref linkend="chapter-building-system"/>.
      If this is the case, add <option>--target i386-pc</option> to the
      command above.</para>
    </note>

<!-- This does not seem to be true any more
    <note><para><application>grub-install</application> is a script and calls another
    program, grub-probe, that may fail with a message "cannot stat `/dev/root'".
    If so, create a temporary symbolic link from your root partition to /dev/root:</para>

<screen role="nodump"><userinput>ln -sv /dev/sda2 /dev/root</userinput></screen>

    <para>The symbolic link will only be present until the system is rebooted.
    The link is only needed for the installation procedure.
    </para></note>
-->
  </sect2>

  <sect2 id="grub-cfg">
    <title>Creating the GRUB Configuration File</title>

    <para>Generate <filename moreinfo="none">/boot/grub/grub.cfg</filename>:</para>

    <screen revision="sysv" format="linespecific"><userinput moreinfo="none">cat &gt; /boot/grub/grub.cfg &lt;&lt; "EOF"
<literal moreinfo="none"># Begin /boot/grub/grub.cfg
set default=0
set timeout=5

insmod ext2
set root=(hd0,2)

menuentry "GNU/Linux, Linux 5.13.12-lfs-11.0" {
        linux   /boot/vmlinuz-5.13.12-lfs-11.0 root=/dev/sda2 ro
}</literal>
EOF</userinput></screen>

    


    <note><para>From <application moreinfo="none">GRUB</application>'s perspective, the
    kernel files are relative to the partition used.  If you
    used a separate /boot partition, remove /boot from the above
    <emphasis>linux</emphasis> line.  You will also need to change the
    <emphasis>set root</emphasis> line to point to the boot partition.
    </para></note>

    <para>GRUB is an extremely powerful program and it provides a tremendous
    number of options for booting from a wide variety of devices, operating
    systems, and partition types.  There are also many options for customization
    such as graphical splash screens, playing sounds, mouse input, etc.  The
    details of these options are beyond the scope of this introduction.</para>

    <caution><para>There is a command, <application moreinfo="none">grub-mkconfig</application>, that
    can write a configuration file automatically.  It uses a set of scripts in
    /etc/grub.d/ and will destroy any customizations that you make.  These scripts
    are designed primarily for non-source distributions and are not recommended for
    LFS.  If you install a commercial Linux distribution, there is a good chance
    that this program will be run.  Be sure to back up your grub.cfg file.</para></caution>

   </sect2>

</sect1>

</chapter>
<chapter id="chapter-finalizing" xreflabel="Chapter&#xA0;11" xml:base="chapter11/chapter11.xml">
  <?dbhtml dir="chapter11"?>
  <?dbhtml filename="chapter11.html"?>

  <title>The End</title>

  <sect1 id="ch-finish-theend">
  <?dbhtml filename="theend.html"?>

  <title>The End</title>

  <indexterm zone="ch-finish-theend" significance="normal">
    <primary sortas="e-/etc/lfs-release">/etc/lfs-release</primary>
  </indexterm>

  <indexterm zone="ch-finish-theend" significance="normal">
    <primary sortas="e-/etc/lsb-release">/etc/lsb-release</primary>
  </indexterm>

  <indexterm zone="ch-finish-theend" significance="normal">
    <primary sortas="e-/etc/os-release">/etc/os-release</primary>
  </indexterm>

  <para>Well done! The new LFS system is installed! We wish you much
  success with your shiny new custom-built Linux system.</para>

  <para>It may be a good idea to create an
  <filename moreinfo="none">/etc/lfs-release</filename> file. By having this file, it is very
  easy for you (and for us if you need to ask for help at some point) to find
  out which LFS version is installed on the system. Create this file by
  running:</para>

<screen revision="sysv" format="linespecific"><userinput moreinfo="none">echo 11.0 &gt; /etc/lfs-release</userinput></screen>



  <para>Two files describing the installed system may be used by packages
  that can be installed on the system later, either in binary form or by building
  them.</para>

  <para>The first one shows the status of your
  new system with respect to the Linux Standards Base (LSB).  To create
  this file, run:</para>

<screen revision="sysv" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/lsb-release &lt;&lt; "EOF"
DISTRIB_ID="Linux From Scratch"
DISTRIB_RELEASE="11.0"
DISTRIB_CODENAME="&lt;your name here&gt;"
DISTRIB_DESCRIPTION="Linux From Scratch"
EOF</userinput></screen>



  <para>The second one contains roughly the same information, and is used
  by systemd and some graphical desktop environments.  To create
  this file, run:</para>

<screen revision="sysv" format="linespecific"><userinput moreinfo="none">cat &gt; /etc/os-release &lt;&lt; "EOF"
NAME="Linux From Scratch"
VERSION="11.0"
ID=lfs
PRETTY_NAME="Linux From Scratch 11.0"
VERSION_CODENAME="&lt;your name here&gt;"
EOF</userinput></screen>



  <para>Be sure to put some sort of customization for the fields
  'DISTRIB_CODENAME' and 'VERSION_CODENAME' to make the system uniquely
  yours.</para>

</sect1>
  <sect1 id="ch-finish-getcounted">
  <?dbhtml filename="getcounted.html"?>

  <title>Get Counted</title>

  <para>Now that you have finished the book, do you want to be counted as an
  LFS user? Head over to <ulink url="https://www.linuxfromscratch.org/cgi-bin/lfscounter.php"/> and
  register as an LFS user by entering your name and the first LFS version you
  have used.</para>

  <para>Let's reboot into LFS now.</para>

</sect1>
  <sect1 id="ch-finish-reboot">
  <?dbhtml filename="reboot.html"?>

  <title>Rebooting the System</title>

  <para>Now that all of the software has been installed, it is time to reboot
  your computer. However, you should be aware of a few things. The system you
  have created in this book is quite minimal, and most likely will not have
  the functionality you would need to be able to continue forward. By installing
  a few extra packages from the BLFS book while still in our current chroot
  environment, you can leave yourself in a much better position to continue on
  once you reboot into your new LFS installation. Here are some suggestions:</para>

  <itemizedlist>

    <listitem><para>A text mode browser such as <ulink revision="sysv" url="https://www.linuxfromscratch.org/blfs/view/11.0/basicnet/lynx.html">Lynx</ulink>
    will allow you to easily view the BLFS book in one virtual terminal, while
    building packages in another.</para></listitem>

    <listitem><para>The <ulink revision="sysv" url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/make-ca.html">make-ca</ulink> package
    will allow you to set up local trusted anchor certificates, allowing
    the system to verify SSL certificates provided by remote servers (for
    example, a website using HTTPS).</para></listitem>

    <listitem><para>The <ulink revision="sysv" url="https://www.linuxfromscratch.org/blfs/view/11.0/general/gpm.html">GPM</ulink> package will allow
    you to perform copy/paste actions in your virtual
    terminals.</para></listitem>

    <listitem revision="sysv"><para>
    If you are in a situation where static IP configuration
    does not meet your networking requirements, installing a package
    such as <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/basicnet/dhcpcd.html">dhcpcd</ulink>
    or the client portion of <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/basicnet/dhcp.html">dhcp</ulink> may be
    useful.</para></listitem>

    <listitem><para>Installing <ulink revision="sysv" url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/sudo.html">sudo</ulink> may be useful for
    building packages as a non-root user and easily installing the resulting
    packages in your new system.</para></listitem>

    <listitem><para>If you want to access your new system from a remote system
    within a comfortable GUI environment, install <ulink revision="sysv" url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/openssh.html">openssh</ulink>. 
    </para></listitem>

    <listitem><para>To make fetching files over the internet easier, install
    <ulink revision="sysv" url="https://www.linuxfromscratch.org/blfs/view/11.0/basicnet/wget.html">wget</ulink>.
    </para></listitem>

    <listitem><para>To connect to a wireless access point for networking,
    install <ulink revision="sysv" url="https://www.linuxfromscratch.org/blfs/view/11.0/basicnet/wpa_supplicant.html">wpa_supplicant</ulink>.
    </para></listitem>

    <listitem><para>Finally, a review of the following configuration files
    is also appropriate at this point.</para>

      <itemizedlist>
        <listitem><para>/etc/bashrc                  </para></listitem>
        <listitem><para>/etc/dircolors               </para></listitem>
        <listitem><para>/etc/fstab                   </para></listitem>
        <listitem><para>/etc/hosts                   </para></listitem>
        <listitem><para>/etc/inputrc                 </para></listitem>
        <listitem><para>/etc/profile                 </para></listitem>
        <listitem><para>/etc/resolv.conf             </para></listitem>
        <listitem><para>/etc/vimrc                   </para></listitem>
        <listitem><para>/root/.bash_profile          </para></listitem>
        <listitem><para>/root/.bashrc                </para></listitem>
        <listitem revision="sysv"><para>/etc/sysconfig/ifconfig.eth0 </para></listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>

  <para>Now that we have said that, let's move on to booting our shiny new LFS
  installation for the first time! First exit from the chroot environment:</para>

<screen format="linespecific"><userinput moreinfo="none">logout</userinput></screen>

  <para>Unmount the LFS file system hierarchy:</para>

<screen format="linespecific"><userinput moreinfo="none">umount -Rv $LFS</userinput></screen>

  <para>Now, reboot the system with:</para>

<screen role="nodump" format="linespecific"><userinput moreinfo="none">shutdown -r now</userinput></screen>

  <para>Assuming the GRUB boot loader was set up as outlined earlier, the menu
  is set to boot <emphasis>LFS 11.0</emphasis> automatically.</para>

  <para>When the reboot is complete, the LFS system is ready for use and
  more software may be added to suit your needs.</para>

</sect1>
  <sect1 id="ch-finish-whatnow">
  <?dbhtml filename="whatnow.html"?>

  <title>What Now?</title>

  <para>Thank you for reading this LFS book. We hope that you have
  found this book helpful and have learned more about the system
  creation process.</para>

  <para>Now that the LFS system is installed, you may be wondering
  <quote>What next?</quote> To answer that question, we have compiled a
  list of resources for you.</para>

  <itemizedlist>

    <listitem>
      <para>Maintenance</para>

      <para>Bugs and security notices are reported regularly for all software.
      Since an LFS system is compiled from source, it is up to you to keep
      abreast of such reports.  There are several online resources that track
      such reports, some of which are shown below:</para>

      <itemizedlist>

        <listitem>
          <para><ulink url="http://www.cert.org/">CERT</ulink> (Computer
          Emergency Response Team)</para>

          <para>CERT has a mailing list that publishes security alerts concerning
          various operating systems and applications. Subscription information is
          available at <ulink url="http://www.us-cert.gov/cas/signup.html"/>.</para>
        </listitem>

        <listitem>
          <para>Bugtraq</para>

          <para>Bugtraq is a full-disclosure computer security mailing list. It
          publishes newly discovered security issues, and occasionally potential
          fixes for them. Subscription information is available at <ulink url="http://www.securityfocus.com/archive"/>.</para>
        </listitem>

      </itemizedlist>
    </listitem>

    <listitem>
      <para>Beyond Linux From Scratch</para>

      <para>The Beyond Linux From Scratch book covers installation
      procedures for a wide range of software beyond the scope of the LFS
      Book. The BLFS project is located at <ulink revision="sysv" url="https://www.linuxfromscratch.org/blfs/view/11.0/"/>.
      </para>
    </listitem>

    <listitem>
      <para>LFS Hints</para>

      <para>The LFS Hints are a collection of educational documents
      submitted by volunteers in the LFS community. The hints are available
      at <ulink url="https://www.linuxfromscratch.org/hints/downloads/files/"/>.</para>
    </listitem>

    <listitem>
      <para>Mailing lists</para>

      <para>There are several LFS mailing lists you may subscribe to if you
      are in need of help, want to stay current with the latest developments,
      want to contribute to the project, and more. See <xref linkend="ch-intro-maillists"/> for more
      information.</para>
    </listitem>

    <listitem>
      <para>The Linux Documentation Project</para>

      <para>The goal of The Linux Documentation Project (TLDP) is to
      collaborate on all of the issues of Linux documentation. The TLDP features
      a large collection of HOWTOs, guides, and man pages.  It is located at
      <ulink url="http://www.tldp.org/"/>.</para>
    </listitem>

  </itemizedlist>

</sect1>

</chapter>
</part>

<part id="part5">
<title>Appendices</title>
<?dbhtml filename="part5.html"?>
<appendix id="appendixa" xreflabel="Appendix A" xml:base="appendices/acronymlist.xml">
  <?dbhtml dir="appendices"?>
  <?dbhtml filename="acronymlist.html"?>

  <title>Acronyms and Terms</title>

  <variablelist>
    <?dbfo list-presentation="list"?>
    <?dbhtml list-presentation="table"?>

    <varlistentry>
      <term><emphasis role="bold">ABI</emphasis></term>
      <listitem>
        <para>Application Binary Interface</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">ALFS</emphasis></term>
      <listitem>
        <para>Automated Linux From Scratch</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">API</emphasis></term>
      <listitem>
        <para>Application Programming Interface</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">ASCII</emphasis></term>
      <listitem>
        <para>American Standard Code for Information Interchange</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">BIOS</emphasis></term>
      <listitem>
        <para>Basic Input/Output System</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">BLFS</emphasis></term>
      <listitem>
        <para>Beyond Linux From Scratch</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">BSD</emphasis></term>
      <listitem>
        <para>Berkeley Software Distribution</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">chroot</emphasis></term>
      <listitem>
        <para>change root</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">CMOS</emphasis></term>
      <listitem>
        <para>Complementary Metal Oxide Semiconductor</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">COS</emphasis></term>
      <listitem>
        <para>Class Of Service</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">CPU</emphasis></term>
      <listitem>
        <para>Central Processing Unit</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">CRC</emphasis></term>
      <listitem>
        <para>Cyclic Redundancy Check</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">CVS</emphasis></term>
      <listitem>
        <para>Concurrent Versions System</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">DHCP</emphasis></term>
      <listitem>
        <para>Dynamic Host Configuration Protocol</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">DNS</emphasis></term>
      <listitem>
        <para>Domain Name Service</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">EGA</emphasis></term>
      <listitem>
        <para>Enhanced Graphics Adapter</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">ELF</emphasis></term>
      <listitem>
        <para>Executable and Linkable Format</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">EOF</emphasis></term>
      <listitem>
        <para>End of File</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">EQN</emphasis></term>
      <listitem>
        <para>equation</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">ext2</emphasis></term>
      <listitem>
        <para>second extended file system</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">ext3</emphasis></term>
      <listitem>
        <para>third extended file system</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">ext4</emphasis></term>
      <listitem>
        <para>fourth extended file system</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">FAQ</emphasis></term>
      <listitem>
        <para>Frequently Asked Questions</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">FHS</emphasis></term>
      <listitem>
        <para>Filesystem Hierarchy Standard</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">FIFO</emphasis></term>
      <listitem>
        <para>First-In, First Out</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">FQDN</emphasis></term>
      <listitem>
        <para>Fully Qualified Domain Name</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">FTP</emphasis></term>
      <listitem>
        <para>File Transfer Protocol</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">GB</emphasis></term>
      <listitem>
        <para>Gigabytes</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">GCC</emphasis></term>
      <listitem>
        <para>GNU Compiler Collection</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">GID</emphasis></term>
      <listitem>
        <para>Group Identifier</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">GMT</emphasis></term>
      <listitem>
        <para>Greenwich Mean Time</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">HTML</emphasis></term>
      <listitem>
        <para>Hypertext Markup Language</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">IDE</emphasis></term>
      <listitem>
        <para>Integrated Drive Electronics</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">IEEE</emphasis></term>
      <listitem>
        <para>Institute of Electrical and Electronic Engineers</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">IO</emphasis></term>
      <listitem>
        <para>Input/Output</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">IP</emphasis></term>
      <listitem>
        <para>Internet Protocol</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">IPC</emphasis></term>
      <listitem>
        <para>Inter-Process Communication</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">IRC</emphasis></term>
      <listitem>
        <para>Internet Relay Chat</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">ISO</emphasis></term>
      <listitem>
        <para>International Organization for Standardization</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">ISP</emphasis></term>
      <listitem>
        <para>Internet Service Provider</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">KB</emphasis></term>
      <listitem>
        <para>Kilobytes</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">LED</emphasis></term>
      <listitem>
        <para>Light Emitting Diode</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">LFS</emphasis></term>
      <listitem>
        <para>Linux From Scratch</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">LSB</emphasis></term>
      <listitem>
        <para>Linux Standard Base</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">MB</emphasis></term>
      <listitem>
        <para>Megabytes</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">MBR</emphasis></term>
      <listitem>
        <para>Master Boot Record</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">MD5</emphasis></term>
      <listitem>
        <para>Message Digest 5</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">NIC</emphasis></term>
      <listitem>
        <para>Network Interface Card</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">NLS</emphasis></term>
      <listitem>
        <para>Native Language Support</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">NNTP</emphasis></term>
      <listitem>
        <para>Network News Transport Protocol</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">NPTL</emphasis></term>
      <listitem>
        <para>Native POSIX Threading Library</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">OSS</emphasis></term>
      <listitem>
        <para>Open Sound System</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">PCH</emphasis></term>
      <listitem>
        <para>Pre-Compiled Headers</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">PCRE</emphasis></term>
      <listitem>
        <para>Perl Compatible Regular Expression</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">PID</emphasis></term>
      <listitem>
        <para>Process Identifier</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">PTY</emphasis></term>
      <listitem>
        <para>pseudo terminal</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">QOS</emphasis></term>
      <listitem>
        <para>Quality Of Service</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">RAM</emphasis></term>
      <listitem>
        <para>Random Access Memory</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">RPC</emphasis></term>
      <listitem>
        <para>Remote Procedure Call</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">RTC</emphasis></term>
      <listitem>
        <para>Real Time Clock</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">SBU</emphasis></term>
      <listitem>
        <para>Standard Build Unit</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">SCO</emphasis></term>
      <listitem>
        <para>The Santa Cruz Operation</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">SHA1</emphasis></term>
      <listitem>
        <para>Secure-Hash Algorithm 1</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">TLDP</emphasis></term>
      <listitem>
        <para>The Linux Documentation Project</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">TFTP</emphasis></term>
      <listitem>
        <para>Trivial File Transfer Protocol</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">TLS</emphasis></term>
      <listitem>
        <para>Thread-Local Storage</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">UID</emphasis></term>
      <listitem>
        <para>User Identifier</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">umask</emphasis></term>
      <listitem>
        <para>user file-creation mask</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">USB</emphasis></term>
      <listitem>
        <para>Universal Serial Bus</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">UTC</emphasis></term>
      <listitem>
        <para>Coordinated Universal Time</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">UUID</emphasis></term>
      <listitem>
        <para>Universally Unique Identifier</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">VC</emphasis></term>
      <listitem>
        <para>Virtual Console</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">VGA</emphasis></term>
      <listitem>
        <para>Video Graphics Array</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><emphasis role="bold">VT</emphasis></term>
      <listitem>
        <para>Virtual Terminal</para>
      </listitem>
    </varlistentry>

  </variablelist>

</appendix>
<appendix id="appendixb" xreflabel="Appendix B" xml:base="appendices/acknowledgments.xml">
  <?dbhtml dir="appendices"?>
  <?dbhtml filename="acknowledgments.html"?>

  <title>Acknowledgments</title>

  <para>We would like to thank the following people and organizations
  for their contributions to the Linux From Scratch Project.</para>

  <itemizedlist>

    <listitem>
      <para><ulink url="mailto:gerard@linuxfromscratch.org">Gerard
      Beekmans</ulink> &lt;gerard@linuxfromscratch.org&gt; â
      LFS Creator</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:bdubbs@linuxfromscratch.org">Bruce
      Dubbs</ulink> &lt;bdubbs@linuxfromscratch.org&gt; â LFS Managing
      Editor</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:jim@linuxfromscratch.org">Jim
      Gifford</ulink> &lt;jim@linuxfromscratch.org&gt; â CLFS Project
      Co-Leader</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:pierre@linuxfromscratch.org">Pierre Labastie</ulink>
      &lt;pierre@linuxfromscratch.org&gt; â BLFS Editor and ALFS Lead</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:dj@linuxfromscratch.org">DJ Lucas</ulink>
      &lt;dj@linuxfromscratch.org&gt; â LFS and BLFS Editor</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:ken@linuxfromscratch.org">Ken Moffat</ulink>
      &lt;ken@linuxfromscratch.org&gt; â BLFS Editor</para>
    </listitem>

    <listitem>
      <para>Countless other people on the various LFS and BLFS mailing lists
      who helped make this book possible by giving their suggestions, testing
      the book, and submitting bug reports, instructions, and their
      experiences with installing various packages.</para>
    </listitem>

  </itemizedlist>

  <bridgehead renderas="sect2">Translators</bridgehead>

  <itemizedlist>

    <listitem>
      <para><ulink url="mailto:macana@macana-es.com">Manuel Canales
      Esparcia</ulink> &lt;macana@macana-es.com&gt; â Spanish
      LFS translation project</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:johan@linuxfromscratch.org">Johan
      Lenglet</ulink> &lt;johan@linuxfromscratch.org&gt; â French LFS
      translation project until 2008</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:jmengual@linuxfromscratch.org">Jean-Philippe 
      Mengual </ulink> &lt;jmengual@linuxfromscratch.org&gt; â French LFS
      translation project 2008-2016</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:jlepiller@linuxfromscratch.org">Julien 
      Lepiller </ulink> &lt;jlepiller@linuxfromscratch.org&gt; â French LFS
      translation project 2017-present</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:lizardo@linuxfromscratch.org">Anderson
      Lizardo</ulink> &lt;lizardo@linuxfromscratch.org&gt; â
      Portuguese LFS translation project</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:tr@erdfunkstelle.de">Thomas
      Reitelbach </ulink> &lt;tr@erdfunkstelle.de&gt; â German LFS
      translation project</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:info@linuxfromscratch.org.ru">Anton Maisak</ulink> 
      &lt;info@linuxfromscratch.org.ru&gt; â Russian LFS
      translation project</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:helen@linuxfromscratch.org.ru">Elena Shevcova</ulink> 
      &lt;helen@linuxfromscratch.org.ru&gt; â Russian LFS
      translation project</para>
    </listitem>

  </itemizedlist>

  <bridgehead renderas="sect2">Mirror Maintainers</bridgehead>

  <bridgehead renderas="sect3">North American Mirrors</bridgehead>

  <itemizedlist>

    <listitem>
      <para><ulink url="mailto:scott@osuosl.org">Scott Kveton</ulink>
      &lt;scott@osuosl.org&gt; â lfs.oregonstate.edu mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:lost@l-w.net">William Astle</ulink>
      &lt;lost@l-w.net&gt; â ca.linuxfromscratch.org mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:eujon.sellers@gmail.com">Eujon Sellers</ulink>
      &lt;jpolen@rackspace.com&gt; â lfs.introspeed.com mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:justin@knierim.org">Justin Knierim</ulink>
      &lt;tim@idge.net&gt; â lfs-matrix.net mirror</para>
    </listitem>

  </itemizedlist>

  <bridgehead renderas="sect3">South American Mirrors</bridgehead>

  <itemizedlist>

    <listitem>
      <para><ulink url="mailto:manuel@linuxfromscratch.org">Manuel
      Canales Esparcia</ulink> &lt;manuel@linuxfromscratch.org&gt; â
      lfsmirror.lfs-es.info mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:lfalcon@thymbra.com">Luis Falcon</ulink>
      &lt;Luis Falcon&gt; â torredehanoi.org mirror</para>
    </listitem>

  </itemizedlist>

  <bridgehead renderas="sect3">European Mirrors</bridgehead>

  <itemizedlist>

    <listitem>
      <para><ulink url="mailto:guido@primerelay.net">Guido Passet</ulink>
      &lt;guido@primerelay.net&gt; â nl.linuxfromscratch.org mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:baafie@planet.nl">Bastiaan Jacques</ulink>
      &lt;baafie@planet.nl&gt; â lfs.pagefault.net mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:sven.cranshoff@lineo.be">Sven Cranshoff</ulink>
      &lt;sven.cranshoff@lineo.be&gt; â lfs.lineo.be mirror</para>
    </listitem>

    <listitem>
      <para>Scarlet Belgium â lfs.scarlet.be mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:info@aliensoft.org">Sebastian Faulborn</ulink>
      &lt;info@aliensoft.org&gt; â lfs.aliensoft.org mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:stuart@dontuse.ms">Stuart Fox</ulink>
      &lt;stuart@dontuse.ms&gt; â lfs.dontuse.ms mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:admin@realhost.de">Ralf Uhlemann</ulink>
      &lt;admin@realhost.de&gt; â lfs.oss-mirror.org mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:Antonin.Sprinzl@tuwien.ac.at">Antonin
      Sprinzl</ulink> &lt;Antonin.Sprinzl@tuwien.ac.at&gt; â
      at.linuxfromscratch.org mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:fredan-lfs@fredan.org">Fredrik
      Danerklint</ulink> &lt;fredan-lfs@fredan.org&gt; â
      se.linuxfromscratch.org mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:franck@linuxpourtous.com">Franck</ulink>
      &lt;franck@linuxpourtous.com&gt; â lfs.linuxpourtous.com mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:baque@cict.fr">Philippe Baque</ulink>
      &lt;baque@cict.fr&gt; â lfs.cict.fr mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:gyouja@pilgrims.ru">Vitaly Chekasin</ulink>
      &lt;gyouja@pilgrims.ru&gt; â lfs.pilgrims.ru mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:kontakt@wankoo.org">Benjamin Heil</ulink>
      &lt;kontakt@wankoo.org&gt; â lfs.wankoo.org mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:info@linuxfromscratch.org.ru">Anton Maisak</ulink>
      &lt;info@linuxfromscratch.org.ru&gt; â linuxfromscratch.org.ru mirror</para>
    </listitem>

  </itemizedlist>

  <bridgehead renderas="sect3">Asian Mirrors</bridgehead>

  <itemizedlist>

    <listitem>
      <para><ulink url="mailto:satit@wbac.ac.th">Satit Phermsawang</ulink>
      &lt;satit@wbac.ac.th&gt; â lfs.phayoune.org mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:info@shizu-net.jp">Shizunet Co.,Ltd.</ulink>
      &lt;info@shizu-net.jp&gt; â lfs.mirror.shizu-net.jp mirror</para>
    </listitem>

    <listitem>
      <para><ulink url="http://www.initworld.com/">Init World</ulink>
      &lt;http://www.initworld.com/&gt; â lfs.initworld.com mirror</para>
    </listitem>

  </itemizedlist>

  <bridgehead renderas="sect3">Australian Mirrors</bridgehead>

  <itemizedlist>

    <listitem>
      <para><ulink url="mailto:jason@dstc.edu.au">Jason Andrade</ulink>
      &lt;jason@dstc.edu.au&gt; â au.linuxfromscratch.org mirror</para>
    </listitem>

  </itemizedlist>

  <bridgehead renderas="sect2">Former Project Team Members</bridgehead>

  <itemizedlist>

    <listitem>
      <para><ulink url="mailto:theladyskye@linuxfromscratch.org">Christine
      Barczak</ulink> &lt;theladyskye@linuxfromscratch.org&gt; â LFS
      Book Editor</para>
    </listitem>

    <listitem>
      <para>Archaic
      &lt;archaic@linuxfromscratch.org&gt; â LFS Technical Writer/Editor,
      HLFS Project Leader, BLFS Editor, Hints and Patches Project
      Maintainer</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:matthew@linuxfromscratch.org">Matthew
      Burgess</ulink> &lt;matthew@linuxfromscratch.org&gt; â
      LFS Project Leader, LFS Technical Writer/Editor</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:nathan@linuxfromscratch.org">Nathan
      Coulson</ulink> &lt;nathan@linuxfromscratch.org&gt; â
      LFS-Bootscripts Maintainer</para>
    </listitem>

    <listitem>
      <para>Timothy Bauscher</para>
    </listitem>

    <listitem>
      <para>Robert Briggs</para>
    </listitem>

    <listitem>
      <para>Ian Chilton</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:jeroen@linuxfromscratch.org">Jeroen
      Coumans</ulink> &lt;jeroen@linuxfromscratch.org&gt; â Website
      Developer, FAQ Maintainer</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:manuel@linuxfromscratch.org">Manuel
      Canales Esparcia</ulink> &lt;manuel@linuxfromscratch.org&gt; â
      LFS/BLFS/HLFS XML and XSL Maintainer</para>
    </listitem>

    <listitem>
      <para>Alex Groenewoud â LFS Technical Writer</para>
    </listitem>

    <listitem>
      <para>Marc Heerdink</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:jhuntwork@linuxfromscratch.org">Jeremy
      Huntwork</ulink> &lt;jhuntwork@linuxfromscratch.org&gt; â LFS
      Technical Writer, LFS LiveCD Maintainer</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:bryan@linuxfromscratch.org">Bryan
      Kadzban</ulink> &lt;bryan@linuxfromscratch.org&gt; â LFS
      Technical Writer</para>
    </listitem>

    <listitem>
      <para>Mark Hymers</para>
    </listitem>

    <listitem><para>Seth W. Klein â FAQ maintainer</para></listitem>

    <listitem>
      <para><ulink url="mailto:nicholas@linuxfromscratch.org">Nicholas
      Leippe</ulink> &lt;nicholas@linuxfromscratch.org&gt; â Wiki
      Maintainer</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:lizardo@linuxfromscratch.org">Anderson
      Lizardo</ulink> &lt;lizardo@linuxfromscratch.org&gt; â Website
      Backend-Scripts Maintainer</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:randy@linuxfromscratch.org">Randy
      McMurchy</ulink> &lt;randy@linuxfromscratch.org&gt; â BLFS
      Project Leader, LFS Editor</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:dnicholson@linuxfromscratch.org">Dan
      Nicholson</ulink> &lt;dnicholson@linuxfromscratch.org&gt; â LFS and
      BLFS Editor</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:alexander@linuxfromscratch.org">Alexander
      E. Patrakov</ulink> &lt;alexander@linuxfromscratch.org&gt; â LFS
      Technical Writer, LFS Internationalization Editor,
      LFS Live CD Maintainer</para>
    </listitem>

    <listitem>
      <para>Simon Perreault</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:scot@linuxfromscratch.org">Scot Mc
      Pherson</ulink> &lt;scot@linuxfromscratch.org&gt; â LFS NNTP
      Gateway Maintainer</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:renodr@linuxfromscratch.org">Douglas R. Reno</ulink>
      &lt;renodr@linuxfromscratch.org&gt; â Systemd Editor</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:ryan@linuxfromscratch.org">Ryan
      Oliver</ulink> &lt;ryan@linuxfromscratch.org&gt; â CLFS Project
      Co-Leader</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:gschafer@zip.com.au">Greg Schafer</ulink>
      &lt;gschafer@zip.com.au&gt; â LFS Technical Writer and
      Architect of the Next Generation 64-bit-enabling Build Method</para>
    </listitem>

    <listitem>
      <para>Jesse Tie-Ten-Quee â LFS Technical Writer</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:jwrober@linuxfromscratch.org">James
      Robertson</ulink> &lt;jwrober@linuxfromscratch.org&gt; â Bugzilla
      Maintainer</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:tushar@linuxfromscratch.org">Tushar
      Teredesai</ulink> &lt;tushar@linuxfromscratch.org&gt; â BLFS Book
      Editor, Hints and Patches Project Leader</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:jeremy@linuxfromscratch.org">Jeremy
      Utley</ulink> &lt;jeremy@linuxfromscratch.org&gt; â LFS Technical
      Writer, Bugzilla Maintainer, LFS-Bootscripts Maintainer</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:zwinkles@gmail.com">Zack Winkles</ulink>
      &lt;zwinkles@gmail.com&gt; â LFS Technical Writer</para>
    </listitem>

  </itemizedlist>

<!--
  <bridgehead renderas="sect2">A very special thank you to our
  donators</bridgehead>

  <itemizedlist>

    <listitem>
      <para><ulink url="mailto:dean@vipersoft.co.uk">Dean Benson</ulink>
      &lt;dean@vipersoft.co.uk&gt; for several monetary contributions</para>
    </listitem>

    <listitem>
      <para><ulink url="mailto:hrx@hrxnet.de">Hagen Herrschaft</ulink>
      &lt;hrx@hrxnet.de&gt; for donating a 2.2 GHz P4 system, now running
      under the name of Lorien</para>
    </listitem>

    <listitem>
      <para><ulink url="http://www.seocompany.ca/">SEO Company Canada</ulink>
      supports Open Source projects and different Linux distributions</para>
    </listitem>

    <listitem>
      <para><ulink url="http://www.vasoftware.com">VA Software</ulink> who,
      on behalf of <ulink url="http://www.linux.com">Linux.com</ulink>,
      donated a VA Linux 420 (former StartX SP2) workstation</para>
    </listitem>

    <listitem>
      <para>Mark Stone for donating Belgarath, the first linuxfromscratch.org
      server</para>
    </listitem>

  </itemizedlist>
-->
</appendix>
<appendix id="appendixc" xreflabel="Appendix C" xml:base="appendices/dependencies.xml">
  <?dbhtml dir="appendices"?>
  <?dbhtml filename="dependencies.html"?>

  <title>Dependencies</title>

  <para>Every package built in LFS relies on one or more other packages in
  order to build and install properly. Some packages even participate in
  circular dependencies, that is, the first package depends on the second which
  in turn depends on the first. Because of these dependencies, the order in
  which packages are built in LFS is very important. The purpose of this page
  is to document the dependencies of each package built in LFS.</para>

  <para>For each package that is built, there are three, and sometimes up to
  five types of dependencies listed below. The first lists what other packages
  need to be available in order to compile and install the package in question.
  The second lists the packages that must be available when any programs or
  libraries from the package are used at runtime. The third lists what packages,
  in addition to those on the first list, need to be available in order to run
  the test suites. The fourth list of dependencies are packages that require
  this package to be built and installed in its final location before they are
  built and installed. In most cases, this is because these packages will hard
  code paths to binaries within their scripts. If not built in a certain order,
  this could result in paths of /tools/bin/[binary] being placed inside scripts
  installed to the final system. This is obviously not desirable.</para>

  <para>The last list of dependencies are optional packages that are not
  addressed in LFS, but could be useful to the user. These packages may have
  additional mandatory or optional dependencies of their own. For these
  dependencies, the recommended practice is to install them after completion of
  the LFS book and then go back and rebuild the LFS package. In several cases,
  re-installation is addressed in BLFS.</para>

<!-- Begin Acl dependency info -->
  <bridgehead renderas="sect2" id="acl-dep">Acl</bridgehead>

      <segmentedlist id="acl-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Attr, Bash, Binutils, Coreutils, GCC,  Gettext, Grep, M4, Make,
          Perl, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="acl-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Attr and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="acl-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Automake, Diffutils, Findutils, and
          Libtool</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="acl-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Coreutils, Sed, Tar, and Vim</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="acl-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Attr dependency info -->
  <bridgehead renderas="sect2" id="attr-dep">Attr</bridgehead>

      <segmentedlist id="attr-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Gettext, Glibc, Grep, M4, Make,
          Perl, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="attr-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="attr-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Automake, Diffutils, Findutils, and Libtool</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="attr-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Acl and Libcap</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="attr-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Autoconf dependency info -->
  <bridgehead renderas="sect2" id="autoconf-dep">Autoconf</bridgehead>

      <segmentedlist id="autoconf-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Coreutils, Grep, M4, Make, Perl, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="autoconf-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash, Coreutils, Grep, M4, Make, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="autoconf-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Automake, Diffutils, Findutils, GCC, and Libtool</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="autoconf-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Automake</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="autoconf-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/emacs.html">Emacs</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Automake dependency info -->
  <bridgehead renderas="sect2" id="automake-dep">Automake</bridgehead>

      <segmentedlist id="automake-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Autoconf, Bash, Coreutils, Gettext, Grep, M4, Make, Perl, Sed,
          and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="automake-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash, Coreutils, Grep, M4, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="automake-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Binutils, Bison, Bzip2, DejaGNU, Diffutils, Expect, Findutils,
          Flex, GCC, Gettext, Gzip, Libtool, and Tar</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="automake-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="automake-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Bash dependency info -->
  <bridgehead renderas="sect2" id="bash-dep">Bash</bridgehead>

      <segmentedlist id="bash-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Bison, Coreutils, Diffutils, Gawk, GCC, Glibc,
          Grep, Make, Ncurses, Patch, Readline, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bash-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc, Ncurses, and Readline</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bash-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Expect and Shadow</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bash-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bash-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/x/installing.html">Xorg</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Bc dependency info -->
  <bridgehead renderas="sect2" id="bc-dep">Bc</bridgehead>

      <segmentedlist id="bc-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Glibc, Grep, and Make</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bc-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc, Ncurses, and Readline</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bc-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Gawk</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bc-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bc-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Binutils dependency info -->
  <bridgehead renderas="sect2" id="binutils-dep">Binutils</bridgehead>

      <segmentedlist id="binutils-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, File, Flex, Gawk, GCC,
          Glibc, Grep, Make, Perl, Sed, Texinfo, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="binutils-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="binutils-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>DejaGNU and Expect</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="binutils-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="binutils-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://sourceware.org/elfutils/">Elfutils</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Bison dependency info -->
  <bridgehead renderas="sect2" id="bison-dep">Bison</bridgehead>

      <segmentedlist id="bison-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Gettext, Glibc, Grep, M4, Make,
          Perl, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bison-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bison-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Diffutils, Findutils, and Flex</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bison-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Kbd and Tar</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bison-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/doxygen.html">Doxygen</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Bzip2 dependency info -->
  <bridgehead renderas="sect2" id="bzip2-dep">Bzip2</bridgehead>

      <segmentedlist id="bzip2-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, GCC, Glibc, Make, and
          Patch</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bzip2-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bzip2-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bzip2-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>File</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="bzip2-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Check dependency info -->
  <bridgehead renderas="sect2" id="check-dep">Check</bridgehead>

      <segmentedlist id="check-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Gawk, GCC, Grep, Make, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="check-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash and Gawk</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="check-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="check-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="check-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Coreutils dependency info -->
  <bridgehead renderas="sect2" id="coreutils-dep">Coreutils</bridgehead>

      <segmentedlist id="coreutils-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Gettext, Glibc, GMP, Grep,
          Libcap, Make, Patch, Perl, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="coreutils-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="coreutils-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Diffutils, E2fsprogs, Findutils, Shadow, and  Util-linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="coreutils-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Bash, Diffutils, Eudev, Findutils, and Man-DB</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="coreutils-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://metacpan.org/pod/Expect">Expect.pm</ulink>
            and 
            <ulink url="https://metacpan.org/pod/IO::Tty">IO::Tty</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin D-Bus dependency info -->
<!--
  <bridgehead renderas="sect2" id="dbus-dep">D-Bus</bridgehead>

      <segmentedlist>
        <segtitle>&dependencies;</segtitle>

        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, Gawk, GCC, Glibc, Grep,
          Make, Sed, and Util-linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist>
        <segtitle>&testsuites;</segtitle>

        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist>
        <segtitle>&before;</segtitle>

        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist>
        <segtitle>&external;</segtitle>

        <seglistitem>
          <seg>Xorg Libs</seg>
        </seglistitem>
      </segmentedlist>
-->
<!-- Begin DejaGNU dependency info -->
  <bridgehead renderas="sect2" id="dejagnu-dep">DejaGNU</bridgehead>

      <segmentedlist id="dejagnu-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Coreutils, Diffutils, Expect, GCC, Grep, Make, Sed, and
          Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="dejagnu-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Expect and Bash</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="dejagnu-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="dejagnu-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="dejagnu-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Diffutils dependency info -->
  <bridgehead renderas="sect2" id="diffutils-dep">Diffutils</bridgehead>

      <segmentedlist id="diffutils-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Gawk, GCC, Gettext, Glibc, Grep,
          Make, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="diffutils-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="diffutils-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Perl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="diffutils-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="diffutils-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin E2fsprogs dependency info -->
  <bridgehead renderas="sect2" id="e2fsprogs-dep">E2fsprogs</bridgehead>

      <segmentedlist id="e2fsprogs-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, Gawk, GCC, Glibc, Grep,
          Gzip, Make, Sed, Texinfo, and Util-linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="e2fsprogs-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Util-linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="e2fsprogs-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Procps-ng and Psmisc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="e2fsprogs-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="e2fsprogs-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Eudev dependency info -->
  <bridgehead renderas="sect2" id="eudev-dep">Eudev</bridgehead>

      <segmentedlist id="eudev-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Gawk, GCC, Glibc, Grep, Gperf, Make,
          Sed, and Util-linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="eudev-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc, Kmod, Xz, Util-linux, and Zlib.</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="eudev-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="eudev-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="eudev-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Expat dependency info -->
  <bridgehead renderas="sect2" id="expat-dep">Expat</bridgehead>

      <segmentedlist id="expat-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Gawk, GCC, Glibc, Grep, Make, and
          Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="expat-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="expat-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="expat-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Python and XML::Parser</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="expat-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Expect dependency info -->
  <bridgehead renderas="sect2" id="expect-dep">Expect</bridgehead>

      <segmentedlist id="expect-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, GCC, Glibc, Grep, Make,
          Patch, Sed, and Tcl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="expect-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Tcl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="expect-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="expect-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="expect-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/tk.html">Tk</ulink>
          </seg>  
        </seglistitem>
      </segmentedlist>

<!-- Begin File dependency info -->
  <bridgehead renderas="sect2" id="file-dep">File</bridgehead>

      <segmentedlist id="file-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Bzip2, Coreutils, Diffutils, Gawk, GCC, Glibc,
          Grep, Make, Sed, Xz, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="file-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc, Bzip2, Xz, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="file-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="file-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="file-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libseccomp.html">libseccomp</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Findutils dependency info -->
  <bridgehead renderas="sect2" id="findutils-dep">Findutils</bridgehead>

      <segmentedlist id="findutils-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Gettext, Glibc, Grep, Make, Sed,
          and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="findutils-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="findutils-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>DejaGNU, Diffutils, and Expect</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="findutils-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="findutils-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Flex dependency info -->
  <bridgehead renderas="sect2" id="flex-dep">Flex</bridgehead>

      <segmentedlist id="flex-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Gettext, Glibc, Grep, M4, Make,
          Patch, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="flex-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash, Glibc, and M4</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="flex-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Bison and Gawk</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="flex-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Binutils, IProute2, Kbd, Kmod, and Man-DB</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="flex-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Gawk dependency info -->
  <bridgehead renderas="sect2" id="gawk-dep">Gawk</bridgehead>

      <segmentedlist id="gawk-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Gettext, Glibc, GMP, Grep, Make,
          MPFR, Patch, Readline, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gawk-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash, Glibc, and Mpfr</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gawk-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Diffutils</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gawk-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gawk-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libsigsegv.html">libsigsegv</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin GCC dependency info -->
  <bridgehead renderas="sect2" id="gcc-dep">GCC</bridgehead>

      <segmentedlist id="gcc-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, Findutils, Gawk, GCC,
          Gettext, Glibc, GMP, Grep, M4, Make, MPC, MPFR, Patch, Perl, Sed,
          Tar, Texinfo, and Zstd</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gcc-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Glibc, Mpc, and Python</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gcc-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>DejaGNU, Expect, and Shadow</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gcc-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gcc-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
             <ulink url="http://gcc.gnu.org/wiki/GNAT">GNAT</ulink>
             and
             <ulink url="https://repo.or.cz/isl.git">ISL</ulink> 
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin GDBM dependency info -->
  <bridgehead renderas="sect2" id="gdbm">GDBM</bridgehead>

      <segmentedlist id="gdbm-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, GCC, Grep, Make, and
          Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gdbm-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash, Glibc, and Readline</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gdbm-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gdbm-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gdbm-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Gettext dependency info -->
  <bridgehead renderas="sect2" id="gettext-dep">Gettext</bridgehead>

      <segmentedlist id="gettext-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Gawk, GCC, Glibc, Grep, Make, Ncurses,
          Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gettext-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Acl, Bash, Gcc, and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gettext-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Diffutils, Perl, and Tcl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gettext-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Automake and Bison</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gettext-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Glibc dependency info -->
  <bridgehead renderas="sect2" id="glibc-dep">Glibc</bridgehead>

      <segmentedlist id="glibc-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Bison, Coreutils, Diffutils, Gawk, GCC, Gettext,
          Grep, Gzip, Linux API Headers, Make, Perl, Python, Sed, and
          Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="glibc-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="glibc-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>File</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="glibc-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="glibc-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin GMP dependency info -->
  <bridgehead renderas="sect2" id="gmp-dep">GMP</bridgehead>

      <segmentedlist id="gmp-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, Gawk, GCC, Glibc, Grep, M4,
          Make, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gmp-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>GCC and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gmp-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gmp-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>MPFR and GCC</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gmp-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Gperf dependency info -->
  <bridgehead renderas="sect2" id="gperf-dep">Gperf</bridgehead>

      <segmentedlist id="gperf-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
         <seg>Bash, Binutils, Coreutils, GCC, Glibc, and Make</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gperf-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>GCC and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gperf-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Diffutils and Expect</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gperf-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gperf-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Grep dependency info -->
  <bridgehead renderas="sect2" id="grep-dep">Grep</bridgehead>

      <segmentedlist id="grep-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, GCC, Gettext, Glibc, Grep,
          Make, Patch, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="grep-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="grep-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Gawk</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="grep-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Man-DB</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="grep-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/pcre.html">PCRE</ulink>
            and
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libsigsegv.html">libsigsegv</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Groff dependency info -->
  <bridgehead renderas="sect2" id="groff-dep">Groff</bridgehead>

      <segmentedlist id="groff-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Bison, Coreutils, Gawk, GCC, Glibc, Grep, Make,
          Patch, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="groff-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>GCC, Glibc, and Perl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="groff-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="groff-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Man-DB and Perl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="groff-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/pst/gs.html">ghostscript</ulink>
            and
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/uchardet.html">Uchardet</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin GRUB dependency info -->
  <bridgehead renderas="sect2" id="grub-dep">GRUB</bridgehead>

      <segmentedlist id="grub-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Bison, Coreutils, Diffutils, GCC, Gettext, Glibc,
          Grep, Make, Ncurses, Sed, Texinfo, and Xz</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="grub-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash, GCC, Gettext, Glibc, Xz, and Sed.</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="grub-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="grub-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="grub-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Gzip dependency info -->
  <bridgehead renderas="sect2" id="gzip-dep">Gzip</bridgehead>

      <segmentedlist id="gzip-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Glibc, Grep, Make, Sed, and
          Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gzip-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gzip-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Diffutils and Less</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gzip-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Man-DB</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="gzip-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Iana-Etc dependency info -->
  <bridgehead renderas="sect2" id="iana-etc-dep">Iana-Etc</bridgehead>

      <segmentedlist id="iana-etc-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
         <seg>Coreutils</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="iana-etc-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="iana-etc-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="iana-etc-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Perl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="iana-etc-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Inetutils dependency info -->
  <bridgehead renderas="sect2" id="inetutils-dep">Inetutils</bridgehead>

      <segmentedlist id="inetutils-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Glibc, Grep, Make, Ncurses,
          Patch, Sed, Texinfo, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="inetutils-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>GCC, Glibc, Ncurses, and Readline</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="inetutils-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="inetutils-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Tar</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="inetutils-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Intltool dependency info -->
  <bridgehead renderas="sect2" id="intltool-dep">Intltool</bridgehead>

      <segmentedlist id="intltool-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Gawk, Glibc, Make, Perl, Sed, and XML::Parser</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="intltool-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Autoconf, Automake, Bash, Glibc, Grep, Perl, and
          Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="intltool-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Perl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="intltool-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="intltool-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin IProute2 dependency info -->
  <bridgehead renderas="sect2" id="iproute2-dep">IProute2</bridgehead>

      <segmentedlist id="iproute2-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
         <seg>Bash, Bison, Coreutils, Flex, GCC, Glibc, Make, Libcap, Libelf,
         Linux API Headers, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="iproute2-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash, Coreutils, Glibc, Libcap, Libelf, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="iproute2-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="iproute2-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="iproute2-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/server/db.html">Berkeley DB</ulink>
            and
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/iptables.html">iptables</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Jinja2 dependency info -->
  <bridgehead renderas="sect2" id="jinja2-dep">Jinja2</bridgehead>

      <segmentedlist id="jinja2-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>MarkupSafe and Python</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="jinja2-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>MarkupSafe and Python</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="jinja2-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="jinja2-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Systemd</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="jinja2-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Kbd dependency info -->
  <bridgehead renderas="sect2" id="kbd-dep">Kbd</bridgehead>

      <segmentedlist id="kbd-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
         <seg>Bash, Binutils, Bison, Check, Coreutils, Flex, GCC, Gettext,
         Glibc, Gzip, Make, Patch, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="kbd-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash, Coreutils, and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="kbd-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="kbd-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="kbd-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Kmod dependency info -->
  <bridgehead renderas="sect2" id="kmod-dep">Kmod</bridgehead>

      <segmentedlist id="kmod-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Bison, Coreutils, Flex, GCC, Gettext, Glibc,
          Gzip, Make, Pkg-config, Sed, Xz, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="kmod-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc, Xz, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="kmod-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="kmod-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Eudev</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="kmod-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Less dependency info -->
  <bridgehead renderas="sect2" id="less-dep">Less</bridgehead>

      <segmentedlist id="less-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, GCC, Glibc, Grep, Make,
          Ncurses, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="less-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Ncurses</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="less-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="less-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Gzip</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="less-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/pcre.html">PCRE</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Libcap dependency info -->
  <bridgehead renderas="sect2" id="libcap-dep">Libcap</bridgehead>

      <segmentedlist id="libcap-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Attr, Bash, Binutils, Coreutils, GCC, Glibc, Perl, Make, and
          Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libcap-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libcap-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libcap-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>IProute2 and Shadow</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libcap-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/linux-pam.html">Linux-PAM</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Libelf dependency info -->
  <bridgehead renderas="sect2" id="libelf-dep">Libelf</bridgehead>

      <segmentedlist id="libelf-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Glibc, and Make</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libelf-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libelf-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libelf-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>IProute2 and Linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libelf-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Libffi dependency info -->
  <bridgehead renderas="sect2" id="libffi-dep">Libffi</bridgehead>

      <segmentedlist id="libffi-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
         <seg>Bash, Binutils, Coreutils, GCC, Glibc, Make,
         and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libffi-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libffi-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>DejaGnu</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libffi-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Python</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libffi-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Libpipeline dependency info -->
  <bridgehead renderas="sect2" id="libpipeline-dep">Libpipeline</bridgehead>

      <segmentedlist id="libpipeline-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, Gawk, GCC, Glibc, Grep,
          Make, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libpipeline-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libpipeline-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Check</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libpipeline-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Man-DB</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libpipeline-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Libtool dependency info -->
  <bridgehead renderas="sect2" id="libtool-dep">Libtool</bridgehead>

      <segmentedlist id="libtool-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, Gawk, GCC, Glibc, Grep,
          Make, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libtool-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Autoconf, Automake, Bash, Binutils, Coreutils, File, GCC, Glibc,
          Grep, Make, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libtool-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Autoconf, Automake, and Findutils</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libtool-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="libtool-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Linux dependency info -->
  <bridgehead renderas="sect2" id="linux-dep">Linux</bridgehead>

      <segmentedlist id="linux-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Bc, Binutils, Coreutils, Diffutils, Findutils, GCC, Glibc,
          Grep, Gzip, Kmod, Libelf, Make, Ncurses, OpenSSL, Perl, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="linux-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="linux-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="linux-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="linux-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Linux dependency info -->
  <bridgehead renderas="sect2" id="linux-api-headers-dep">Linux API Headers</bridgehead>

      <segmentedlist id="linux-api-headers-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Findutils, GCC, Glibc, Grep, Gzip,
          Make, Perl, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="linux-api-headers-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="linux-api-headers-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="linux-api-headers-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="linux-api-headers-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin M4 dependency info -->
  <bridgehead renderas="sect2" id="m4-dep">M4</bridgehead>

      <segmentedlist id="m4-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Glibc, Grep, Make, Sed, and
          Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="m4-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="m4-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Diffutils</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="m4-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Autoconf and Bison</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="m4-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libsigsegv.html">libsigsegv</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Make dependency info -->
  <bridgehead renderas="sect2" id="make-dep">Make</bridgehead>

      <segmentedlist id="make-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Gettext, Glibc, Grep, Make, Sed,
          and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="make-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="make-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Perl and Procps-ng</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="make-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="make-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/guile.html">Guile</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Man-DB dependency info -->
  <bridgehead renderas="sect2" id="man-db-dep">Man-DB</bridgehead>

      <segmentedlist id="man-db-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Bzip2, Coreutils, Flex, GCC, GDBM, Gettext,
          Glibc, Grep, Groff, Gzip, Less, Libpipeline, Make, Sed, and Xz</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="man-db-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bash, GDBM, Groff, Glibc, Gzip, Less, Libpipeline, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="man-db-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Util-linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="man-db-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="man-db-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libseccomp.html">libseccomp</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Man-Pages dependency info -->
  <bridgehead renderas="sect2" id="man-pages-dep">Man-Pages</bridgehead>

      <segmentedlist id="man-pages-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
         <seg>Bash, Coreutils, and Make</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="man-pages-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="man-pages-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="man-pages-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="man-pages-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin MarkupSafe dependency info -->
  <bridgehead renderas="sect2" id="markupsafe-dep">MarkupSafe</bridgehead>

      <segmentedlist id="markupsafe-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Python</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="markupsafe-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Python</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="markupsafe-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="markupsafe-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Jinja2</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="markupsafe-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Meson dependency info -->
  <bridgehead renderas="sect2" id="meson-dep">Meson</bridgehead>

      <segmentedlist id="meson-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Ninja and Python</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="meson-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Python</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="meson-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="meson-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Systemd</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="meson-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin MPC dependency info -->
  <bridgehead renderas="sect2" id="mpc-dep">MPC</bridgehead>

      <segmentedlist id="mpc-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, Gawk, GCC, Glibc, Grep,
          GMP, Make, MPFR, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="mpc-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc, GMP, and MPFR</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="mpc-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="mpc-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>GCC</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="mpc-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin MPFR dependency info -->
  <bridgehead renderas="sect2" id="mpfr-dep">MPFR</bridgehead>

      <segmentedlist id="mpfr-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, Gawk, GCC, Glibc, Grep,
          GMP, Make, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="mpfr-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and GMP</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="mpfr-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="mpfr-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Gawk and GCC</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="mpfr-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Ncurses dependency info -->
  <bridgehead renderas="sect2" id="ncurses-dep">Ncurses</bridgehead>

      <segmentedlist id="ncurses-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, Gawk, GCC, Glibc, Grep,
          Make, Patch, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="ncurses-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="ncurses-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="ncurses-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Bash, GRUB, Inetutils, Less, Procps-ng, Psmisc, Readline,
          Texinfo, Util-linux, and Vim</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="ncurses-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Ninja dependency info -->
  <bridgehead renderas="sect2" id="ninja-dep">Ninja</bridgehead>

      <segmentedlist id="ninja-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Binutils, Coreutils, GCC, and Python</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="ninja-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>GCC and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="ninja-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="ninja-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Meson</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="ninja-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/asciidoc.html">Asciidoc</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/doxygen.html">Doxygen</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/emacs.html">Emacs</ulink>, and
            <ulink url="https://re2c.org/">re2c</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Openssl dependency info -->
  <bridgehead renderas="sect2" id="openssl-dep">Openssl</bridgehead>

      <segmentedlist id="openssl-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Binutils, Coreutils, GCC, Make, and Perl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="openssl-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Perl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="openssl-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="openssl-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="openssl-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Patch dependency info -->
  <bridgehead renderas="sect2" id="patch-dep">Patch</bridgehead>

      <segmentedlist id="patch-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Glibc, Grep, Make, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="patch-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Patch</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="patch-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Diffutils</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="patch-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="patch-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/ed.html">Ed</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Perl dependency info -->
  <bridgehead renderas="sect2" id="perl-dep">Perl</bridgehead>

      <segmentedlist id="perl-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Gawk, GCC, GDBM, Glibc, Grep, Groff,
          Make, Sed, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="perl-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>GDBM and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="perl-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Iana-Etc, Less. and Procps-ng</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="perl-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Autoconf</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="perl-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/server/db.html">Berkeley DB</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Pkg-config dependency info -->
  <bridgehead renderas="sect2" id="pkgconfig-dep">Pkg-config</bridgehead>

      <segmentedlist id="pkgconfig-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Gawk, GCC, Glibc, Grep, Make, Popt,
          and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="pkgconfig-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="pkgconfig-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="pkgoonfig-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Kmod</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="pkgconfig-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Procps dependency info -->
  <bridgehead renderas="sect2" id="procps-dep">Procps-ng</bridgehead>

      <segmentedlist id="procps-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Glibc, Make, and Ncurses</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="procps-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="procps-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>DejaGNU</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="procps-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="procps-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Psmisc dependency info -->
  <bridgehead renderas="sect2" id="psmisc-dep">Psmisc</bridgehead>

      <segmentedlist id="psmisc-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Gettext, Glibc, Grep, Make,
          Ncurses, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="psmisc-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Ncurses</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="psmisc-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="psmisc-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="psmisc-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Python dependency info -->
  <bridgehead renderas="sect2" id="python-dep">Python</bridgehead>

      <segmentedlist id="python-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Expat, GCC, Gdbm, Gettext, Glibc,
          Grep, Libffi, Make, Ncurses, OpenSSL, Sed, and Util-linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="python-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Bzip2, Expat, Gdbm, Glibc, Libffi, Ncurses, OpenSSL, and
          Zlib</seg>
        </seglistitem>
      </segmentedlist>
        

      <segmentedlist id="python-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>GDB and Valgrind</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="python-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Ninja</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="python-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/server/db.html">Berkeley DB</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/basicnet/libnsl.html">libnsl</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/server/sqlite.html">SQLite</ulink>, and
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/tk.html">Tk</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Readline dependency info -->
  <bridgehead renderas="sect2" id="readline-dep">Readline</bridgehead>

      <segmentedlist id="readline-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Gawk, GCC, Glibc, Grep, Make, Ncurses,
          Patch, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="readline-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Ncurses</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="readline-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="readline-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Bash and Gawk</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="readline-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Sed dependency info -->
  <bridgehead renderas="sect2" id="sed-dep">Sed</bridgehead>

      <segmentedlist id="sed-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Gettext, Glibc, Grep, Make, Sed,
          and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sed-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Acl, Attr, and Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sed-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Diffutils and Gawk</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sed-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>E2fsprogs, File, Libtool, and Shadow</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sed-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Shadow dependency info -->
  <bridgehead renderas="sect2" id="shadow-dep">Shadow</bridgehead>

      <segmentedlist id="shadow-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Acl, Attr, Bash, Binutils, Coreutils, Diffutils, Findutils, Gawk,
          GCC, Gettext, Glibc, Grep, Libcap, Make, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="shadow-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="shadow-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="shadow-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Coreutils</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="shadow-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/cracklib.html">CrackLib</ulink>
            and
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/linux-pam.html">Linux-PAM</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Sysklogd dependency info -->
  <bridgehead renderas="sect2" id="sysklogd-dep">Sysklogd</bridgehead>

      <segmentedlist id="sysklogd-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Binutils, Coreutils, GCC, Glibc, Make, and Patch</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sysklogd-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sysklogd-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sysklogd-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sysklogd-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin systemd dependency info -->
  <bridgehead renderas="sect2" id="systemd-dep">Systemd</bridgehead>

      <segmentedlist id="systemd-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
         <seg>Acl, Attr, Bash, Binutils, Coreutils, Diffutils, Expat, Gawk,
         GCC, Glibc, Gperf, Grep, Intltool, Jinja2, Libcap, Meson, Sed, and
         Util-linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="systemd-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Acl, Attr, Glibc, Libcap, and Util-linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="systemd-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="systemd-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="systemd-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/btrfs-progs.html">btrfs-progs</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/basicnet/curl.html">cURL</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/cryptsetup.html">cryptsetup</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/pst/docbook.html">docbook-xml</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/pst/docbook-xsl.html">docbook-xsl-nons</ulink>,
            <ulink url="https://sourceware.org/elfutils/">elfutils</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/git.html">Git</ulink>,
            <ulink url="https://sourceforge.net/projects/gnu-efi/">gnu-efi</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/gnutls.html">GnuTLS</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/iptables.html">iptables</ulink>,
            <ulink url="https://www.kernel.org/pub/linux/utils/kernel/kexec/">
              kexec-tools</ulink>,
            <ulink url="https://developers.yubico.com/libfido2/">libfido2</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libgcrypt.html">libgcrypt</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libidn2.html">libidn2</ulink>,
            <ulink url="https://www.gnu.org/software/libmicrohttpd/">
              Libmicrohttpd</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/libpwquality.html">libpwquality</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libseccomp.html">libseccomp</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libxkbcommon.html">libxkbcommon</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/libxslt.html">libxslt</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/linux-pam.html">Linux-PAM</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/python-modules.html#lxml">lxml</ulink>,
            <ulink url="http://lz4.github.io/lz4/">LZ4</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/make-ca.html">make-ca</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/p11-kit.html">p11-kit</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/pcre2.html">PCRE2</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/polkit.html">Polkit</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/qemu.html">qemu</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/qrencode.html">qrencode</ulink>,
            <ulink url="https://sourceforge.net/projects/linuxquota/">
              quota-tools</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/basicnet/rsync.html">rsync</ulink>,
            <ulink url="https://pypi.python.org/pypi/Sphinx">Sphinx</ulink>,
            <ulink url="https://tpm2-tss.readthedocs.io/en/latest/">
              tpm2-tss</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/valgrind.html">Valgrind</ulink>,
            and
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/zsh.html">zsh</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Sysvinit dependency info -->
  <bridgehead renderas="sect2" id="sysvinit-dep">Sysvinit</bridgehead>

      <segmentedlist id="sysvinit-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Binutils, Coreutils, GCC, Glibc, Make, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sysvinit-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sysvinit-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>No test suite available</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sysvinit-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="sysvinit-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Tar dependency info -->
  <bridgehead renderas="sect2" id="tar-dep">Tar</bridgehead>

      <segmentedlist id="tar-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Acl, Attr, Bash, Binutils, Bison, Coreutils, GCC, Gettext, Glibc,
          Grep, Inetutils, Make, Sed, and Texinfo</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="tar-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Acl, Attr, Bzip2, Glibc, Gzip, and Xz</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="tar-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Autoconf, Diffutils, Findutils, Gawk, and
          Gzip</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="tar-befors">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="tar-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Tcl dependency info -->
  <bridgehead renderas="sect2" id="tcl-dep">Tcl</bridgehead>

      <segmentedlist id="tcl-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, GCC, Glibc, Grep, Make, and
          Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="tcl-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="tcl-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="tcl-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="tcl-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Texinfo dependency info -->
  <bridgehead renderas="sect2" id="texinfo-dep">Texinfo</bridgehead>

      <segmentedlist id="texinfo-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Gettext, Glibc, Grep, Make,
          Ncurses, Patch, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="texinfo-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc and Ncurses</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="texinfo-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="texinfo-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="texinfo-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Util-linux dependency info -->
  <bridgehead renderas="sect2" id="util-linux-dep">Util-linux</bridgehead>

      <segmentedlist id="util-linux-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, Eudev, Findutils, Gawk,
          GCC, Gettext, Glibc, Grep, Libcap, Make, Ncurses, Sed, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="util-linux-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc, Libcap, Ncurses, Readline, and Zlib</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="util-linux-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="util-linux-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="util-linux-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/postlfs/smartmontools.html">smartmontools</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Vim dependency info -->
  <bridgehead renderas="sect2" id="vim-dep">Vim</bridgehead>

      <segmentedlist id="vim-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Acl, Attr, Bash, Binutils, Coreutils, Diffutils, GCC, Glibc,
          Grep, Make, Ncurses, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="vim-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Acl, Attr, Glibc, Python, Ncurses, and Tcl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="vim-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="vim-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="vim-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/x/installing.html">Xorg</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/x/gtk2.html">GTK+2</ulink>,
            <ulink url="http://lesstif.sourceforge.net/">LessTif</ulink>,
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/ruby.html">Ruby</ulink>, and
            <ulink url="https://www.linuxfromscratch.org/blfs/view/11.0/general/gpm.html">GPM</ulink>
          </seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin XML::Parser dependency info -->
  <bridgehead renderas="sect2" id="xml-parser-dep">XML::Parser</bridgehead>

      <segmentedlist id="xml-parser-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Expat, GCC, Glibc, Make, and
          Perl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="xml-parser-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Expat, Glibc, and Perl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="xml-parser-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>Perl</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="xml-parser-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Intltool</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="xml-parser-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Xz-utils dependency info -->
  <bridgehead renderas="sect2" id="xz-dep">Xz</bridgehead>

      <segmentedlist id="xz-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, Diffutils, GCC, Glibc, and Make</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="xz-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="xz-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="xz-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>Eudev, File, GRUB, Kmod, and Man-DB</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="xz-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Zlib dependency info -->
  <bridgehead renderas="sect2" id="zlib-dep">Zlib</bridgehead>

      <segmentedlist id="zlib-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Bash, Binutils, Coreutils, GCC, Glibc, Make, and Sed</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="zlib-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="zlib-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="zlib-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>File, Kmod, Perl, and Util-linux</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="zlib-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

<!-- Begin Zstd dependency info -->
  <bridgehead renderas="sect2" id="zstd-dep">Zstd</bridgehead>

      <segmentedlist id="zstd-depends">
        <segtitle>Installation depends on</segtitle>
        <seglistitem>
          <seg>Binutils, Coreutils, GCC, Glibc, Gzip, Make, and Xz</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="zstd-rundeps">
        <segtitle>Required at runtime</segtitle>
        <seglistitem>
          <seg>Glibc</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="zstd-testdeps">
        <segtitle>Test suite depends on</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="zstd-before">
        <segtitle>Must be installed before</segtitle>
        <seglistitem>
          <seg>GCC</seg>
        </seglistitem>
      </segmentedlist>

      <segmentedlist id="zstd-optdeps">
        <segtitle>Optional dependencies</segtitle>
        <seglistitem>
          <seg>None</seg>
        </seglistitem>
      </segmentedlist>

</appendix>

<!-- sysv only -->
<appendix id="scripts" xreflabel="Appendix D" revision="sysv" xml:base="appendices/scripts.xml">
  <?dbhtml dir="scripts"?>
  <?dbhtml filename="scripts.html"?>

  <title>Boot and sysconfig scripts version-20210608</title>

  <para>The scripts in this appendix are listed by the directory where they
  normally reside.  The order is <filename class="directory" moreinfo="none">/etc/rc.d/init.d</filename>, <filename class="directory" moreinfo="none">/etc/sysconfig</filename>, <filename class="directory" moreinfo="none">/etc/sysconfig/network-devices</filename>, and <filename class="directory" moreinfo="none">/etc/sysconfig/network-devices/services</filename>.  Within
  each section, the files are listed in the order they are normally called.
  </para>

  <sect1 id="rc" role="wrap">
    <title>/etc/rc.d/init.d/rc</title>

    <para>The <systemitem moreinfo="none">rc</systemitem> script is the first script called by
    <application moreinfo="none">init</application> and initiates the boot process.</para>

    <screen format="linespecific">#!/bin/bash
########################################################################
# Begin rc
#
# Description : Main Run Level Control Script
#
# Authors     : Gerard Beekmans  - gerard@linuxfromscratch.org
#             : DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

. /lib/lsb/init-functions

print_error_msg()
{
   log_failure_msg
   # $i is set when called
   MSG="FAILURE:\n\nYou should not be reading this error message.\n\n" 
   MSG="${MSG}It means that an unforeseen error took place in\n"
   MSG="${MSG}${i},\n"
   MSG="${MSG}which exited with a return value of ${error_value}.\n"
  
   MSG="${MSG}If you're able to track this error down to a bug in one of\n"
   MSG="${MSG}the files provided by the ${DISTRO_MINI} book,\n"
   MSG="${MSG}please be so kind to inform us at ${DISTRO_CONTACT}.\n"
   log_failure_msg "${MSG}"

   log_info_msg "Press Enter to continue..."
   wait_for_user
}

check_script_status()
{
   # $i is set when called
   if [ ! -f ${i} ]; then
      log_warning_msg "${i} is not a valid symlink." 
      SCRIPT_STAT="1"
   fi

   if [ ! -x ${i} ]; then
      log_warning_msg "${i} is not executable, skipping."
      SCRIPT_STAT="1"
   fi
}

run()
{
   if [ -z $interactive ]; then
      ${1} ${2}
      return $?
   fi

   while true; do
      read -p "Run ${1} ${2} (Yes/no/continue)? " -n 1 runit
      echo

      case ${runit} in
         c | C)
            interactive=""
            ${i} ${2}
            ret=${?}
            break;
            ;;

         n | N)
            return 0
            ;;

         y | Y)
            ${i} ${2}
            ret=${?}
            break
            ;;
      esac
   done

   return $ret
}

# Read any local settings/overrides
[ -r /etc/sysconfig/rc.site ] &amp;&amp; source /etc/sysconfig/rc.site

DISTRO=${DISTRO:-"Linux From Scratch"}
DISTRO_CONTACT=${DISTRO_CONTACT:-"lfs-dev@linuxfromscratch.org (Registration required)"}
DISTRO_MINI=${DISTRO_MINI:-"LFS"}
IPROMPT=${IPROMPT:-"no"}

# These 3 signals will not cause our script to exit
trap "" INT QUIT TSTP

[ "${1}" != "" ] &amp;&amp; runlevel=${1}

if [ "${runlevel}" == "" ]; then
   echo "Usage: ${0} &lt;runlevel&gt;" &gt;&amp;2
   exit 1
fi

previous=${PREVLEVEL}
[ "${previous}" == "" ] &amp;&amp; previous=N

if [ ! -d /etc/rc.d/rc${runlevel}.d ]; then
   log_info_msg "/etc/rc.d/rc${runlevel}.d does not exist.\n" 
   exit 1
fi

if [ "$runlevel" == "6" -o "$runlevel" == "0" ]; then IPROMPT="no"; fi

# Note: In ${LOGLEVEL:-7}, it is ':' 'dash' '7', not minus 7
if [ "$runlevel" == "S" ]; then 
   [ -r /etc/sysconfig/console ] &amp;&amp; source /etc/sysconfig/console 
   dmesg -n "${LOGLEVEL:-7}" 
fi

if [ "${IPROMPT}" == "yes" -a "${runlevel}" == "S" ]; then
   # The total length of the distro welcome string, without escape codes
   wlen=${wlen:-$(echo "Welcome to ${DISTRO}" | wc -c )}
   welcome_message=${welcome_message:-"Welcome to ${INFO}${DISTRO}${NORMAL}"}

   # The total length of the interactive string, without escape codes
   ilen=${ilen:-$(echo "Press 'I' to enter interactive startup" | wc -c )}
   i_message=${i_message:-"Press '${FAILURE}I${NORMAL}' to enter interactive startup"}


   # dcol and icol are spaces before the message to center the message
   # on screen. itime is the amount of wait time for the user to press a key
   wcol=$(( ( ${COLUMNS} - ${wlen} ) / 2 ))
   icol=$(( ( ${COLUMNS} - ${ilen} ) / 2 ))
   itime=${itime:-"3"}

   echo -e "\n\n"
   echo -e "\\033[${wcol}G${welcome_message}"
   echo -e "\\033[${icol}G${i_message}${NORMAL}"
   echo ""
   read -t "${itime}" -n 1 interactive 2&gt;&amp;1 &gt; /dev/null
fi

# Make lower case
[ "${interactive}" == "I" ] &amp;&amp; interactive="i"
[ "${interactive}" != "i" ] &amp;&amp; interactive=""

# Read the state file if it exists from runlevel S
[ -r /run/interactive ] &amp;&amp; source /run/interactive

# Attempt to stop all services started by the previous runlevel,
# and killed in this runlevel
if [ "${previous}" != "N" ]; then
   for i in $(ls -v /etc/rc.d/rc${runlevel}.d/K* 2&gt; /dev/null)
   do
      check_script_status
      if [ "${SCRIPT_STAT}" == "1" ]; then
         SCRIPT_STAT="0"
         continue
      fi

      suffix=${i#/etc/rc.d/rc$runlevel.d/K[0-9][0-9]}
      prev_start=/etc/rc.d/rc$previous.d/S[0-9][0-9]$suffix
      sysinit_start=/etc/rc.d/rcS.d/S[0-9][0-9]$suffix

      if [ "${runlevel}" != "0" -a "${runlevel}" != "6" ]; then
         if [ ! -f ${prev_start} -a  ! -f ${sysinit_start} ]; then
            MSG="WARNING:\n\n${i} can't be "
            MSG="${MSG}executed because it was not "
            MSG="${MSG}not started in the previous "
            MSG="${MSG}runlevel (${previous})."
            log_warning_msg "$MSG"
            continue
         fi
      fi

      run ${i} stop
      error_value=${?}

      if [ "${error_value}" != "0" ]; then print_error_msg; fi
   done
fi

if [ "${previous}" == "N" ]; then export IN_BOOT=1; fi

if [ "$runlevel" == "6" -a -n "${FASTBOOT}" ]; then
   touch /fastboot
fi


# Start all functions in this runlevel
for i in $( ls -v /etc/rc.d/rc${runlevel}.d/S* 2&gt; /dev/null)
do
   if [ "${previous}" != "N" ]; then
      suffix=${i#/etc/rc.d/rc$runlevel.d/S[0-9][0-9]}
      stop=/etc/rc.d/rc$runlevel.d/K[0-9][0-9]$suffix
      prev_start=/etc/rc.d/rc$previous.d/S[0-9][0-9]$suffix

      [ -f ${prev_start} -a ! -f ${stop} ] &amp;&amp; continue
   fi

   check_script_status
      if [ "${SCRIPT_STAT}" == "1" ]; then
         SCRIPT_STAT="0"
         continue
      fi

   case ${runlevel} in
      0|6)
         run ${i} stop
         ;;
      *)
         run ${i} start
         ;;
   esac

   error_value=${?}

   if [ "${error_value}" != "0" ]; then print_error_msg; fi
done

# Store interactive variable on switch from runlevel S and remove if not
if [ "${runlevel}" == "S" -a "${interactive}" == "i" ]; then
    echo "interactive=\"i\"" &gt; /run/interactive
else
    rm -f /run/interactive 2&gt; /dev/null
fi

# Copy the boot log on initial boot only
if [ "${previous}" == "N" -a  "${runlevel}" != "S" ]; then
   cat $BOOTLOG &gt;&gt; /var/log/boot.log
      
   # Mark the end of boot
   echo "--------" &gt;&gt; /var/log/boot.log
   
   # Remove the temporary file
   rm -f $BOOTLOG 2&gt; /dev/null
fi

# End rc
</screen>
  </sect1>

  <sect1 id="init-functions" role="wrap">
    <title>/lib/lsb/init-functions</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# 
# Begin /lib/lsb/init-funtions
#
# Description : Run Level Control Functions
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#             : DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
# Notes       : With code based on Matthias Benkmann's simpleinit-msb
#               http://winterdrache.de/linux/newboot/index.html
#
#               The file should be located in /lib/lsb
#
########################################################################

## Environmental setup
# Setup default values for environment
umask 022
export PATH="/bin:/usr/bin:/sbin:/usr/sbin"

## Set color commands, used via echo
# Please consult `man console_codes for more information
# under the "ECMA-48 Set Graphics Rendition" section
#
# Warning: when switching from a 8bit to a 9bit font,
# the linux console will reinterpret the bold (1;) to
# the top 256 glyphs of the 9bit font.  This does
# not affect framebuffer consoles

NORMAL="\\033[0;39m"         # Standard console grey
SUCCESS="\\033[1;32m"        # Success is green
WARNING="\\033[1;33m"        # Warnings are yellow
FAILURE="\\033[1;31m"        # Failures are red
INFO="\\033[1;36m"           # Information is light cyan
BRACKET="\\033[1;34m"        # Brackets are blue

# Use a colored prefix
BMPREFIX="      "
SUCCESS_PREFIX="${SUCCESS}  *  ${NORMAL} "
FAILURE_PREFIX="${FAILURE}*****${NORMAL} "
WARNING_PREFIX="${WARNING} *** ${NORMAL} "
SKIP_PREFIX="${INFO}  S   ${NORMAL}"

SUCCESS_SUFFIX="${BRACKET}[${SUCCESS}  OK  ${BRACKET}]${NORMAL}"
FAILURE_SUFFIX="${BRACKET}[${FAILURE} FAIL ${BRACKET}]${NORMAL}"
WARNING_SUFFIX="${BRACKET}[${WARNING} WARN ${BRACKET}]${NORMAL}"
SKIP_SUFFIX="${BRACKET}[${INFO} SKIP ${BRACKET}]${NORMAL}"

BOOTLOG=/run/bootlog
KILLDELAY=3
SCRIPT_STAT="0"

# Set any user specified environment variables e.g. HEADLESS
[ -r /etc/sysconfig/rc.site ]  &amp;&amp; . /etc/sysconfig/rc.site

## Screen Dimensions
# Find current screen size
if [ -z "${COLUMNS}" ]; then
   COLUMNS=$(stty size)
   COLUMNS=${COLUMNS##* }
fi

# When using remote connections, such as a serial port, stty size returns 0
if [ "${COLUMNS}" = "0" ]; then
   COLUMNS=80
fi

## Measurements for positioning result messages
COL=$((${COLUMNS} - 8))
WCOL=$((${COL} - 2))

## Set Cursor Position Commands, used via echo
SET_COL="\\033[${COL}G"      # at the $COL char
SET_WCOL="\\033[${WCOL}G"    # at the $WCOL char
CURS_UP="\\033[1A\\033[0G"   # Up one line, at the 0'th char
CURS_ZERO="\\033[0G"

################################################################################
# start_daemon()                                                               #
# Usage: start_daemon [-f] [-n nicelevel] [-p pidfile] pathname [args...]      #
#                                                                              #
# Purpose: This runs the specified program as a daemon                         #
#                                                                              #
# Inputs: -f: (force) run the program even if it is already running.           #
#         -n nicelevel: specify a nice level. See 'man nice(1)'.               #
#         -p pidfile: use the specified file to determine PIDs.                #
#         pathname: the complete path to the specified program                 #
#         args: additional arguments passed to the program (pathname)          #
#                                                                              #
# Return values (as defined by LSB exit codes):                                #
#       0 - program is running or service is OK                                #
#       1 - generic or unspecified error                                       #
#       2 - invalid or excessive argument(s)                                   #
#       5 - program is not installed                                           #
################################################################################
start_daemon()
{
    local force=""
    local nice="0"
    local pidfile=""
    local pidlist=""
    local retval=""

    # Process arguments
    while true
    do
        case "${1}" in

            -f)
                force="1"
                shift 1
                ;;

            -n)
                nice="${2}"
                shift 2
                ;;

            -p)
                pidfile="${2}"
                shift 2
                ;;

            -*)
                return 2
                ;;

            *)
                program="${1}"
                break
                ;;
        esac
    done

    # Check for a valid program
    if [ ! -e "${program}" ]; then return 5; fi

    # Execute
    if [ -z "${force}" ]; then
        if [ -z "${pidfile}" ]; then
            # Determine the pid by discovery
            pidlist=`pidofproc "${1}"`
            retval="${?}"
        else
            # The PID file contains the needed PIDs
            # Note that by LSB requirement, the path must be given to pidofproc,
            # however, it is not used by the current implementation or standard.
            pidlist=`pidofproc -p "${pidfile}" "${1}"`
            retval="${?}"
        fi

        # Return a value ONLY 
        # It is the init script's (or distribution's functions) responsibilty
        # to log messages!
        case "${retval}" in

            0)
                # Program is already running correctly, this is a 
                # successful start.
                return 0
                ;;

            1)
                # Program is not running, but an invalid pid file exists
                # remove the pid file and continue
                rm -f "${pidfile}"
                ;;

            3)
                # Program is not running and no pidfile exists
                # do nothing here, let start_deamon continue.
                ;;

            *)
                # Others as returned by status values shall not be interpreted
                # and returned as an unspecified error.
                return 1
                ;;
        esac
    fi

    # Do the start!
    nice -n "${nice}" "${@}"
}

################################################################################
# killproc()                                                                   #
# Usage: killproc [-p pidfile] pathname [signal]                               #
#                                                                              #
# Purpose: Send control signals to running processes                           #
#                                                                              #
# Inputs: -p pidfile, uses the specified pidfile                               #
#         pathname, pathname to the specified program                          #
#         signal, send this signal to pathname                                 #
#                                                                              #
# Return values (as defined by LSB exit codes):                                #
#       0 - program (pathname) has stopped/is already stopped or a             #
#           running program has been sent specified signal and stopped         #
#           successfully                                                       #
#       1 - generic or unspecified error                                       #
#       2 - invalid or excessive argument(s)                                   #
#       5 - program is not installed                                           #
#       7 - program is not running and a signal was supplied                   #
################################################################################
killproc()
{
    local pidfile
    local program
    local prefix
    local progname
    local signal="-TERM"
    local fallback="-KILL"
    local nosig
    local pidlist
    local retval
    local pid
    local delay="30"
    local piddead
    local dtime

    # Process arguments
    while true; do
        case "${1}" in
            -p)
                pidfile="${2}"
                shift 2
                ;;
 
             *)
                 program="${1}"
                 if [ -n "${2}" ]; then
                     signal="${2}"
                     fallback=""
                 else
                     nosig=1
                 fi

                 # Error on additional arguments
                 if [ -n "${3}" ]; then
                     return 2
                 else 
                     break
                 fi                 
                 ;;
        esac
    done

    # Check for a valid program
    if [ ! -e "${program}" ]; then return 5; fi

    # Check for a valid signal
    check_signal "${signal}"
    if [ "${?}" -ne "0" ]; then return 2; fi

    # Get a list of pids
    if [ -z "${pidfile}" ]; then
        # determine the pid by discovery
        pidlist=`pidofproc "${1}"`
        retval="${?}"
    else
        # The PID file contains the needed PIDs
        # Note that by LSB requirement, the path must be given to pidofproc,
        # however, it is not used by the current implementation or standard.
        pidlist=`pidofproc -p "${pidfile}" "${1}"`
        retval="${?}"
    fi

    # Return a value ONLY
    # It is the init script's (or distribution's functions) responsibilty
    # to log messages!
    case "${retval}" in

        0)
            # Program is running correctly
            # Do nothing here, let killproc continue.
            ;;

        1)
            # Program is not running, but an invalid pid file exists
            # Remove the pid file.

            progname=${program##*/}

            if [[ -e "/run/${progname}.pid" ]]; then
                pidfile="/run/${progname}.pid"
                rm -f "${pidfile}"
            fi

            # This is only a success if no signal was passed.
            if [ -n "${nosig}" ]; then
                return 0
            else
                return 7
            fi
            ;;

        3)
            # Program is not running and no pidfile exists
            # This is only a success if no signal was passed.
            if [ -n "${nosig}" ]; then
                return 0
            else
                return 7
            fi
            ;;

        *)
            # Others as returned by status values shall not be interpreted
            # and returned as an unspecified error.
            return 1
            ;;
    esac

    # Perform different actions for exit signals and control signals
    check_sig_type "${signal}"

    if [ "${?}" -eq "0" ]; then # Signal is used to terminate the program

        # Account for empty pidlist (pid file still exists and no 
        # signal was given)
        if [ "${pidlist}" != "" ]; then

            # Kill the list of pids
            for pid in ${pidlist}; do

                kill -0 "${pid}" 2&gt; /dev/null

                if [ "${?}" -ne "0" ]; then
                    # Process is dead, continue to next and assume all is well
                    continue
                else
                    kill "${signal}" "${pid}" 2&gt; /dev/null

                    # Wait up to ${delay}/10 seconds to for "${pid}" to 
                    # terminate in 10ths of a second

                    while [ "${delay}" -ne "0" ]; do
                        kill -0 "${pid}" 2&gt; /dev/null || piddead="1"
                        if [ "${piddead}" = "1" ]; then break; fi
                        sleep 0.1
                        delay="$(( ${delay} - 1 ))"
                    done

                    # If a fallback is set, and program is still running, then
                    # use the fallback
                    if [ -n "${fallback}" -a "${piddead}" != "1" ]; then
                        kill "${fallback}" "${pid}" 2&gt; /dev/null
                        sleep 1
                        # Check again, and fail if still running
                        kill -0 "${pid}" 2&gt; /dev/null &amp;&amp; return 1
                    fi
                fi
            done
        fi

        # Check for and remove stale PID files.
        if [ -z "${pidfile}" ]; then
            # Find the basename of $program
            prefix=`echo "${program}" | sed 's/[^/]*$//'`
            progname=`echo "${program}" | sed "s@${prefix}@@"`

            if [ -e "/run/${progname}.pid" ]; then
                rm -f "/run/${progname}.pid" 2&gt; /dev/null
            fi
        else
            if [ -e "${pidfile}" ]; then rm -f "${pidfile}" 2&gt; /dev/null; fi
        fi

    # For signals that do not expect a program to exit, simply
    # let kill do its job, and evaluate kill's return for value

    else # check_sig_type - signal is not used to terminate program
        for pid in ${pidlist}; do
            kill "${signal}" "${pid}"
            if [ "${?}" -ne "0" ]; then return 1; fi
        done
    fi
}

################################################################################
# pidofproc()                                                                  #
# Usage: pidofproc [-p pidfile] pathname                                       #
#                                                                              #
# Purpose: This function returns one or more pid(s) for a particular daemon    #
#                                                                              #
# Inputs: -p pidfile, use the specified pidfile instead of pidof               #
#         pathname, path to the specified program                              #
#                                                                              #
# Return values (as defined by LSB status codes):                              #
#       0 - Success (PIDs to stdout)                                           #
#       1 - Program is dead, PID file still exists (remaining PIDs output)     #
#       3 - Program is not running (no output)                                 #
################################################################################
pidofproc()
{
    local pidfile
    local program
    local prefix
    local progname
    local pidlist
    local lpids
    local exitstatus="0"

    # Process arguments
    while true; do
        case "${1}" in

            -p)
                pidfile="${2}"
                shift 2
                ;;

            *)
                program="${1}"
                if [ -n "${2}" ]; then
                    # Too many arguments
                    # Since this is status, return unknown
                    return 4
                else
                    break
                fi
                ;;
        esac
    done

    # If a PID file is not specified, try and find one.
    if [ -z "${pidfile}" ]; then
        # Get the program's basename
        prefix=`echo "${program}" | sed 's/[^/]*$//'`

        if [ -z "${prefix}" ]; then 
           progname="${program}"
        else
           progname=`echo "${program}" | sed "s@${prefix}@@"`
        fi

        # If a PID file exists with that name, assume that is it.
        if [ -e "/run/${progname}.pid" ]; then
            pidfile="/run/${progname}.pid"
        fi
    fi

    # If a PID file is set and exists, use it.
    if [ -n "${pidfile}" -a -e "${pidfile}" ]; then

        # Use the value in the first line of the pidfile
        pidlist=`/bin/head -n1 "${pidfile}"`
        # This can optionally be written as 'sed 1q' to repalce 'head -n1'
        # should LFS move /bin/head to /usr/bin/head
    else
        # Use pidof
        pidlist=`pidof "${program}"`
    fi

    # Figure out if all listed PIDs are running.
    for pid in ${pidlist}; do
        kill -0 ${pid} 2&gt; /dev/null

        if [ "${?}" -eq "0" ]; then
            lpids="${lpids}${pid} "
        else
            exitstatus="1"
        fi
    done

    if [ -z "${lpids}" -a ! -f "${pidfile}" ]; then
        return 3
    else
        echo "${lpids}"
        return "${exitstatus}"
    fi
}

################################################################################
# statusproc()                                                                 #
# Usage: statusproc [-p pidfile] pathname                                      #
#                                                                              #
# Purpose: This function prints the status of a particular daemon to stdout    #
#                                                                              #
# Inputs: -p pidfile, use the specified pidfile instead of pidof               #
#         pathname, path to the specified program                              #
#                                                                              #
# Return values:                                                               #
#       0 - Status printed                                                     #
#       1 - Input error. The daemon to check was not specified.                #
################################################################################
statusproc()
{
   local pidfile
   local pidlist

   if [ "${#}" = "0" ]; then
      echo "Usage: statusproc [-p pidfle] {program}"
      exit 1
   fi

   # Process arguments
   while true; do
       case "${1}" in

           -p)
               pidfile="${2}"
               shift 2
               ;;

           *)
               if [ -n "${2}" ]; then
                   echo "Too many arguments"
                   return 1
               else
                   break
               fi
               ;;
       esac
   done

   if [ -n "${pidfile}" ]; then
      pidlist=`pidofproc -p "${pidfile}" $@`
   else
      pidlist=`pidofproc $@`
   fi

   # Trim trailing blanks
   pidlist=`echo "${pidlist}" | sed -r 's/ +$//'`

   base="${1##*/}"

   if [ -n "${pidlist}" ]; then
      /bin/echo -e "${INFO}${base} is running with Process" \
         "ID(s) ${pidlist}.${NORMAL}"
   else
      if [ -n "${base}" -a -e "/run/${base}.pid" ]; then
         /bin/echo -e "${WARNING}${1} is not running but" \
            "/run/${base}.pid exists.${NORMAL}"
      else
         if [ -n "${pidfile}" -a -e "${pidfile}" ]; then
            /bin/echo -e "${WARNING}${1} is not running" \
               "but ${pidfile} exists.${NORMAL}"
         else
            /bin/echo -e "${INFO}${1} is not running.${NORMAL}"
         fi
      fi
   fi
}

################################################################################
# timespec()                                                                   #
#                                                                              #
# Purpose: An internal utility function to format a timestamp                  #
#          a boot log file.  Sets the STAMP variable.                          #
#                                                                              #
# Return value: Not used                                                       #
################################################################################
timespec()
{
   STAMP="$(echo `date +"%b %d %T %:z"` `hostname`) "
   return 0
}

################################################################################
# log_success_msg()                                                            #
# Usage: log_success_msg ["message"]                                           #
#                                                                              #
# Purpose: Print a successful status message to the screen and                 #
#          a boot log file.                                                    #
#                                                                              #
# Inputs: $@ - Message                                                         #
#                                                                              #
# Return values: Not used                                                      #
################################################################################
log_success_msg()
{
    /bin/echo -n -e "${BMPREFIX}${@}"
    /bin/echo -e "${CURS_ZERO}${SUCCESS_PREFIX}${SET_COL}${SUCCESS_SUFFIX}"

    # Strip non-printable characters from log file
    logmessage=`echo "${@}" | sed 's/\\\033[^a-zA-Z]*.//g'`

    timespec
    /bin/echo -e "${STAMP} ${logmessage} OK" &gt;&gt; ${BOOTLOG}
    
    return 0
}

log_success_msg2()
{
    /bin/echo -n -e "${BMPREFIX}${@}"
    /bin/echo -e "${CURS_ZERO}${SUCCESS_PREFIX}${SET_COL}${SUCCESS_SUFFIX}"

    echo " OK" &gt;&gt; ${BOOTLOG}
    
    return 0
}

################################################################################
# log_failure_msg()                                                            #
# Usage: log_failure_msg ["message"]                                           #
#                                                                              #
# Purpose: Print a failure status message to the screen and                    #
#          a boot log file.                                                    #
#                                                                              #
# Inputs: $@ - Message                                                         #
#                                                                              #
# Return values: Not used                                                      #
################################################################################
log_failure_msg()
{
    /bin/echo -n -e "${BMPREFIX}${@}"
    /bin/echo -e "${CURS_ZERO}${FAILURE_PREFIX}${SET_COL}${FAILURE_SUFFIX}"

    # Strip non-printable characters from log file

    timespec
    logmessage=`echo "${@}" | sed 's/\\\033[^a-zA-Z]*.//g'`
    /bin/echo -e "${STAMP} ${logmessage} FAIL" &gt;&gt; ${BOOTLOG}
    
    return 0
}

log_failure_msg2()
{
    /bin/echo -n -e "${BMPREFIX}${@}"
    /bin/echo -e "${CURS_ZERO}${FAILURE_PREFIX}${SET_COL}${FAILURE_SUFFIX}"

    echo "FAIL" &gt;&gt; ${BOOTLOG}
    
    return 0
}

################################################################################
# log_warning_msg()                                                            #
# Usage: log_warning_msg ["message"]                                           #
#                                                                              #
# Purpose: Print a warning status message to the screen and                    #
#          a boot log file.                                                    #
#                                                                              #
# Return values: Not used                                                      #
################################################################################
log_warning_msg()
{
    /bin/echo -n -e "${BMPREFIX}${@}"
    /bin/echo -e "${CURS_ZERO}${WARNING_PREFIX}${SET_COL}${WARNING_SUFFIX}"

    # Strip non-printable characters from log file
    logmessage=`echo "${@}" | sed 's/\\\033[^a-zA-Z]*.//g'`
    timespec
    /bin/echo -e "${STAMP} ${logmessage} WARN" &gt;&gt; ${BOOTLOG}
    
    return 0
}

log_skip_msg()
{
    /bin/echo -n -e "${BMPREFIX}${@}"
    /bin/echo -e "${CURS_ZERO}${SKIP_PREFIX}${SET_COL}${SKIP_SUFFIX}"

    # Strip non-printable characters from log file
    logmessage=`echo "${@}" | sed 's/\\\033[^a-zA-Z]*.//g'`
    /bin/echo "SKIP" &gt;&gt; ${BOOTLOG}
    
    return 0
}

################################################################################
# log_info_msg()                                                               #
# Usage: log_info_msg message                                                  #
#                                                                              #
# Purpose: Print an information message to the screen and                      #
#          a boot log file.  Does not print a trailing newline character.      #
#                                                                              #
# Return values: Not used                                                      #
################################################################################
log_info_msg()
{
    /bin/echo -n -e "${BMPREFIX}${@}"

    # Strip non-printable characters from log file
    logmessage=`echo "${@}" | sed 's/\\\033[^a-zA-Z]*.//g'`
    timespec
    /bin/echo -n -e "${STAMP} ${logmessage}" &gt;&gt; ${BOOTLOG}
    
    return 0
}

log_info_msg2()
{
    /bin/echo -n -e "${@}"

    # Strip non-printable characters from log file
    logmessage=`echo "${@}" | sed 's/\\\033[^a-zA-Z]*.//g'`
    /bin/echo -n -e "${logmessage}" &gt;&gt; ${BOOTLOG}
    
    return 0
}

################################################################################
# evaluate_retval()                                                            #
# Usage: Evaluate a return value and print success or failyure as appropriate  #
#                                                                              #
# Purpose: Convenience function to terminate an info message                   #
#                                                                              #
# Return values: Not used                                                      #
################################################################################
evaluate_retval()
{
   local error_value="${?}"

   if [ ${error_value} = 0 ]; then
      log_success_msg2
   else
      log_failure_msg2
   fi
}

################################################################################
# check_signal()                                                               #
# Usage: check_signal [ -{signal} ]                                            #
#                                                                              #
# Purpose: Check for a valid signal.  This is not defined by any LSB draft,    #
#          however, it is required to check the signals to determine if the    #
#          signals chosen are invalid arguments to the other functions.        #
#                                                                              #
# Inputs: Accepts a single string value in the form of -{signal}               #
#                                                                              #
# Return values:                                                               #
#       0 - Success (signal is valid                                           #
#       1 - Signal is not valid                                                #
################################################################################
check_signal()
{
    local valsig

    # Add error handling for invalid signals
    valsig=" -ALRM -HUP -INT -KILL -PIPE -POLL -PROF -TERM -USR1 -USR2"
    valsig="${valsig} -VTALRM -STKFLT -PWR -WINCH -CHLD -URG -TSTP -TTIN"
    valsig="${valsig} -TTOU -STOP -CONT -ABRT -FPE -ILL -QUIT -SEGV -TRAP"
    valsig="${valsig} -SYS -EMT -BUS -XCPU -XFSZ -0 -1 -2 -3 -4 -5 -6 -8 -9"
    valsig="${valsig} -11 -13 -14 -15 "

    echo "${valsig}" | grep -- " ${1} " &gt; /dev/null

    if [ "${?}" -eq "0" ]; then
        return 0
    else
        return 1
    fi
}

################################################################################
# check_sig_type()                                                             #
# Usage: check_signal [ -{signal} | {signal} ]                                 #
#                                                                              #
# Purpose: Check if signal is a program termination signal or a control signal #
#          This is not defined by any LSB draft, however, it is required to    #
#          check the signals to determine if they are intended to end a        #
#          program or simply to control it.                                    #
#                                                                              #
# Inputs: Accepts a single string value in the form or -{signal} or {signal}   #
#                                                                              #
# Return values:                                                               #
#       0 - Signal is used for program termination                             #
#       1 - Signal is used for program control                                 #
################################################################################
check_sig_type()
{
    local valsig

    # The list of termination signals (limited to generally used items)
    valsig=" -ALRM -INT -KILL -TERM -PWR -STOP -ABRT -QUIT -2 -3 -6 -9 -14 -15 "

    echo "${valsig}" | grep -- " ${1} " &gt; /dev/null

    if [ "${?}" -eq "0" ]; then
        return 0
    else
        return 1
    fi
}

################################################################################
# wait_for_user()                                                              #
#                                                                              #
# Purpose: Wait for the user to respond if not a headless system               #
#                                                                              #
################################################################################
wait_for_user()
{
   # Wait for the user by default
   [ "${HEADLESS=0}" = "0" ] &amp;&amp; read ENTER
   return 0
}

################################################################################
# is_true()                                                                    #
#                                                                              #
# Purpose: Utility to test if a variable is true | yes | 1                     #
#                                                                              #
################################################################################
is_true()
{
   [ "$1" = "1" ] || [ "$1" = "yes" ] || [ "$1" = "true" ] ||  [ "$1" = "y" ] ||
   [ "$1" = "t" ]
}

# End /lib/lsb/init-functions
</screen>
  </sect1>

  <sect1 id="mountvirtfs" role="wrap">
    <title>/etc/rc.d/init.d/mountvirtfs</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin mountvirtfs
#
# Description : Mount proc, sysfs, and run
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            mountvirtfs
# Required-Start:      $first
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start:       S
# Default-Stop:
# Short-Description:   Mounts /sys and /proc virtual (kernel) filesystems.
#                      Mounts /run (tmpfs) and /dev (devtmpfs).
# Description:         Mounts /sys and /proc virtual (kernel) filesystems.
#                      Mounts /run (tmpfs) and /dev (devtmpfs).
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   start)
      # Make sure /run is available before logging any messages
      if ! mountpoint /run &gt;/dev/null; then
         mount /run || failed=1
      fi

      mkdir -p /run/lock /run/shm
      chmod 1777 /run/shm /run/lock

      log_info_msg "Mounting virtual file systems: ${INFO}/run" 

      if ! mountpoint /proc &gt;/dev/null; then
         log_info_msg2 " ${INFO}/proc"
         mount -o nosuid,noexec,nodev /proc || failed=1
      fi

      if ! mountpoint /sys &gt;/dev/null; then
         log_info_msg2 " ${INFO}/sys" 
         mount -o nosuid,noexec,nodev /sys || failed=1
      fi

      if ! mountpoint /dev &gt;/dev/null; then
         log_info_msg2 " ${INFO}/dev" 
         mount -o mode=0755,nosuid /dev  || failed=1
      fi

      ln -sfn /run/shm /dev/shm
      
      (exit ${failed})
      evaluate_retval
      exit $failed
      ;;

   *)
      echo "Usage: ${0} {start}"
      exit 1
      ;;
esac

# End mountvirtfs
</screen>
  </sect1>

  <sect1 id="modules" role="wrap">
    <title>/etc/rc.d/init.d/modules</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin modules
#
# Description : Module auto-loading script
#
# Authors     : Zack Winkles
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            modules
# Required-Start:      mountvirtfs
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start:       S
# Default-Stop:
# Short-Description:   Loads required modules.
# Description:         Loads modules listed in /etc/sysconfig/modules.
# X-LFS-Provided-By:   LFS
### END INIT INFO

# Assure that the kernel has module support.
[ -e /proc/modules ] || exit 0

. /lib/lsb/init-functions

case "${1}" in
   start)
      # Exit if there's no modules file or there are no
      # valid entries
      [ -r /etc/sysconfig/modules ]             || exit 0
      egrep -qv '^($|#)' /etc/sysconfig/modules || exit 0

      log_info_msg "Loading modules:" 

      # Only try to load modules if the user has actually given us
      # some modules to load.

      while read module args; do

         # Ignore comments and blank lines.
         case "$module" in
            ""|"#"*) continue ;;
         esac

         # Attempt to load the module, passing any arguments provided.
         modprobe ${module} ${args} &gt;/dev/null

         # Print the module name if successful, otherwise take note.
         if [ $? -eq 0 ]; then
            log_info_msg2 " ${module}" 
         else
            failedmod="${failedmod} ${module}"
         fi
      done &lt; /etc/sysconfig/modules

      # Print a message about successfully loaded modules on the correct line.
      log_success_msg2

      # Print a failure message with a list of any modules that 
      # may have failed to load.
      if [ -n "${failedmod}" ]; then
         log_failure_msg "Failed to load modules:${failedmod}" 
         exit 1
      fi
      ;;

   *)
      echo "Usage: ${0} {start}"
      exit 1
      ;;
esac

exit 0

# End modules
</screen>
  </sect1>

  <sect1 id="udev" role="wrap">
    <title>/etc/rc.d/init.d/udev</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin udev
#
# Description : Udev cold-plugging script
#
# Authors     : Zack Winkles, Alexander E. Patrakov
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            udev $time
# Required-Start:      localnet
# Should-Start:        modules
# Required-Stop:
# Should-Stop:
# Default-Start:       S
# Default-Stop:
# Short-Description:   Populates /dev with device nodes.
# Description:         Mounts a tempfs on /dev and starts the udevd daemon.
#                      Device nodes are created as defined by udev.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   start)
      log_info_msg "Populating /dev with device nodes... "
      if ! grep -q '[[:space:]]sysfs' /proc/mounts; then
         log_failure_msg2
         msg="FAILURE:\n\nUnable to create "
         msg="${msg}devices without a SysFS filesystem\n\n"
         msg="${msg}After you press Enter, this system "
         msg="${msg}will be halted and powered off.\n\n"
         log_info_msg "$msg"
         log_info_msg "Press Enter to continue..."
         wait_for_user
         /etc/rc.d/init.d/halt stop
      fi

      # Start the udev daemon to continually watch for, and act on,
      # uevents
      /sbin/udevd --daemon

      # Now traverse /sys in order to "coldplug" devices that have
      # already been discovered
      /sbin/udevadm trigger --action=add    --type=subsystems
      /sbin/udevadm trigger --action=add    --type=devices
      /sbin/udevadm trigger --action=change --type=devices

      # Now wait for udevd to process the uevents we triggered
      if ! is_true "$OMIT_UDEV_SETTLE"; then
         /sbin/udevadm settle
      fi

      # If any LVM based partitions are on the system, ensure they
      # are activated so they can be used.
      if [ -x /sbin/vgchange ]; then /sbin/vgchange -a y &gt;/dev/null; fi 

      log_success_msg2 
      ;;

   *)
      echo "Usage ${0} {start}"
      exit 1
      ;;
esac

exit 0

# End udev
</screen>
  </sect1>

  <sect1 id="swap" role="wrap">
    <title>/etc/rc.d/init.d/swap</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin swap
#
# Description : Swap Control Script
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            swap
# Required-Start:      udev
# Should-Start:        modules
# Required-Stop:       localnet
# Should-Stop:         $local_fs
# Default-Start:       S
# Default-Stop:        0 6
# Short-Description:   Mounts and unmounts swap partitions.
# Description:         Mounts and unmounts swap partitions defined in
#                      /etc/fstab.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   start)
      log_info_msg "Activating all swap files/partitions..."
      swapon -a
      evaluate_retval
      ;;

   stop)
      log_info_msg "Deactivating all swap files/partitions..."
      swapoff -a
      evaluate_retval
      ;;

   restart)
      ${0} stop
      sleep 1
      ${0} start
      ;;

   status)
      log_success_msg "Retrieving swap status." 
      swapon -s
      ;;

   *)
      echo "Usage: ${0} {start|stop|restart|status}"
      exit 1
      ;;
esac

exit 0

# End swap
</screen>
  </sect1>

  <sect1 id="setclock" role="wrap">
    <title>/etc/rc.d/init.d/setclock</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin setclock
#
# Description : Setting Linux Clock
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            
# Required-Start:
# Should-Start:        modules
# Required-Stop:
# Should-Stop:         $syslog
# Default-Start:       S
# Default-Stop:
# Short-Description:   Stores and restores time from the hardware clock
# Description:         On boot, system time is obtained from hwclock.  The
#                      hardware clock can also be set on shutdown.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

[ -r /etc/sysconfig/clock ] &amp;&amp; . /etc/sysconfig/clock


case "${UTC}" in
   yes|true|1)
      CLOCKPARAMS="${CLOCKPARAMS} --utc"
      ;;

   no|false|0)
      CLOCKPARAMS="${CLOCKPARAMS} --localtime"
      ;;

esac

case ${1} in
   start)
      hwclock --hctosys ${CLOCKPARAMS} &gt;/dev/null
      ;;

   stop)
      log_info_msg "Setting hardware clock..."
      hwclock --systohc ${CLOCKPARAMS} &gt;/dev/null
      evaluate_retval
      ;;

   *)
      echo "Usage: ${0} {start|stop}"
      exit 1
      ;;

esac

exit 0
</screen>
  </sect1>

  <sect1 id="checkfs" role="wrap">
    <title>/etc/rc.d/init.d/checkfs</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin checkfs
#
# Description : File System Check
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               A. Luebke - luebke@users.sourceforge.net
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
# Based on checkfs script from LFS-3.1 and earlier.
#
# From man fsck
# 0    - No errors
# 1    - File system errors corrected
# 2    - System should be rebooted
# 4    - File system errors left uncorrected
# 8    - Operational error
# 16   - Usage or syntax error
# 32   - Fsck canceled by user request
# 128  - Shared library error
#
#########################################################################

### BEGIN INIT INFO
# Provides:            checkfs
# Required-Start:      udev swap
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start:       S
# Default-Stop:
# Short-Description:   Checks local filesystems before mounting.
# Description:         Checks local filesystmes before mounting.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   start)
      if [ -f /fastboot ]; then
         msg="/fastboot found, will omit "
         msg="${msg} file system checks as requested.\n"
         log_info_msg "${msg}"
         exit 0
      fi

      log_info_msg "Mounting root file system in read-only mode... "
      mount -n -o remount,ro / &gt;/dev/null

      if [ ${?} != 0 ]; then
         log_failure_msg2
         msg="\n\nCannot check root "
         msg="${msg}filesystem because it could not be mounted "
         msg="${msg}in read-only mode.\n\n"
         msg="${msg}After you press Enter, this system will be "
         msg="${msg}halted and powered off.\n\n"
         log_failure_msg "${msg}"

         log_info_msg "Press Enter to continue..." 
         wait_for_user
         /etc/rc.d/init.d/halt stop
      else
         log_success_msg2
      fi

      if [ -f /forcefsck ]; then
         msg="/forcefsck found, forcing file" 
         msg="${msg} system checks as requested."
         log_success_msg "$msg"
         options="-f"
      else
         options=""
      fi

      log_info_msg "Checking file systems..."
      # Note: -a option used to be -p; but this fails e.g. on fsck.minix
      if is_true "$VERBOSE_FSCK"; then
        fsck ${options} -a -A -C -T
      else
        fsck ${options} -a -A -C -T &gt;/dev/null
      fi

      error_value=${?}

      if [ "${error_value}" = 0 ]; then
         log_success_msg2
      fi

      if [ "${error_value}" = 1 ]; then
         msg="\nWARNING:\n\nFile system errors "
         msg="${msg}were found and have been corrected.\n"
         msg="${msg}      You may want to double-check that "
         msg="${msg}everything was fixed properly."
         log_warning_msg "$msg"
      fi

      if [ "${error_value}" = 2 -o "${error_value}" = 3 ]; then
         msg="\nWARNING:\n\nFile system errors "
         msg="${msg}were found and have been been "
         msg="${msg}corrected, but the nature of the "
         msg="${msg}errors require this system to be rebooted.\n\n"
         msg="${msg}After you press enter, "
         msg="${msg}this system will be rebooted\n\n"
         log_failure_msg "$msg"

         log_info_msg "Press Enter to continue..." 
         wait_for_user
         reboot -f
      fi

      if [ "${error_value}" -gt 3 -a "${error_value}" -lt 16 ]; then
         msg="\nFAILURE:\n\nFile system errors "
         msg="${msg}were encountered that could not be "
         msg="${msg}fixed automatically.\nThis system "
         msg="${msg}cannot continue to boot and will "
         msg="${msg}therefore be halted until those "
         msg="${msg}errors are fixed manually by a "
         msg="${msg}System Administrator.\n\n"
         msg="${msg}After you press Enter, this system will be "
         msg="${msg}halted and powered off.\n\n"
         log_failure_msg "$msg"

         log_info_msg "Press Enter to continue..." 
         wait_for_user
         /etc/rc.d/init.d/halt stop
      fi

      if [ "${error_value}" -ge 16 ]; then
         msg="FAILURE:\n\nUnexpected failure "
         msg="${msg}running fsck.  Exited with error "
         msg="${msg} code: ${error_value}.\n"
         log_info_msg $msg
         exit ${error_value}
      fi

      exit 0
      ;;
   *)
      echo "Usage: ${0} {start}"
      exit 1
      ;;
esac

# End checkfs
</screen>
  </sect1>

  <sect1 id="mountfs" role="wrap">
    <title>/etc/rc.d/init.d/mountfs</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin mountfs
#
# Description : File System Mount Script
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            $local_fs
# Required-Start:      udev checkfs
# Should-Start:        modules
# Required-Stop:       localnet
# Should-Stop:
# Default-Start:       S
# Default-Stop:        0 6
# Short-Description:   Mounts/unmounts local filesystems defined in /etc/fstab.
# Description:         Remounts root filesystem read/write and mounts all
#                      remaining local filesystems defined in /etc/fstab on
#                      start.  Remounts root filesystem read-only and unmounts
#                      remaining filesystems on stop.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   start)
      log_info_msg "Remounting root file system in read-write mode..."
      mount --options remount,rw / &gt;/dev/null
      evaluate_retval

      # Remove fsck-related file system watermarks.
      rm -f /fastboot /forcefsck

      # Make sure /dev/pts exists
      mkdir -p /dev/pts

      # This will mount all filesystems that do not have _netdev in
      # their option list.  _netdev denotes a network filesystem.

      log_info_msg "Mounting remaining file systems..."
      failed=0
      mount --all --test-opts no_netdev &gt;/dev/null || failed=1
      evaluate_retval
      exit $failed
      ;;

   stop)
      # Don't unmount virtual file systems like /run
      log_info_msg "Unmounting all other currently mounted file systems..."
      # Ensure any loop devies are removed
      losetup -D
      umount --all --detach-loop --read-only \
             --types notmpfs,nosysfs,nodevtmpfs,noproc,nodevpts &gt;/dev/null
      evaluate_retval

      # Make sure / is mounted read only (umount bug)
      mount --options remount,ro /

      # Make all LVM volume groups unavailable, if appropriate
      # This fails if swap or / are on an LVM partition
      #if [ -x /sbin/vgchange ]; then /sbin/vgchange -an &gt; /dev/null; fi
      ;;

   *)
      echo "Usage: ${0} {start|stop}"
      exit 1
      ;;
esac

# End mountfs
</screen>
  </sect1>

  <sect1 id="udev_retry" role="wrap">
    <title>/etc/rc.d/init.d/udev_retry</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin udev_retry
#
# Description : Udev cold-plugging script (retry)
#
# Authors     : Alexander E. Patrakov
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#               Bryan Kadzban - 
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            udev_retry
# Required-Start:      udev
# Should-Start:        $local_fs cleanfs
# Required-Stop:
# Should-Stop:
# Default-Start:       S
# Default-Stop:
# Short-Description:   Replays failed uevents and creates additional devices.
# Description:         Replays any failed uevents that were skipped due to
#                      slow hardware initialization, and creates those needed
#                      device nodes
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   start)
      log_info_msg "Retrying failed uevents, if any..."

      # As of udev-186, the --run option is no longer valid
      #rundir=$(/sbin/udevadm info --run)
      rundir=/run/udev
      # From Debian: "copy the rules generated before / was mounted
      # read-write":
    
      for file in ${rundir}/tmp-rules--*; do
         dest=${file##*tmp-rules--}
         [ "$dest" = '*' ] &amp;&amp; break
         cat $file &gt;&gt; /etc/udev/rules.d/$dest
         rm -f $file
      done

      # Re-trigger the uevents that may have failed, 
      # in hope they will succeed now
      /bin/sed -e 's/#.*$//' /etc/sysconfig/udev_retry | /bin/grep -v '^$' | \
      while read line ; do
         for subsystem in $line ; do
            /sbin/udevadm trigger --subsystem-match=$subsystem --action=add
         done
      done

      # Now wait for udevd to process the uevents we triggered
      if ! is_true "$OMIT_UDEV_RETRY_SETTLE"; then
         /sbin/udevadm settle
      fi

      evaluate_retval
      ;;

   *)
      echo "Usage ${0} {start}"
      exit 1
      ;;
esac

exit 0

# End udev_retry
</screen>
  </sect1>

  <sect1 id="cleanfs" role="wrap">
    <title>/etc/rc.d/init.d/cleanfs</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin cleanfs
#
# Description : Clean file system
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            cleanfs
# Required-Start:      $local_fs
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start:       S
# Default-Stop:
# Short-Description:   Cleans temporary directories early in the boot process.
# Description:         Cleans temporary directories /run, /var/lock, and
#                      optionally, /tmp.  cleanfs also creates /run/utmp 
#                      and any files defined in /etc/sysconfig/createfiles.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

# Function to create files/directory on boot.
create_files() 
{
   # Input to file descriptor 9 and output to stdin (redirection)
   exec 9&gt;&amp;0 &lt; /etc/sysconfig/createfiles

   while read name type perm usr grp dtype maj min junk
   do
      # Ignore comments and blank lines.
      case "${name}" in
         ""|\#*) continue ;;
      esac

      # Ignore existing files.
      if [ ! -e "${name}" ]; then
         # Create stuff based on its type.
         case "${type}" in
            dir)
               mkdir "${name}"
               ;;
            file)
               :&gt; "${name}"
               ;;
            dev)
               case "${dtype}" in
                  char)
                     mknod "${name}" c ${maj} ${min}
                     ;;
                  block)
                     mknod "${name}" b ${maj} ${min}
                     ;;
                  pipe)
                     mknod "${name}" p
                     ;;
                  *) 
                     log_warning_msg "\nUnknown device type: ${dtype}" 
                     ;;
               esac
               ;;
            *)
               log_warning_msg "\nUnknown type: ${type}" 
               continue
               ;;
         esac

         # Set up the permissions, too.
         chown ${usr}:${grp} "${name}"
         chmod ${perm} "${name}"
      fi
   done

   # Close file descriptor 9 (end redirection)
   exec 0&gt;&amp;9 9&gt;&amp;-
   return 0
}

case "${1}" in
   start)
      log_info_msg "Cleaning file systems:" 

      if [ "${SKIPTMPCLEAN}" = "" ]; then
         log_info_msg2 " /tmp" 
         cd /tmp &amp;&amp;
         find . -xdev -mindepth 1 ! -name lost+found -delete || failed=1
      fi

      &gt; /run/utmp

      if grep -q '^utmp:' /etc/group ; then
         chmod 664 /run/utmp
         chgrp utmp /run/utmp
      fi

      (exit ${failed})
      evaluate_retval

      if egrep -qv '^(#|$)' /etc/sysconfig/createfiles 2&gt;/dev/null; then
         log_info_msg "Creating files and directories... "
         create_files      # Always returns 0
         evaluate_retval
      fi

      exit $failed
      ;;
   *)
      echo "Usage: ${0} {start}"
      exit 1
      ;;
esac

# End cleanfs
</screen>
  </sect1>

  <sect1 id="console" role="wrap">
    <title>/etc/rc.d/init.d/console</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin console
#
# Description : Sets keymap and screen font
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               Alexander E. Patrakov
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            console
# Required-Start:      $local_fs
# Should-Start:        udev_retry
# Required-Stop:
# Should-Stop:
# Default-Start:       S
# Default-Stop:
# Short-Description:   Sets up a localised console.
# Description:         Sets up fonts and language settings for the user's
#                      local as defined by /etc/sysconfig/console.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

# Native English speakers probably don't have /etc/sysconfig/console at all
[ -r /etc/sysconfig/console ] &amp;&amp; . /etc/sysconfig/console

is_true() 
{
   [ "$1" = "1" ] || [ "$1" = "yes" ] || [ "$1" = "true" ]
}

failed=0

case "${1}" in
   start)
      # See if we need to do anything
      if [ -z "${KEYMAP}"         ] &amp;&amp; [ -z "${KEYMAP_CORRECTIONS}" ] &amp;&amp;
         [ -z "${FONT}"           ] &amp;&amp; [ -z "${LEGACY_CHARSET}"     ] &amp;&amp;     
         ! is_true "${UNICODE}"; then 
         exit 0
      fi

      # There should be no bogus failures below this line!
      log_info_msg "Setting up Linux console..."

      # Figure out if a framebuffer console is used
      [ -d /sys/class/graphics/fb0 ] &amp;&amp; use_fb=1 || use_fb=0

      # Figure out the command to set the console into the
      # desired mode
      is_true "${UNICODE}" &amp;&amp;
         MODE_COMMAND="echo -en '\033%G' &amp;&amp; kbd_mode -u" ||
         MODE_COMMAND="echo -en '\033%@\033(K' &amp;&amp; kbd_mode -a"

      # On framebuffer consoles, font has to be set for each vt in
      # UTF-8 mode. This doesn't hurt in non-UTF-8 mode also.

      ! is_true "${use_fb}" || [ -z "${FONT}" ] ||
         MODE_COMMAND="${MODE_COMMAND} &amp;&amp; setfont ${FONT}"

      # Apply that command to all consoles mentioned in
      # /etc/inittab. Important: in the UTF-8 mode this should
      # happen before setfont, otherwise a kernel bug will
      # show up and the unicode map of the font will not be
      # used.

      for TTY in `grep '^[^#].*respawn:/sbin/agetty' /etc/inittab |
         grep -o '\btty[[:digit:]]*\b'`
      do
         openvt -f -w -c ${TTY#tty} -- \
            /bin/sh -c "${MODE_COMMAND}" || failed=1
      done

      # Set the font (if not already set above) and the keymap
      [ "${use_fb}" == "1" ] || [ -z "${FONT}" ] || setfont $FONT || failed=1

      [ -z "${KEYMAP}" ] ||
         loadkeys ${KEYMAP} &gt;/dev/null 2&gt;&amp;1 ||
         failed=1
      
      [ -z "${KEYMAP_CORRECTIONS}" ] ||
         loadkeys ${KEYMAP_CORRECTIONS} &gt;/dev/null 2&gt;&amp;1 ||
         failed=1

      # Convert the keymap from $LEGACY_CHARSET to UTF-8
      [ -z "$LEGACY_CHARSET" ] ||
         dumpkeys -c "$LEGACY_CHARSET" | loadkeys -u &gt;/dev/null 2&gt;&amp;1 ||
         failed=1

      # If any of the commands above failed, the trap at the
      # top would set $failed to 1
      ( exit $failed ) 
      evaluate_retval

      exit $failed
      ;;              

   *)                 
      echo "Usage:  ${0} {start}"
      exit 1          
      ;;              
esac

# End console
</screen>
  </sect1>

  <sect1 id="localnet" role="wrap">
    <title>/etc/rc.d/init.d/localnet</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin localnet
#
# Description : Loopback device
#
# Authors     : Gerard Beekmans  - gerard@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            localnet
# Required-Start:      mountvirtfs
# Should-Start:        modules
# Required-Stop:
# Should-Stop:
# Default-Start:       S
# Default-Stop:        0 6
# Short-Description:   Starts the local network.
# Description:         Sets the hostname of the machine and starts the
#                      loopback interface.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions
[ -r /etc/sysconfig/network ] &amp;&amp; . /etc/sysconfig/network
[ -r /etc/hostname ] &amp;&amp; HOSTNAME=`cat /etc/hostname`

case "${1}" in
   start)
      log_info_msg "Bringing up the loopback interface..."
      ip addr add 127.0.0.1/8 label lo dev lo
      ip link set lo up
      evaluate_retval

      log_info_msg "Setting hostname to ${HOSTNAME}..."
      hostname ${HOSTNAME}
      evaluate_retval
      ;;

   stop)
      log_info_msg "Bringing down the loopback interface..."
      ip link set lo down
      evaluate_retval
      ;;

   restart)
      ${0} stop
      sleep 1
      ${0} start
      ;;

   status)
      echo "Hostname is: $(hostname)"
      ip link show lo
      ;;

   *)
      echo "Usage: ${0} {start|stop|restart|status}"
      exit 1
      ;;
esac

exit 0

# End localnet
</screen>
  </sect1>

  <sect1 id="sysctlscript" role="wrap">
    <title>/etc/rc.d/init.d/sysctl</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin sysctl
#
# Description : File uses /etc/sysctl.conf to set kernel runtime
#               parameters
#
# Authors     : Nathan Coulson (nathan@linuxfromscratch.org)
#               Matthew Burgress (matthew@linuxfromscratch.org)
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            sysctl
# Required-Start:      mountvirtfs
# Should-Start:        console
# Required-Stop:
# Should-Stop:
# Default-Start:       S
# Default-Stop:
# Short-Description:   Makes changes to the proc filesystem
# Description:         Makes changes to the proc filesystem as defined in
#                      /etc/sysctl.conf.  See 'man sysctl(8)'.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   start)
      if [ -f "/etc/sysctl.conf" ]; then
         log_info_msg "Setting kernel runtime parameters..."
         sysctl -q -p
         evaluate_retval
      fi
      ;;

   status)
      sysctl -a
      ;;

   *)
      echo "Usage: ${0} {start|status}"
      exit 1
      ;;
esac

exit 0

# End sysctl
</screen>
  </sect1>

  <sect1 id="sysklogd" role="wrap">
    <title>/etc/rc.d/init.d/sysklogd</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin sysklogd
#
# Description : Sysklogd loader
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            $syslog
# Required-Start:      $first localnet
# Should-Start:
# Required-Stop:       $local_fs
# Should-Stop:         sendsignals
# Default-Start:       3 4 5
# Default-Stop:        0 1 2 6
# Short-Description:   Starts kernel and system log daemons.
# Description:         Starts kernel and system log daemons.
#                      /etc/fstab.
# X-LFS-Provided-By:   LFS
### END INIT INFO

# Note: sysklogd is not started in runlevel 2 due to possible
# remote logging configurations

. /lib/lsb/init-functions

case "${1}" in
   start)
      log_info_msg "Starting system log daemon..."
      parms=${SYSKLOGD_PARMS-'-m 0'}
      start_daemon /sbin/syslogd $parms
      evaluate_retval

      log_info_msg "Starting kernel log daemon..."
      start_daemon /sbin/klogd
      evaluate_retval
      ;;

   stop)
      log_info_msg "Stopping kernel log daemon..."
      killproc /sbin/klogd
      evaluate_retval

      log_info_msg "Stopping system log daemon..."
      killproc /sbin/syslogd
      evaluate_retval
      ;;

   reload)
      log_info_msg "Reloading system log daemon config file..."
      pid=`pidofproc syslogd`
      kill -HUP "${pid}"
      evaluate_retval
      ;;

   restart)
      ${0} stop
      sleep 1
      ${0} start
      ;;

   status)
      statusproc /sbin/syslogd
      statusproc klogd
      ;;

   *)
      echo "Usage: ${0} {start|stop|reload|restart|status}"
      exit 1
      ;;
esac

exit 0

# End sysklogd
</screen>
  </sect1>

  <sect1 id="network" role="wrap">
    <title>/etc/rc.d/init.d/network</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin network
#
# Description : Network Control Script
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               Nathan Coulson - nathan@linuxfromscratch.org
#               Kevin P. Fleming - kpfleming@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            $network
# Required-Start:      $local_fs localnet swap
# Should-Start:        $syslog firewalld iptables nftables
# Required-Stop:       $local_fs localnet swap
# Should-Stop:         $syslog firewalld iptables nftables
# Default-Start:       3 4 5
# Default-Stop:        0 1 2 6
# Short-Description:   Starts and configures network interfaces.
# Description:         Starts and configures network interfaces.
# X-LFS-Provided-By:   LFS
### END INIT INFO

case "${1}" in
   start)
      # Start all network interfaces
      for file in /etc/sysconfig/ifconfig.*
      do
         interface=${file##*/ifconfig.}

         # Skip if $file is * (because nothing was found)
         if [ "${interface}" = "*" ]; then continue; fi

         /sbin/ifup ${interface}
      done
      ;;

   stop)
      # Unmount any network mounted file systems
       umount --all --force --types nfs,cifs,nfs4 

      # Reverse list
      net_files=""
      for file in  /etc/sysconfig/ifconfig.*
      do
         net_files="${file} ${net_files}"
      done

      # Stop all network interfaces
      for file in ${net_files}
      do
         interface=${file##*/ifconfig.}

         # Skip if $file is * (because nothing was found)
         if [ "${interface}" = "*" ]; then continue; fi

         # See if interface exists
         if [ ! -e /sys/class/net/$interface ]; then continue; fi

         # Is interface UP?
         ip link show $interface 2&gt;/dev/null | grep -q "state UP"
         if [ $? -ne 0 ];  then continue; fi

         /sbin/ifdown ${interface}
      done
      ;;

   restart)
      ${0} stop
      sleep 1
      ${0} start
      ;;

   *)
      echo "Usage: ${0} {start|stop|restart}"
      exit 1
      ;;
esac

exit 0

# End network
</screen>
  </sect1>

  <sect1 id="sendsignals" role="wrap">
    <title>/etc/rc.d/init.d/sendsignals</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin sendsignals
#
# Description : Sendsignals Script
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            sendsignals
# Required-Start:
# Should-Start:
# Required-Stop:       $local_fs swap localnet
# Should-Stop:
# Default-Start:
# Default-Stop:        0 6
# Short-Description:   Attempts to kill remaining processes.
# Description:         Attempts to kill remaining processes.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   stop)
      omit=$(pidof mdmon)
      [ -n "$omit" ] &amp;&amp; omit="-o $omit"

      log_info_msg "Sending all processes the TERM signal..."
      killall5 -15 $omit
      error_value=${?}

      sleep ${KILLDELAY}

      if [ "${error_value}" = 0 -o "${error_value}" = 2 ]; then
         log_success_msg
      else
         log_failure_msg
      fi

      log_info_msg "Sending all processes the KILL signal..."
      killall5 -9 $omit
      error_value=${?}

      sleep ${KILLDELAY}

      if [ "${error_value}" = 0 -o "${error_value}" = 2 ]; then
         log_success_msg
      else
         log_failure_msg
      fi
      ;;

   *)
      echo "Usage: ${0} {stop}"
      exit 1
      ;;

esac

exit 0

# End sendsignals
</screen>
  </sect1>

  <sect1 id="rebootscript" role="wrap">
    <title>/etc/rc.d/init.d/reboot</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin reboot
#
# Description : Reboot Scripts
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            reboot
# Required-Start:
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start:       6
# Default-Stop:
# Short-Description:   Reboots the system.
# Description:         Reboots the System.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   stop)
      log_info_msg "Restarting system..."
      reboot -d -f -i
      ;;

   *)
      echo "Usage: ${0} {stop}"
      exit 1
      ;;

esac

# End reboot
</screen>
  </sect1>

  <sect1 id="haltscript" role="wrap">
    <title>/etc/rc.d/init.d/halt</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin halt
#
# Description : Halt Script
#
# Authors     : Gerard Beekmans - gerard@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

### BEGIN INIT INFO
# Provides:            halt
# Required-Start:
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start:       0
# Default-Stop:
# Short-Description:   Halts the system.
# Description:         Halts the System.
# X-LFS-Provided-By:   LFS
### END INIT INFO

case "${1}" in
   stop)
      halt -d -f -i -p
      ;;

   *)
      echo "Usage: {stop}"
      exit 1
      ;;
esac

# End halt
</screen>
  </sect1>

  <sect1 id="template" role="wrap">
    <title>/etc/rc.d/init.d/template</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin scriptname
#
# Description :
#
# Authors     :
#
# Version     : LFS x.x
#
# Notes       :
#
########################################################################

### BEGIN INIT INFO
# Provides:            template
# Required-Start:
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start:
# Default-Stop:
# Short-Description:
# Description:
# X-LFS-Provided-By:
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   start)
      log_info_msg "Starting..."
      start_daemon fully_qualified_path
      ;;

   stop)
      log_info_msg "Stopping..."
      killproc fully_qualified_path
      ;;

   restart)
      ${0} stop
      sleep 1
      ${0} start
      ;;

   *)
      echo "Usage: ${0} {start|stop|restart}"
      exit 1
      ;;
esac

exit 0

# End scriptname
</screen>
  </sect1>

  <sect1 id="modulessys" role="wrap">
    <title>/etc/sysconfig/modules</title>
    <screen format="linespecific">########################################################################
# Begin /etc/sysconfig/modules
#
# Description : Module auto-loading configuration
#
# Authors     :
#
# Version     : 00.00
#
# Notes       : The syntax of this file is as follows:
#          &lt;module&gt; [&lt;arg1&gt; &lt;arg2&gt; ...]
#
# Each module should be on its own line, and any options that you want
# passed to the module should follow it.  The line deliminator is either
# a space or a tab.
########################################################################

# End /etc/sysconfig/modules
</screen>
  </sect1>

  <sect1 id="createfiles" role="wrap">
    <title>/etc/sysconfig/createfiles</title>
    <screen format="linespecific">########################################################################
# Begin /etc/sysconfig/createfiles
#
# Description : Createfiles script config file
#
# Authors     :
#
# Version     : 00.00
#
# Notes       : The syntax of this file is as follows:
#         if type is equal to "file" or "dir"
#          &lt;filename&gt; &lt;type&gt; &lt;permissions&gt; &lt;user&gt; &lt;group&gt;
#         if type is equal to "dev"
#          &lt;filename&gt; &lt;type&gt; &lt;permissions&gt; &lt;user&gt; &lt;group&gt; &lt;devtype&gt; 
#             &lt;major&gt; &lt;minor&gt;
#
#         &lt;filename&gt; is the name of the file which is to be created
#         &lt;type&gt; is either file, dir, or dev.
#               file creates a new file
#               dir creates a new directory
#               dev creates a new device
#         &lt;devtype&gt; is either block, char or pipe
#               block creates a block device
#               char creates a character deivce
#               pipe creates a pipe, this will ignore the &lt;major&gt; and 
#           &lt;minor&gt; fields
#         &lt;major&gt; and &lt;minor&gt; are the major and minor numbers used for 
#     the device.
########################################################################

# End /etc/sysconfig/createfiles
</screen>
  </sect1>

  <sect1 id="config-udev-retry" role="wrap">
    <title>/etc/sysconfig/udev-retry</title>
    <screen format="linespecific">########################################################################
# Begin /etc/sysconfig/udev_retry
#
# Description : udev_retry script configuration
#
# Authors     :
#
# Version     : 00.00
#
# Notes       : Each subsystem that may need to be re-triggered after mountfs
#               runs should be listed in this file.  Probable subsystems to be
#               listed here are rtc (due to /var/lib/hwclock/adjtime) and sound
#               (due to both /var/lib/alsa/asound.state and /usr/sbin/alsactl).
#               Entries are whitespace-separated.
########################################################################

rtc

# End /etc/sysconfig/udev_retry
</screen>
  </sect1>

  <sect1 id="ifup" role="wrap">
    <title>/sbin/ifup</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin /sbin/ifup
#
# Description : Interface Up
#
# Authors     : Nathan Coulson - nathan@linuxfromscratch.org
#               Kevin P. Fleming - kpfleming@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
#
# Version     : LFS 7.7
#
# Notes       : The IFCONFIG variable is passed to the SERVICE script
#               in the /lib/services directory, to indicate what file the
#               service should source to get interface specifications.
#
########################################################################

up()
{
  log_info_msg "Bringing up the ${1} interface..."

  if ip link show $1 &gt; /dev/null 2&gt;&amp;1; then
     link_status=`ip link show $1`

     if [ -n "${link_status}" ]; then
        if ! echo "${link_status}" | grep -q UP; then
           ip link set $1 up
        fi
     fi

  else
     log_failure_msg "Interface ${IFACE} doesn't exist."
     exit 1
  fi

  evaluate_retval
}

RELEASE="7.7"

USAGE="Usage: $0 [ -hV ] [--help] [--version] interface"
VERSTR="LFS ifup, version ${RELEASE}"

while [ $# -gt 0 ]; do
   case "$1" in
      --help | -h)     help="y"; break ;;

      --version | -V)  echo "${VERSTR}"; exit 0 ;;
   
      -*)              echo "ifup: ${1}: invalid option" &gt;&amp;2
                       echo "${USAGE}" &gt;&amp; 2
                       exit 2 ;;
                       
      *)               break ;;
   esac
done

if [ -n "$help" ]; then
   echo "${VERSTR}"
   echo "${USAGE}"
   echo
   cat &lt;&lt; HERE_EOF
ifup is used to bring up a network interface.  The interface
parameter, e.g. eth0 or eth0:2, must match the trailing part of the
interface specifications file, e.g. /etc/sysconfig/ifconfig.eth0:2.

HERE_EOF
   exit 0
fi

file=/etc/sysconfig/ifconfig.${1}

# Skip backup files
[ "${file}" = "${file%""~""}" ] || exit 0

. /lib/lsb/init-functions

if [ ! -r "${file}" ]; then
   log_failure_msg "Unable to bring up ${1} interface! ${file} is missing or cannot be accessed."
   exit 1
fi

.  $file

if [ "$IFACE" = "" ]; then
   log_failure_msg "Unable to bring up ${1} interface! ${file} does not define an interface [IFACE]."
   exit 1
fi

# Do not process this service if started by boot, and ONBOOT
# is not set to yes
if [ "${IN_BOOT}" = "1" -a "${ONBOOT}" != "yes" ]; then
   exit 0
fi

# Bring up the interface
if [ "$VIRTINT" != "yes" ]; then
   up ${IFACE}
fi

for S in ${SERVICE}; do
  if [ ! -x "/lib/services/${S}" ]; then
    MSG="\nUnable to process ${file}.  Either " 
    MSG="${MSG}the SERVICE '${S} was not present "
    MSG="${MSG}or cannot be executed."
    log_failure_msg "$MSG"
    exit 1
  fi
done

if [ "${SERVICE}" = "wpa" ]; then log_success_msg; fi

# Create/configure the interface
for S in ${SERVICE}; do 
  IFCONFIG=${file} /lib/services/${S} ${IFACE} up
done

# Set link up virtual interfaces
if [ "${VIRTINT}" == "yes" ]; then
   up ${IFACE}
fi

# Bring up any additional interface components
for I in $INTERFACE_COMPONENTS; do up $I; done

# Set MTU if requested. Check if MTU has a "good" value.
if test -n "${MTU}"; then
   if [[ ${MTU} =~ ^[0-9]+$ ]] &amp;&amp; [[ $MTU -ge 68 ]] ; then
      for I in $IFACE $INTERFACE_COMPONENTS; do 
         ip link set dev $I mtu $MTU; 
      done
   else
      log_info_msg2 "Invalid MTU $MTU"
   fi
fi 

# Set the route default gateway if requested
if [ -n "${GATEWAY}" ]; then
   if ip route | grep -q default; then
      log_warning_msg "Gateway already setup; skipping."
   else
      log_info_msg "Adding default gateway ${GATEWAY} to the ${IFACE} interface..."
      ip route add default via ${GATEWAY} dev ${IFACE}
      evaluate_retval
   fi
fi

# End /sbin/ifup
</screen>
  </sect1>

  <sect1 id="ifdown" role="wrap">
    <title>/sbin/ifdown</title>
    <screen format="linespecific">#!/bin/bash 
########################################################################
# Begin /sbin/ifdown
#
# Description : Interface Down
#
# Authors     : Nathan Coulson - nathan@linuxfromscratch.org
#               Kevin P. Fleming - kpfleming@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
# Notes       : the IFCONFIG variable is passed to the scripts found
#               in the /lib/services directory, to indicate what file the
#               service should source to get interface specifications.
#
########################################################################

RELEASE="7.0"

USAGE="Usage: $0 [ -hV ] [--help] [--version] interface"
VERSTR="LFS ifdown, version ${RELEASE}"

while [ $# -gt 0 ]; do
   case "$1" in
      --help | -h)     help="y"; break ;;

      --version | -V)  echo "${VERSTR}"; exit 0 ;;

      -*)              echo "ifup: ${1}: invalid option" &gt;&amp;2
                       echo "${USAGE}" &gt;&amp; 2
                       exit 2 ;;
                    
      *)               break ;;
   esac
done

if [ -n "$help" ]; then
   echo "${VERSTR}"
   echo "${USAGE}"
   echo
   cat &lt;&lt; HERE_EOF
ifdown is used to bring down a network interface.  The interface
parameter, e.g. eth0 or eth0:2, must match the trailing part of the
interface specifications file, e.g. /etc/sysconfig/ifconfig.eth0:2.

HERE_EOF
   exit 0
fi

file=/etc/sysconfig/ifconfig.${1}

# Skip backup files
[ "${file}" = "${file%""~""}" ] || exit 0

. /lib/lsb/init-functions 

if [ ! -r "${file}" ]; then
   log_warning_msg "${file} is missing or cannot be accessed."
   exit 1
fi

. ${file}

if [ "$IFACE" = "" ]; then
   log_failure_msg "${file} does not define an interface [IFACE]."
   exit 1
fi

# We only need to first service to bring down the interface
S=`echo ${SERVICE} | cut -f1 -d" "`

if ip link show ${IFACE} &gt; /dev/null 2&gt;&amp;1; then
   if [ -n "${S}" -a -x "/lib/services/${S}" ]; then
     IFCONFIG=${file} /lib/services/${S} ${IFACE} down
   else
     MSG="Unable to process ${file}.  Either "
     MSG="${MSG}the SERVICE variable was not set "
     MSG="${MSG}or the specified service cannot be executed."
     log_failure_msg "$MSG"
     exit 1
  fi
else
   log_warning_msg "Interface ${1} doesn't exist."
fi

# Leave the interface up if there are additional interfaces in the device
link_status=`ip link show ${IFACE} 2&gt;/dev/null`

if [ -n "${link_status}" ]; then
   if [ "$(echo "${link_status}" | grep UP)" != "" ]; then
      if [ "$(ip addr show ${IFACE} | grep 'inet ')" == ""  ]; then
         log_info_msg "Bringing down the ${IFACE} interface..."
         ip link set ${IFACE} down
         evaluate_retval
      fi
   fi
fi

# End /sbin/ifdown
</screen>
  </sect1>

  <sect1 id="ipv4static" role="wrap">
    <title>/lib/services/ipv4-static</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin /lib/services/ipv4-static
#
# Description : IPV4 Static Boot Script
#
# Authors     : Nathan Coulson - nathan@linuxfromscratch.org
#               Kevin P. Fleming - kpfleming@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

. /lib/lsb/init-functions
. ${IFCONFIG}

if [ -z "${IP}" ]; then
   log_failure_msg "\nIP variable missing from ${IFCONFIG}, cannot continue."
   exit 1
fi

if [ -z "${PREFIX}" -a -z "${PEER}" ]; then
   log_warning_msg "\nPREFIX variable missing from ${IFCONFIG}, assuming 24."
   PREFIX=24
   args="${args} ${IP}/${PREFIX}"

elif [ -n "${PREFIX}" -a -n "${PEER}" ]; then
   log_failure_msg "\nPREFIX and PEER both specified in ${IFCONFIG}, cannot continue."
   exit 1

elif [ -n "${PREFIX}" ]; then
   args="${args} ${IP}/${PREFIX}"

elif [ -n "${PEER}" ]; then
   args="${args} ${IP} peer ${PEER}"
fi

if [ -n "${LABEL}" ]; then
   args="${args} label ${LABEL}"
fi

if [ -n "${BROADCAST}" ]; then
   args="${args} broadcast ${BROADCAST}"
fi

case "${2}" in
   up)
      if [ "$(ip addr show ${1} 2&gt;/dev/null | grep ${IP}/)" = "" ]; then
         log_info_msg "Adding IPv4 address ${IP} to the ${1} interface..."
         ip addr add ${args} dev ${1}
         evaluate_retval
      else
         log_warning_msg "Cannot add IPv4 address ${IP} to ${1}.  Already present."
      fi
   ;;

   down)
      if [ "$(ip addr show ${1} 2&gt;/dev/null | grep ${IP}/)" != "" ]; then
         log_info_msg "Removing IPv4 address ${IP} from the ${1} interface..."
         ip addr del ${args} dev ${1}
         evaluate_retval
      fi

      if [ -n "${GATEWAY}" ]; then
         # Only remove the gateway if there are no remaining ipv4 addresses
         if [ "$(ip addr show ${1} 2&gt;/dev/null | grep 'inet ')" != "" ]; then
            log_info_msg "Removing default gateway..."
            ip route del default
            evaluate_retval
         fi
      fi
   ;;

   *)
      echo "Usage: ${0} [interface] {up|down}"
      exit 1
   ;;
esac

# End /lib/services/ipv4-static
</screen>
  </sect1>

  <sect1 id="ipv4route" role="wrap">
    <title>/lib/services/ipv4-static-route</title>
    <screen format="linespecific">#!/bin/sh
########################################################################
# Begin /lib/services/ipv4-static-route
#
# Description : IPV4 Static Route Script
#
# Authors     : Kevin P. Fleming - kpfleming@linuxfromscratch.org
#               DJ Lucas - dj@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.0
#
########################################################################

. /lib/lsb/init-functions
. ${IFCONFIG}

case "${TYPE}" in
   ("" | "network")
      need_ip=1
      need_gateway=1
   ;;

   ("default")
      need_gateway=1
      args="${args} default"
      desc="default"
   ;;

   ("host")
      need_ip=1
   ;;

   ("unreachable")
      need_ip=1
      args="${args} unreachable"
      desc="unreachable "
   ;;

   (*)
      log_failure_msg "Unknown route type (${TYPE}) in ${IFCONFIG}, cannot continue."
      exit 1
   ;;
esac

if [ -n "${GATEWAY}" ]; then
   MSG="The GATEWAY variable cannot be set in ${IFCONFIG} for static routes.\n"
   log_failure_msg "$MSG Use STATIC_GATEWAY only, cannot continue"
   exit 1
fi

if [ -n "${need_ip}" ]; then
   if [ -z "${IP}" ]; then
      log_failure_msg "IP variable missing from ${IFCONFIG}, cannot continue."
      exit 1
   fi

   if [ -z "${PREFIX}" ]; then
      log_failure_msg "PREFIX variable missing from ${IFCONFIG}, cannot continue." 
      exit 1
   fi
   
   args="${args} ${IP}/${PREFIX}"
   desc="${desc}${IP}/${PREFIX}"
fi

if [ -n "${need_gateway}" ]; then
   if [ -z "${STATIC_GATEWAY}" ]; then
      log_failure_msg "STATIC_GATEWAY variable missing from ${IFCONFIG}, cannot continue."
      exit 1
   fi
   args="${args} via ${STATIC_GATEWAY}"
fi

if [ -n "${SOURCE}" ]; then
        args="${args} src ${SOURCE}"
fi

case "${2}" in
   up)
      log_info_msg "Adding '${desc}' route to the ${1} interface..."
      ip route add ${args} dev ${1}
      evaluate_retval
   ;;
   
   down)
      log_info_msg "Removing '${desc}' route from the ${1} interface..."
      ip route del ${args} dev ${1}
      evaluate_retval
   ;;
   
   *)
      echo "Usage: ${0} [interface] {up|down}"
      exit 1
   ;;
esac

# End /lib/services/ipv4-static-route
</screen>
  </sect1>

</appendix>
<appendix id="rules" xreflabel="Appendix E" revision="sysv" xml:base="appendices/udev-rules.xml">
  <?dbhtml dir="scripts"?>
  <?dbhtml filename="eudev-rules.html"?>

  <title>Udev configuration rules</title>

  <para>The rules in this appendix are listed for convenience.  Installation is
  normally done via instructions in <xref linkend="ch-system-eudev"/>.  </para>

  <sect1 id="lfsrules" role="wrap">
    <title>55-lfs.rules</title>
    <screen format="linespecific"># /etc/udev/rules.d/55-lfs.rules: Rule definitions for LFS.

# Core kernel devices

# This causes the system clock to be set as soon as /dev/rtc becomes available.
SUBSYSTEM=="rtc", ACTION=="add", MODE="0644", RUN+="/etc/rc.d/init.d/setclock start"
KERNEL=="rtc", ACTION=="add", MODE="0644", RUN+="/etc/rc.d/init.d/setclock start"

# Comms devices

KERNEL=="ippp[0-9]*",       GROUP="dialout"
KERNEL=="isdn[0-9]*",       GROUP="dialout"
KERNEL=="isdnctrl[0-9]*",   GROUP="dialout"
KERNEL=="dcbri[0-9]*",      GROUP="dialout"
</screen>
  </sect1>

</appendix>

<appendix id="Licenses" xreflabel="Appendix E" xml:base="appendices/license.xml">
  <?dbhtml dir="appendices"?>
  <?dbhtml filename="licenses.html"?>

  <title>LFS Licenses</title>

  <para>This book is licensed under the Creative Commons
  Attribution-NonCommercial-ShareAlike 2.0 License.</para>

  <para>Computer instructions may be extracted from the book under the MIT
  License.</para>


  <sect1 id="CC" xreflabel="Creative Commons License">
  <?dbhtml filename="creat-comm.html"?>

  <title>Creative Commons License</title>

  <para role="title">Creative Commons Legal Code</para>

  <para role="title">Attribution-NonCommercial-ShareAlike 2.0</para>

  <important>
    <para>CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT
    PROVIDE LEGAL SERVICES. DISTRIBUTION OF THIS LICENSE DOES NOT CREATE AN
    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS INFORMATION ON AN
    "AS-IS" BASIS.  CREATIVE COMMONS MAKES NO WARRANTIES REGARDING THE INFORMATION
    PROVIDED, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM ITS
    USE.</para>
  </important>

  <para role="title">License</para>

  <para>THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE
  COMMONS PUBLIC LICENSE ("CCPL" OR "LICENSE"). THE WORK IS PROTECTED BY
  COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS
  AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.</para>

  <para>BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE
  BOUND BY THE TERMS OF THIS LICENSE. THE LICENSOR GRANTS YOU THE RIGHTS
  CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND
  CONDITIONS.</para>

  <orderedlist inheritnum="ignore" continuation="restarts">
    <?dbfo label-width="1.5em"?>
    <listitem>
      <para>Definitions</para>

      <orderedlist inheritnum="ignore" continuation="restarts">
        <listitem>
          <para>"Collective Work" means a work, such as a periodical issue, anthology or
          encyclopedia, in which the Work in its entirety in unmodified form, along
          with a number of other contributions, constituting separate and independent
          works in themselves, are assembled into a collective whole. A work that
          constitutes a Collective Work will not be considered a Derivative Work (as
          defined below) for the purposes of this License.</para>
        </listitem>

        <listitem>
          <para>"Derivative Work" means a work based upon the Work or upon
          the Work and other pre-existing works, such as a translation, musical
          arrangement, dramatization, fictionalization, motion picture version, sound
          recording, art reproduction, abridgment, condensation, or any other form in
          which the Work may be recast, transformed, or adapted, except that a work
          that constitutes a Collective Work will not be considered a Derivative Work
          for the purpose of this License. For the avoidance of doubt, where the Work
          is a musical composition or sound recording, the synchronization of the Work
          in timed-relation with a moving image ("synching") will be considered a
          Derivative Work for the purpose of this License.</para>
        </listitem>

        <listitem>
          <para>"Licensor" means the individual or entity that offers the
          Work under the terms of this License.</para>
        </listitem>

        <listitem>
          <para>"Original Author" means the individual or entity who created
          the Work.</para>
        </listitem>

        <listitem>
          <para>"Work" means the copyrightable work of authorship offered
          under the terms of this License.</para>
        </listitem>

        <listitem>
          <para>"You" means an individual or entity exercising rights under
          this License who has not previously violated the terms of this License with
          respect to the Work, or who has received express permission from the
          Licensor to exercise rights under this License despite a previous
          violation.</para>
        </listitem>

        <listitem>
          <para>"License Elements" means the following high-level license
          attributes as selected by Licensor and indicated in the title of this
          License: Attribution, Noncommercial, ShareAlike.</para>
        </listitem>

      </orderedlist>
    </listitem>

    <listitem>
      <para>Fair Use Rights. Nothing in this license is intended to reduce,
      limit, or restrict any rights arising from fair use, first sale or other
      limitations on the exclusive rights of the copyright owner under copyright law
      or other applicable laws.</para>
    </listitem>


    <listitem>
      <para>License Grant. Subject to the terms and conditions of this
      License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive,
      perpetual (for the duration of the applicable copyright) license to exercise
      the rights in the Work as stated below:</para>

      <orderedlist inheritnum="ignore" continuation="restarts">

        <listitem>
          <para>to reproduce the Work, to incorporate the Work into one or
          more Collective Works, and to reproduce the Work as incorporated in the
          Collective Works;</para>
        </listitem>

        <listitem>
          <para>to create and reproduce Derivative Works;</para>
        </listitem>

        <listitem>
          <para>to distribute copies or phonorecords of, display publicly,
          perform publicly, and perform publicly by means of a digital audio
          transmission the Work including as incorporated in Collective
          Works;</para>
        </listitem>

        <listitem>
          <para>to distribute copies or phonorecords of, display publicly,
          perform publicly, and perform publicly by means of a digital audio
          transmission Derivative Works;</para>
        </listitem>

      </orderedlist>

      <para>The above rights may be exercised in all media and formats whether now
      known or hereafter devised. The above rights include the right to make such
      modifications as are technically necessary to exercise the rights in other
      media and formats. All rights not expressly granted by Licensor are hereby
      reserved, including but not limited to the rights set forth in Sections 4(e)
      and 4(f).</para>
    </listitem>

    <listitem>
      <para>Restrictions.The license granted in Section 3 above is
      expressly made subject to and limited by the following
      restrictions:</para>

      <orderedlist inheritnum="ignore" continuation="restarts">

        <listitem>
          <para>You may distribute, publicly display, publicly perform, or
          publicly digitally perform the Work only under the terms of this License, and
          You must include a copy of, or the Uniform Resource Identifier for, this
          License with every copy or phonorecord of the Work You distribute, publicly
          display, publicly perform, or publicly digitally perform. You may not offer
          or impose any terms on the Work that alter or restrict the terms of this
          License or the recipients' exercise of the rights granted hereunder. You may
          not sublicense the Work. You must keep intact all notices that refer to this
          License and to the disclaimer of warranties. You may not distribute, publicly
          display, publicly perform, or publicly digitally perform the Work with any
          technological measures that control access or use of the Work in a manner
          inconsistent with the terms of this License Agreement. The above applies to
          the Work as incorporated in a Collective Work, but this does not require the
          Collective Work apart from the Work itself to be made subject to the terms of
          this License. If You create a Collective Work, upon notice from any Licensor
          You must, to the extent practicable, remove from the Collective Work any
          reference to such Licensor or the Original Author, as requested. If You
          create a Derivative Work, upon notice from any Licensor You must, to the
          extent practicable, remove from the Derivative Work any reference to such
          Licensor or the Original Author, as requested.</para>
        </listitem>

        <listitem>
          <para>You may distribute, publicly display, publicly perform, or
          publicly digitally perform a Derivative Work only under the terms of this
          License, a later version of this License with the same License Elements as
          this License, or a Creative Commons iCommons license that contains the same
          License Elements as this License (e.g. Attribution-NonCommercial-ShareAlike
          2.0 Japan). You must include a copy of, or the Uniform Resource Identifier
          for, this License or other license specified in the previous sentence with
          every copy or phonorecord of each Derivative Work You distribute, publicly
          display, publicly perform, or publicly digitally perform. You may not offer
          or impose any terms on the Derivative Works that alter or restrict the terms
          of this License or the recipients' exercise of the rights granted hereunder,
          and You must keep intact all notices that refer to this License and to the
          disclaimer of warranties. You may not distribute, publicly display, publicly
          perform, or publicly digitally perform the Derivative Work with any
          technological measures that control access or use of the Work in a manner
          inconsistent with the terms of this License Agreement. The above applies to
          the Derivative Work as incorporated in a Collective Work, but this does not
          require the Collective Work apart from the Derivative Work itself to be made
          subject to the terms of this License.</para>
        </listitem>

        <listitem>
          <para>You may not exercise any of the rights granted to You in
          Section 3 above in any manner that is primarily intended for or directed
          toward commercial advantage or private monetary compensation. The exchange of
          the Work for other copyrighted works by means of digital file-sharing or
          otherwise shall not be considered to be intended for or directed toward
          commercial advantage or private monetary compensation, provided there is no
          payment of any monetary compensation in connection with the exchange of
          copyrighted works.</para>
        </listitem>

        <listitem>
          <para>If you distribute, publicly display, publicly perform, or
          publicly digitally perform the Work or any Derivative Works or Collective
          Works, You must keep intact all copyright notices for the Work and give the
          Original Author credit reasonable to the medium or means You are utilizing by
          conveying the name (or pseudonym if applicable) of the Original Author if
          supplied; the title of the Work if supplied; to the extent reasonably
          practicable, the Uniform Resource Identifier, if any, that Licensor specifies
          to be associated with the Work, unless such URI does not refer to the
          copyright notice or licensing information for the Work; and in the case of a
          Derivative Work, a credit identifying the use of the Work in the Derivative
          Work (e.g., "French translation of the Work by Original Author," or
          "Screenplay based on original Work by Original Author"). Such credit may be
          implemented in any reasonable manner; provided, however, that in the case of
          a Derivative Work or Collective Work, at a minimum such credit will appear
          where any other comparable authorship credit appears and in a manner at least
          as prominent as such other comparable authorship credit.</para>
        </listitem>


        <listitem>
          <para>For the avoidance of doubt, where the Work is a musical
          composition:</para>

          <orderedlist inheritnum="ignore" continuation="restarts">

            <listitem>
              <para>Performance Royalties Under Blanket Licenses. Licensor
              reserves the exclusive right to collect, whether individually or via a
              performance rights society (e.g. ASCAP, BMI, SESAC), royalties for the
              public performance or public digital performance (e.g. webcast) of the
              Work if that performance is primarily intended for or directed toward
              commercial advantage or private monetary compensation.</para>
            </listitem>

            <listitem>
              <para>Mechanical Rights and Statutory Royalties. Licensor
              reserves the exclusive right to collect, whether individually or via a
              music rights agency or designated agent (e.g. Harry Fox Agency),
              royalties    for any phonorecord You create from the Work ("cover
              version") and distribute, subject to the compulsory license created
              by 17 USC Section 115 of the US Copyright Act (or the equivalent in
              other jurisdictions), if Your distribution of such cover version is primarily
              intended for or directed toward commercial advantage or private monetary
              compensation.  6. Webcasting Rights and Statutory Royalties.  For the
              avoidance of doubt, where the Work is a sound recording, Licensor
              reserves the exclusive right to collect, whether individually or via a
              performance-rights society (e.g. SoundExchange), royalties for the public
              digital performance (e.g. webcast) of the Work, subject to the compulsory
              license created by 17 USC Section 114 of the US Copyright Act (or the
              equivalent in other jurisdictions), if Your public digital performance is
              primarily intended for or directed toward commercial advantage or private
              monetary compensation.</para>
            </listitem>

          </orderedlist>
        </listitem>

        <listitem>
          <para>Webcasting Rights and Statutory Royalties. For the
          avoidance of doubt, where the Work is a sound recording, Licensor reserves
          the exclusive right to collect, whether individually or via a
          performance-rights society (e.g.  SoundExchange), royalties for the public
          digital performance (e.g. webcast) of the Work, subject to the compulsory
          license created by 17 USC Section 114 of the US Copyright Act (or the
          equivalent in other jurisdictions), if Your public digital performance is
          primarily intended for or directed toward commercial advantage or private
          monetary compensation.</para>
        </listitem>

      </orderedlist>
    </listitem>

    <listitem>
      <para>Representations, Warranties and Disclaimer</para>

      <para>UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR
      OFFERS THE WORK AS-IS AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND
      CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING,
      WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTIBILITY, FITNESS FOR A
      PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS,
      ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE.
      SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH
      EXCLUSION MAY NOT APPLY TO YOU.</para>
    </listitem>

    <listitem>
      <para>Limitation on Liability. EXCEPT TO THE EXTENT REQUIRED BY
      APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY
      FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES
      ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN
      ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</para>
    </listitem>

    <listitem>
      <para>Termination</para>

      <orderedlist inheritnum="ignore" continuation="restarts">

        <listitem>
          <para>This License and the rights granted hereunder will terminate
          automatically upon any breach by You of the terms of this License.
          Individuals or entities who have received Derivative Works or Collective
          Works from You under this License, however, will not have their licenses
          terminated provided such individuals or entities remain in full compliance
          with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any
          termination of this License.</para>
        </listitem>

        <listitem>
          <para>Subject to the above terms and conditions, the license
          granted here is perpetual (for the duration of the applicable copyright in
          the Work).  Notwithstanding the above, Licensor reserves the right to release
          the Work under different license terms or to stop distributing the Work at
          any time; provided, however that any such election will not serve to withdraw
          this License (or any other license that has been, or is required to be,
          granted under the terms of this License), and this License will continue in
          full force and effect unless terminated as stated above.</para>
        </listitem>

      </orderedlist>
    </listitem>

    <listitem>
      <para>Miscellaneous</para>

      <orderedlist inheritnum="ignore" continuation="restarts">

        <listitem>
          <para>Each time You distribute or publicly digitally perform the
          Work or a Collective Work, the Licensor offers to the recipient a license to
          the Work on the same terms and conditions as the license granted to You under
          this License.</para>
        </listitem>

        <listitem>
          <para>Each time You distribute or publicly digitally perform a
          Derivative Work, Licensor offers to the recipient a license to the original
          Work on the same terms and conditions as the license granted to You under
          this License.</para>
        </listitem>

        <listitem>
          <para>If any provision of this License is invalid or unenforceable
          under applicable law, it shall not affect the validity or enforceability of
          the remainder of the terms of this License, and without further action by the
          parties to this agreement, such provision shall be reformed to the minimum
          extent necessary to make such provision valid and
          enforceable.</para>
        </listitem>

        <listitem>
          <para>No term or provision of this License shall be deemed waived
          and no breach consented to unless such waiver or consent shall be in writing
          and signed by the party to be charged with such waiver or
          consent.</para>
        </listitem>

        <listitem>
          <para>This License constitutes the entire agreement between the
          parties with respect to the Work licensed here. There are no understandings,
          agreements or representations with respect to the Work not specified here.
          Licensor shall not be bound by any additional provisions that may appear in
          any communication from You. This License may not be modified without the
          mutual written agreement of the Licensor and You.</para>
        </listitem>


      </orderedlist>
    </listitem>
  </orderedlist>

  <important>
    <para>Creative Commons is not a party to this License, and makes no warranty
    whatsoever in connection with the Work. Creative Commons will not be liable to
    You or any party on any legal theory for any damages whatsoever, including
    without limitation any general, special, incidental or consequential damages
    arising in connection to this license. Notwithstanding the foregoing two (2)
    sentences, if Creative Commons has expressly identified itself as the Licensor
    hereunder, it shall have all rights and obligations of Licensor.</para>

    <para>Except for the limited purpose of indicating to the public that the Work is
    licensed under the CCPL, neither party will use the trademark "Creative
    Commons" or any related trademark or logo of Creative Commons without the prior
    written consent of Creative Commons. Any permitted use will be in compliance
    with Creative Commons' then-current trademark usage guidelines, as may be
    published on its website or otherwise made available upon request from time to
    time.</para>

    <para>Creative Commons may be contacted at <ulink url="http://creativecommons.org/"/>.</para>
  </important>


</sect1>
  <sect1 id="MIT" xreflabel="MIT License">
  <?dbhtml filename="mit.html" ?>

  <title>The MIT License</title>

  <para>Copyright Â© 1999-2021 Gerard Beekmans</para>

  <para>Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:</para>

  <para>The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.</para>

  <para>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.</para>

</sect1>


</appendix>
</part>

<index/>

</book>
